2025-09-11T08:22:42.4391790Z ##[group]Run ruff check .
2025-09-11T08:22:42.4392095Z [36;1mruff check .[0m
2025-09-11T08:22:42.4392317Z [36;1mblack --check .[0m
2025-09-11T08:22:42.4392680Z [36;1mmypy .[0m
2025-09-11T08:22:42.4392876Z [36;1mpytest -q[0m
2025-09-11T08:22:42.4424786Z shell: /usr/bin/bash -e {0}
2025-09-11T08:22:42.4425041Z env:
2025-09-11T08:22:42.4425309Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-09-11T08:22:42.4425753Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-09-11T08:22:42.4426200Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-09-11T08:22:42.4426595Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-09-11T08:22:42.4426971Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-09-11T08:22:42.4427331Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-09-11T08:22:42.4427641Z ##[endgroup]
2025-09-11T08:22:42.4515776Z warning: The top-level linter settings are deprecated in favour of their counterparts in the `lint` section. Please update the following options in `pyproject.toml`:
2025-09-11T08:22:42.4516652Z   - 'ignore' -> 'lint.ignore'
2025-09-11T08:22:42.4516949Z   - 'select' -> 'lint.select'
2025-09-11T08:22:42.4594898Z All checks passed!
2025-09-11T08:22:43.0119392Z All done! ✨ 🍰 ✨
2025-09-11T08:22:43.0119987Z 25 files would be left unchanged.
2025-09-11T08:22:47.7467384Z tests/test_security.py:16: error: Function is missing a return type annotation  [no-untyped-def]
2025-09-11T08:22:47.7468478Z tests/test_security.py:16: note: Use "-> None" if function does not return a value
2025-09-11T08:22:47.7469770Z tests/test_security.py:25: error: Function is missing a return type annotation  [no-untyped-def]
2025-09-11T08:22:47.7470693Z tests/test_security.py:25: note: Use "-> None" if function does not return a value
2025-09-11T08:22:47.7471615Z tests/test_security.py:35: error: Function is missing a return type annotation  [no-untyped-def]
2025-09-11T08:22:47.7472745Z tests/test_security.py:35: note: Use "-> None" if function does not return a value
2025-09-11T08:22:47.7473686Z tests/test_security.py:46: error: Function is missing a return type annotation  [no-untyped-def]
2025-09-11T08:22:47.7474589Z tests/test_security.py:46: note: Use "-> None" if function does not return a value
2025-09-11T08:22:47.7475496Z tests/test_security.py:53: error: Function is missing a return type annotation  [no-untyped-def]
2025-09-11T08:22:47.7476394Z tests/test_security.py:53: note: Use "-> None" if function does not return a value
2025-09-11T08:22:47.7477447Z tests/test_security.py:56: error: Argument 1 to "strip_pii_from_text" has incompatible type "None"; expected "str"  [arg-type]
2025-09-11T08:22:47.7478587Z tests/test_security.py:58: error: Function is missing a return type annotation  [no-untyped-def]
2025-09-11T08:22:47.7479530Z tests/test_security.py:58: note: Use "-> None" if function does not return a value
2025-09-11T08:22:47.7480417Z tests/test_security.py:68: error: Function is missing a return type annotation  [no-untyped-def]
2025-09-11T08:22:47.7481292Z tests/test_security.py:68: note: Use "-> None" if function does not return a value
2025-09-11T08:22:47.7482183Z tests/test_security.py:79: error: Function is missing a return type annotation  [no-untyped-def]
2025-09-11T08:22:47.7483254Z tests/test_security.py:79: note: Use "-> None" if function does not return a value
2025-09-11T08:22:47.7484170Z tests/test_security.py:95: error: Function is missing a return type annotation  [no-untyped-def]
2025-09-11T08:22:47.7485151Z tests/test_security.py:95: note: Use "-> None" if function does not return a value
2025-09-11T08:22:47.7486168Z tests/test_security.py:114: error: Function is missing a return type annotation  [no-untyped-def]
2025-09-11T08:22:47.7487182Z tests/test_security.py:114: note: Use "-> None" if function does not return a value
2025-09-11T08:22:47.7488171Z tests/test_security.py:127: error: Function is missing a return type annotation  [no-untyped-def]
2025-09-11T08:22:47.7489169Z tests/test_security.py:127: note: Use "-> None" if function does not return a value
2025-09-11T08:22:47.7490603Z tests/test_security.py:146: error: Function is missing a return type annotation  [no-untyped-def]
2025-09-11T08:22:47.7491645Z tests/test_security.py:146: note: Use "-> None" if function does not return a value
2025-09-11T08:22:47.7493228Z tests/test_security.py:148: error: Non-overlapping equality check (left operand type: "dict[str, Any]", right operand type: "Literal['not a dict']")  [comparison-overlap]
2025-09-11T08:22:47.7494955Z tests/test_security.py:148: error: Argument 1 to "strip_pii_from_comment" has incompatible type "str"; expected "dict[str, Any]"  [arg-type]
2025-09-11T08:22:47.7496492Z tests/test_security.py:149: error: Argument 1 to "strip_pii_from_comment" has incompatible type "None"; expected "dict[str, Any]"  [arg-type]
2025-09-11T08:22:47.7498130Z tests/test_security.py:150: error: Non-overlapping equality check (left operand type: "dict[str, Any]", right operand type: "Literal[123]")  [comparison-overlap]
2025-09-11T08:22:47.7499781Z tests/test_security.py:150: error: Argument 1 to "strip_pii_from_comment" has incompatible type "int"; expected "dict[str, Any]"  [arg-type]
2025-09-11T08:22:47.7501096Z tests/test_security.py:156: error: Function is missing a return type annotation  [no-untyped-def]
2025-09-11T08:22:47.7502103Z tests/test_security.py:156: note: Use "-> None" if function does not return a value
2025-09-11T08:22:47.7503295Z tests/test_security.py:171: error: Function is missing a return type annotation  [no-untyped-def]
2025-09-11T08:22:47.7504533Z tests/test_security.py:171: note: Use "-> None" if function does not return a value
2025-09-11T08:22:47.7505540Z tests/test_security.py:176: error: Function is missing a return type annotation  [no-untyped-def]
2025-09-11T08:22:47.7506547Z tests/test_security.py:176: note: Use "-> None" if function does not return a value
2025-09-11T08:22:47.7507977Z tests/test_security.py:178: error: Non-overlapping equality check (left operand type: "list[dict[str, Any]]", right operand type: "Literal['not a list']")  [comparison-overlap]
2025-09-11T08:22:47.7509765Z tests/test_security.py:178: error: Argument 1 to "strip_pii_from_comments" has incompatible type "str"; expected "list[dict[str, Any]]"  [arg-type]
2025-09-11T08:22:47.7511359Z tests/test_security.py:179: error: Argument 1 to "strip_pii_from_comments" has incompatible type "None"; expected "list[dict[str, Any]]"  [arg-type]
2025-09-11T08:22:47.7512880Z tests/test_security.py:185: error: Function is missing a return type annotation  [no-untyped-def]
2025-09-11T08:22:47.7513911Z tests/test_security.py:185: note: Use "-> None" if function does not return a value
2025-09-11T08:22:47.7514927Z tests/test_security.py:206: error: Function is missing a return type annotation  [no-untyped-def]
2025-09-11T08:22:47.7515928Z tests/test_security.py:206: note: Use "-> None" if function does not return a value
2025-09-11T08:22:47.7516937Z tests/test_security.py:219: error: Function is missing a return type annotation  [no-untyped-def]
2025-09-11T08:22:47.7517952Z tests/test_security.py:219: note: Use "-> None" if function does not return a value
2025-09-11T08:22:47.7519333Z tests/test_security.py:221: error: Non-overlapping equality check (left operand type: "dict[str, Any]", right operand type: "Literal['not a dict']")  [comparison-overlap]
2025-09-11T08:22:47.7520964Z tests/test_security.py:221: error: Argument 1 to "strip_pii_from_post" has incompatible type "str"; expected "dict[str, Any]"  [arg-type]
2025-09-11T08:22:47.7522421Z tests/test_security.py:222: error: Argument 1 to "strip_pii_from_post" has incompatible type "None"; expected "dict[str, Any]"  [arg-type]
2025-09-11T08:22:47.7523872Z tests/test_security.py:228: error: Function is missing a return type annotation  [no-untyped-def]
2025-09-11T08:22:47.7524896Z tests/test_security.py:228: note: Use "-> None" if function does not return a value
2025-09-11T08:22:47.7525908Z tests/test_security.py:238: error: Function is missing a return type annotation  [no-untyped-def]
2025-09-11T08:22:47.7527330Z tests/test_security.py:238: note: Use "-> None" if function does not return a value
2025-09-11T08:22:47.7528350Z tests/test_security.py:249: error: Function is missing a return type annotation  [no-untyped-def]
2025-09-11T08:22:47.7529357Z tests/test_security.py:249: note: Use "-> None" if function does not return a value
2025-09-11T08:22:47.7530348Z tests/test_security.py:260: error: Function is missing a return type annotation  [no-untyped-def]
2025-09-11T08:22:47.7531343Z tests/test_security.py:260: note: Use "-> None" if function does not return a value
2025-09-11T08:22:47.7532325Z tests/test_security.py:270: error: Function is missing a return type annotation  [no-untyped-def]
2025-09-11T08:22:47.7533519Z tests/test_security.py:270: note: Use "-> None" if function does not return a value
2025-09-11T08:22:47.7534500Z tests/test_security.py:275: error: Function is missing a return type annotation  [no-untyped-def]
2025-09-11T08:22:47.7535482Z tests/test_security.py:275: note: Use "-> None" if function does not return a value
2025-09-11T08:22:47.7536500Z tests/test_security.py:280: error: Function is missing a return type annotation  [no-untyped-def]
2025-09-11T08:22:47.7537488Z tests/test_security.py:280: note: Use "-> None" if function does not return a value
2025-09-11T08:22:47.7538473Z tests/test_security.py:285: error: Function is missing a return type annotation  [no-untyped-def]
2025-09-11T08:22:47.7539470Z tests/test_security.py:285: note: Use "-> None" if function does not return a value
2025-09-11T08:22:47.7541146Z tests/test_security.py:288: error: Argument 1 to "validate_no_pii_remaining" has incompatible type "None"; expected "str"  [arg-type]
2025-09-11T08:22:47.7542655Z tests/test_security.py:290: error: Function is missing a return type annotation  [no-untyped-def]
2025-09-11T08:22:47.7543791Z tests/test_security.py:290: note: Use "-> None" if function does not return a value
2025-09-11T08:22:47.7544810Z tests/test_security.py:295: error: Function is missing a return type annotation  [no-untyped-def]
2025-09-11T08:22:47.7545828Z tests/test_security.py:295: note: Use "-> None" if function does not return a value
2025-09-11T08:22:49.0016460Z reddit_pipeline/utils.py:24: error: Unused "type: ignore" comment  [unused-ignore]
2025-09-11T08:22:49.8634664Z reddit_pipeline/ranking.py:44: error: Returning Any from function declared to return "float"  [no-any-return]
2025-09-11T08:22:49.9084783Z reddit_pipeline/clients/reddit.py:59: error: Argument "url" to "Post" has incompatible type "str"; expected "HttpUrl"  [arg-type]
2025-09-11T08:22:49.9086357Z reddit_pipeline/clients/reddit.py:80: error: Missing type parameters for generic type "dict"  [type-arg]
2025-09-11T08:22:49.9087622Z reddit_pipeline/clients/reddit.py:96: error: Missing type parameters for generic type "dict"  [type-arg]
2025-09-11T08:22:50.4116615Z tests/test_ranking.py:12: error: Function is missing a return type annotation  [no-untyped-def]
2025-09-11T08:22:50.4117741Z tests/test_ranking.py:12: note: Use "-> None" if function does not return a value
2025-09-11T08:22:50.4118778Z tests/test_ranking.py:21: error: Function is missing a return type annotation  [no-untyped-def]
2025-09-11T08:22:50.4119789Z tests/test_ranking.py:21: note: Use "-> None" if function does not return a value
2025-09-11T08:22:50.4120812Z tests/test_ranking.py:29: error: Function is missing a return type annotation  [no-untyped-def]
2025-09-11T08:22:50.4121825Z tests/test_ranking.py:29: note: Use "-> None" if function does not return a value
2025-09-11T08:22:50.4123157Z tests/test_ranking.py:42: error: Function is missing a return type annotation  [no-untyped-def]
2025-09-11T08:22:50.4124184Z tests/test_ranking.py:42: note: Use "-> None" if function does not return a value
2025-09-11T08:22:50.4125173Z tests/test_ranking.py:50: error: Function is missing a return type annotation  [no-untyped-def]
2025-09-11T08:22:50.4126171Z tests/test_ranking.py:50: note: Use "-> None" if function does not return a value
2025-09-11T08:22:50.4127177Z tests/test_ranking.py:56: error: Function is missing a return type annotation  [no-untyped-def]
2025-09-11T08:22:50.4128539Z tests/test_ranking.py:56: note: Use "-> None" if function does not return a value
2025-09-11T08:22:50.4129563Z tests/test_ranking.py:68: error: Function is missing a return type annotation  [no-untyped-def]
2025-09-11T08:22:50.4130592Z tests/test_ranking.py:68: note: Use "-> None" if function does not return a value
2025-09-11T08:22:50.4131714Z tests/test_ranking.py:80: error: Argument "url" to "Post" has incompatible type "str"; expected "HttpUrl"  [arg-type]
2025-09-11T08:22:50.4133218Z tests/test_ranking.py:91: error: Argument "url" to "Post" has incompatible type "str"; expected "HttpUrl"  [arg-type]
2025-09-11T08:22:50.4134458Z tests/test_ranking.py:102: error: Function is missing a return type annotation  [no-untyped-def]
2025-09-11T08:22:50.4135499Z tests/test_ranking.py:102: note: Use "-> None" if function does not return a value
2025-09-11T08:22:50.4136623Z tests/test_ranking.py:114: error: Argument "url" to "Post" has incompatible type "str"; expected "HttpUrl"  [arg-type]
2025-09-11T08:22:50.4137945Z tests/test_ranking.py:125: error: Argument "url" to "Post" has incompatible type "str"; expected "HttpUrl"  [arg-type]
2025-09-11T08:22:50.4139136Z tests/test_ranking.py:136: error: Function is missing a return type annotation  [no-untyped-def]
2025-09-11T08:22:50.4140162Z tests/test_ranking.py:136: note: Use "-> None" if function does not return a value
2025-09-11T08:22:50.4141271Z tests/test_ranking.py:151: error: Argument "url" to "Post" has incompatible type "str"; expected "HttpUrl"  [arg-type]
2025-09-11T08:22:50.4143070Z tests/test_ranking.py:162: error: Argument "url" to "Post" has incompatible type "str"; expected "HttpUrl"  [arg-type]
2025-09-11T08:22:50.4144364Z tests/test_ranking.py:173: error: Function is missing a return type annotation  [no-untyped-def]
2025-09-11T08:22:50.4145383Z tests/test_ranking.py:173: note: Use "-> None" if function does not return a value
2025-09-11T08:22:50.4146387Z tests/test_ranking.py:178: error: Function is missing a return type annotation  [no-untyped-def]
2025-09-11T08:22:50.4147393Z tests/test_ranking.py:178: note: Use "-> None" if function does not return a value
2025-09-11T08:22:50.4148517Z tests/test_ranking.py:189: error: Argument "url" to "Post" has incompatible type "str"; expected "HttpUrl"  [arg-type]
2025-09-11T08:22:50.4149728Z tests/test_dedupe_rank.py:11: error: Missing named argument "text" for "Post"  [call-arg]
2025-09-11T08:22:50.4150906Z tests/test_dedupe_rank.py:15: error: Argument "url" to "Post" has incompatible type "str"; expected "HttpUrl"  [arg-type]
2025-09-11T08:22:50.4152129Z tests/test_dedupe_rank.py:24: error: Function is missing a return type annotation  [no-untyped-def]
2025-09-11T08:22:50.4153388Z tests/test_dedupe_rank.py:24: note: Use "-> None" if function does not return a value
2025-09-11T08:22:50.4154431Z tests/test_dedupe_rank.py:31: error: Function is missing a return type annotation  [no-untyped-def]
2025-09-11T08:22:50.4155497Z tests/test_dedupe_rank.py:31: note: Use "-> None" if function does not return a value
2025-09-11T08:22:50.4212906Z tests/test_dedupe.py:12: error: Function is missing a return type annotation  [no-untyped-def]
2025-09-11T08:22:50.4213952Z tests/test_dedupe.py:12: note: Use "-> None" if function does not return a value
2025-09-11T08:22:50.4215011Z tests/test_dedupe.py:24: error: Argument "url" to "Post" has incompatible type "str"; expected "HttpUrl"  [arg-type]
2025-09-11T08:22:50.4216302Z tests/test_dedupe.py:35: error: Argument "url" to "Post" has incompatible type "str"; expected "HttpUrl"  [arg-type]
2025-09-11T08:22:50.4217508Z tests/test_dedupe.py:46: error: Function is missing a return type annotation  [no-untyped-def]
2025-09-11T08:22:50.4218534Z tests/test_dedupe.py:46: note: Use "-> None" if function does not return a value
2025-09-11T08:22:50.4219637Z tests/test_dedupe.py:58: error: Argument "url" to "Post" has incompatible type "str"; expected "HttpUrl"  [arg-type]
2025-09-11T08:22:50.4221178Z tests/test_dedupe.py:69: error: Argument "url" to "Post" has incompatible type "str"; expected "HttpUrl"  [arg-type]
2025-09-11T08:22:50.4222438Z tests/test_dedupe.py:80: error: Argument "url" to "Post" has incompatible type "str"; expected "HttpUrl"  [arg-type]
2025-09-11T08:22:50.4223797Z tests/test_dedupe.py:94: error: Function is missing a return type annotation  [no-untyped-def]
2025-09-11T08:22:50.4224773Z tests/test_dedupe.py:94: note: Use "-> None" if function does not return a value
2025-09-11T08:22:50.4225861Z tests/test_dedupe.py:106: error: Argument "url" to "Post" has incompatible type "str"; expected "HttpUrl"  [arg-type]
2025-09-11T08:22:50.4227136Z tests/test_dedupe.py:117: error: Argument "url" to "Post" has incompatible type "str"; expected "HttpUrl"  [arg-type]
2025-09-11T08:22:50.4228378Z tests/test_dedupe.py:128: error: Argument "url" to "Post" has incompatible type "str"; expected "HttpUrl"  [arg-type]
2025-09-11T08:22:50.4229532Z tests/test_dedupe.py:140: error: Function is missing a return type annotation  [no-untyped-def]
2025-09-11T08:22:50.4230522Z tests/test_dedupe.py:140: note: Use "-> None" if function does not return a value
2025-09-11T08:22:50.4231492Z tests/test_dedupe.py:145: error: Function is missing a return type annotation  [no-untyped-def]
2025-09-11T08:22:50.4232466Z tests/test_dedupe.py:145: note: Use "-> None" if function does not return a value
2025-09-11T08:22:50.4233708Z tests/test_dedupe.py:156: error: Argument "url" to "Post" has incompatible type "str"; expected "HttpUrl"  [arg-type]
2025-09-11T08:22:50.4235127Z tests/test_dedupe.py:164: error: Function is missing a return type annotation  [no-untyped-def]
2025-09-11T08:22:50.4236121Z tests/test_dedupe.py:164: note: Use "-> None" if function does not return a value
2025-09-11T08:22:50.4237184Z tests/test_dedupe.py:176: error: Argument "url" to "Post" has incompatible type "str"; expected "HttpUrl"  [arg-type]
2025-09-11T08:22:50.4238433Z tests/test_dedupe.py:187: error: Argument "url" to "Post" has incompatible type "str"; expected "HttpUrl"  [arg-type]
2025-09-11T08:22:50.4239688Z tests/test_dedupe.py:198: error: Argument "url" to "Post" has incompatible type "str"; expected "HttpUrl"  [arg-type]
2025-09-11T08:22:50.4240917Z tests/test_dedupe.py:209: error: Argument "url" to "Post" has incompatible type "str"; expected "HttpUrl"  [arg-type]
2025-09-11T08:22:50.4242128Z tests/test_dedupe.py:220: error: Argument "url" to "Post" has incompatible type "str"; expected "HttpUrl"  [arg-type]
2025-09-11T08:22:51.7297363Z reddit_pipeline/config.py:22: error: No overload variant of "Field" matches argument types "EllipsisType", "str"  [call-overload]
2025-09-11T08:22:51.7298947Z reddit_pipeline/config.py:22: note: Possible overload variants:
2025-09-11T08:22:51.7305496Z reddit_pipeline/config.py:22: note:     def Field(default, default: EllipsisType, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
2025-09-11T08:22:51.7314892Z reddit_pipeline/config.py:22: note:     def [_T] Field(default, default: _T, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
2025-09-11T08:22:51.7322060Z reddit_pipeline/config.py:22: note:     def [_T] Field(default_factory, *, default_factory: Callable[[], _T] | Callable[[dict[str, Any]], _T], alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
2025-09-11T08:22:51.7328451Z reddit_pipeline/config.py:22: note:     def Field(alias, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
2025-09-11T08:22:51.7331890Z reddit_pipeline/config.py:23: error: No overload variant of "Field" matches argument types "EllipsisType", "str"  [call-overload]
2025-09-11T08:22:51.7332703Z reddit_pipeline/config.py:23: note: Possible overload variants:
2025-09-11T08:22:51.7335928Z reddit_pipeline/config.py:23: note:     def Field(default, default: EllipsisType, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
2025-09-11T08:22:51.7342014Z reddit_pipeline/config.py:23: note:     def [_T] Field(default, default: _T, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
2025-09-11T08:22:51.7348432Z reddit_pipeline/config.py:23: note:     def [_T] Field(default_factory, *, default_factory: Callable[[], _T] | Callable[[dict[str, Any]], _T], alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
2025-09-11T08:22:51.7354860Z reddit_pipeline/config.py:23: note:     def Field(alias, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
2025-09-11T08:22:51.7358267Z reddit_pipeline/config.py:24: error: No overload variant of "Field" matches argument types "str", "str"  [call-overload]
2025-09-11T08:22:51.7358843Z reddit_pipeline/config.py:24: note: Possible overload variants:
2025-09-11T08:22:51.7362024Z reddit_pipeline/config.py:24: note:     def Field(default, default: EllipsisType, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
2025-09-11T08:22:51.7368287Z reddit_pipeline/config.py:24: note:     def [_T] Field(default, default: _T, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
2025-09-11T08:22:51.7374635Z reddit_pipeline/config.py:24: note:     def [_T] Field(default_factory, *, default_factory: Callable[[], _T] | Callable[[dict[str, Any]], _T], alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
2025-09-11T08:22:51.7380758Z reddit_pipeline/config.py:24: note:     def Field(alias, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
2025-09-11T08:22:51.7402141Z reddit_pipeline/config.py:27: error: No overload variant of "Field" matches argument types "bool", "str"  [call-overload]
2025-09-11T08:22:51.7403281Z reddit_pipeline/config.py:27: note: Possible overload variants:
2025-09-11T08:22:51.7408566Z reddit_pipeline/config.py:27: note:     def Field(default, default: EllipsisType, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
2025-09-11T08:22:51.7419764Z reddit_pipeline/config.py:27: note:     def [_T] Field(default, default: _T, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
2025-09-11T08:22:51.7428295Z reddit_pipeline/config.py:27: note:     def [_T] Field(default_factory, *, default_factory: Callable[[], _T] | Callable[[dict[str, Any]], _T], alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
2025-09-11T08:22:51.7434982Z reddit_pipeline/config.py:27: note:     def Field(alias, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
2025-09-11T08:22:51.7438439Z reddit_pipeline/config.py:28: error: No overload variant of "Field" matches argument types "bool", "str"  [call-overload]
2025-09-11T08:22:51.7439159Z reddit_pipeline/config.py:28: note: Possible overload variants:
2025-09-11T08:22:51.7442370Z reddit_pipeline/config.py:28: note:     def Field(default, default: EllipsisType, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
2025-09-11T08:22:51.7448638Z reddit_pipeline/config.py:28: note:     def [_T] Field(default, default: _T, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
2025-09-11T08:22:51.7455283Z reddit_pipeline/config.py:28: note:     def [_T] Field(default_factory, *, default_factory: Callable[[], _T] | Callable[[dict[str, Any]], _T], alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
2025-09-11T08:22:51.7461624Z reddit_pipeline/config.py:28: note:     def Field(alias, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
2025-09-11T08:22:51.7465233Z reddit_pipeline/config.py:31: error: No overload variant of "Field" matches argument types "None", "str"  [call-overload]
2025-09-11T08:22:51.7465811Z reddit_pipeline/config.py:31: note: Possible overload variants:
2025-09-11T08:22:51.7469153Z reddit_pipeline/config.py:31: note:     def Field(default, default: EllipsisType, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
2025-09-11T08:22:51.7475416Z reddit_pipeline/config.py:31: note:     def [_T] Field(default, default: _T, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
2025-09-11T08:22:51.7481828Z reddit_pipeline/config.py:31: note:     def [_T] Field(default_factory, *, default_factory: Callable[[], _T] | Callable[[dict[str, Any]], _T], alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
2025-09-11T08:22:51.7488140Z reddit_pipeline/config.py:31: note:     def Field(alias, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
2025-09-11T08:22:51.7491674Z reddit_pipeline/config.py:32: error: No overload variant of "Field" matches argument types "str", "str"  [call-overload]
2025-09-11T08:22:51.7492243Z reddit_pipeline/config.py:32: note: Possible overload variants:
2025-09-11T08:22:51.7495618Z reddit_pipeline/config.py:32: note:     def Field(default, default: EllipsisType, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
2025-09-11T08:22:51.7501869Z reddit_pipeline/config.py:32: note:     def [_T] Field(default, default: _T, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
2025-09-11T08:22:51.7508288Z reddit_pipeline/config.py:32: note:     def [_T] Field(default_factory, *, default_factory: Callable[[], _T] | Callable[[dict[str, Any]], _T], alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
2025-09-11T08:22:51.7514742Z reddit_pipeline/config.py:32: note:     def Field(alias, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
2025-09-11T08:22:51.7518299Z reddit_pipeline/config.py:33: error: No overload variant of "Field" matches argument types "str", "str"  [call-overload]
2025-09-11T08:22:51.7518872Z reddit_pipeline/config.py:33: note: Possible overload variants:
2025-09-11T08:22:51.7522061Z reddit_pipeline/config.py:33: note:     def Field(default, default: EllipsisType, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
2025-09-11T08:22:51.7528440Z reddit_pipeline/config.py:33: note:     def [_T] Field(default, default: _T, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
2025-09-11T08:22:51.7534828Z reddit_pipeline/config.py:33: note:     def [_T] Field(default_factory, *, default_factory: Callable[[], _T] | Callable[[dict[str, Any]], _T], alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
2025-09-11T08:22:51.7541136Z reddit_pipeline/config.py:33: note:     def Field(alias, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
2025-09-11T08:22:51.7544756Z reddit_pipeline/config.py:34: error: No overload variant of "Field" matches argument types "str", "str"  [call-overload]
2025-09-11T08:22:51.7545450Z reddit_pipeline/config.py:34: note: Possible overload variants:
2025-09-11T08:22:51.7548656Z reddit_pipeline/config.py:34: note:     def Field(default, default: EllipsisType, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
2025-09-11T08:22:51.7554946Z reddit_pipeline/config.py:34: note:     def [_T] Field(default, default: _T, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
2025-09-11T08:22:51.7561291Z reddit_pipeline/config.py:34: note:     def [_T] Field(default_factory, *, default_factory: Callable[[], _T] | Callable[[dict[str, Any]], _T], alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
2025-09-11T08:22:51.7568015Z reddit_pipeline/config.py:34: note:     def Field(alias, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
2025-09-11T08:22:51.7571602Z reddit_pipeline/config.py:35: error: No overload variant of "Field" matches argument types "int", "str"  [call-overload]
2025-09-11T08:22:51.7572179Z reddit_pipeline/config.py:35: note: Possible overload variants:
2025-09-11T08:22:51.7575580Z reddit_pipeline/config.py:35: note:     def Field(default, default: EllipsisType, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
2025-09-11T08:22:51.7581797Z reddit_pipeline/config.py:35: note:     def [_T] Field(default, default: _T, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
2025-09-11T08:22:51.7588356Z reddit_pipeline/config.py:35: note:     def [_T] Field(default_factory, *, default_factory: Callable[[], _T] | Callable[[dict[str, Any]], _T], alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
2025-09-11T08:22:51.7594604Z reddit_pipeline/config.py:35: note:     def Field(alias, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
2025-09-11T08:22:51.7598158Z reddit_pipeline/config.py:38: error: No overload variant of "Field" matches argument types "int", "str"  [call-overload]
2025-09-11T08:22:51.7598729Z reddit_pipeline/config.py:38: note: Possible overload variants:
2025-09-11T08:22:51.7601917Z reddit_pipeline/config.py:38: note:     def Field(default, default: EllipsisType, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
2025-09-11T08:22:51.7608235Z reddit_pipeline/config.py:38: note:     def [_T] Field(default, default: _T, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
2025-09-11T08:22:51.7614531Z reddit_pipeline/config.py:38: note:     def [_T] Field(default_factory, *, default_factory: Callable[[], _T] | Callable[[dict[str, Any]], _T], alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
2025-09-11T08:22:51.7620796Z reddit_pipeline/config.py:38: note:     def Field(alias, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
2025-09-11T08:22:51.7624291Z reddit_pipeline/config.py:39: error: No overload variant of "Field" matches argument types "int", "str"  [call-overload]
2025-09-11T08:22:51.7624971Z reddit_pipeline/config.py:39: note: Possible overload variants:
2025-09-11T08:22:51.7628194Z reddit_pipeline/config.py:39: note:     def Field(default, default: EllipsisType, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
2025-09-11T08:22:51.7634356Z reddit_pipeline/config.py:39: note:     def [_T] Field(default, default: _T, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
2025-09-11T08:22:51.7640697Z reddit_pipeline/config.py:39: note:     def [_T] Field(default_factory, *, default_factory: Callable[[], _T] | Callable[[dict[str, Any]], _T], alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
2025-09-11T08:22:51.7647054Z reddit_pipeline/config.py:39: note:     def Field(alias, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
2025-09-11T08:22:51.7650503Z reddit_pipeline/config.py:40: error: No overload variant of "Field" matches argument types "int", "str"  [call-overload]
2025-09-11T08:22:51.7651069Z reddit_pipeline/config.py:40: note: Possible overload variants:
2025-09-11T08:22:51.7654341Z reddit_pipeline/config.py:40: note:     def Field(default, default: EllipsisType, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
2025-09-11T08:22:51.7660559Z reddit_pipeline/config.py:40: note:     def [_T] Field(default, default: _T, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
2025-09-11T08:22:51.7666941Z reddit_pipeline/config.py:40: note:     def [_T] Field(default_factory, *, default_factory: Callable[[], _T] | Callable[[dict[str, Any]], _T], alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
2025-09-11T08:22:51.7673176Z reddit_pipeline/config.py:40: note:     def Field(alias, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
2025-09-11T08:22:51.7676694Z reddit_pipeline/config.py:41: error: No overload variant of "Field" matches argument types "int", "str"  [call-overload]
2025-09-11T08:22:51.7677257Z reddit_pipeline/config.py:41: note: Possible overload variants:
2025-09-11T08:22:51.7680447Z reddit_pipeline/config.py:41: note:     def Field(default, default: EllipsisType, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
2025-09-11T08:22:51.7686732Z reddit_pipeline/config.py:41: note:     def [_T] Field(default, default: _T, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
2025-09-11T08:22:51.7692968Z reddit_pipeline/config.py:41: note:     def [_T] Field(default_factory, *, default_factory: Callable[[], _T] | Callable[[dict[str, Any]], _T], alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
2025-09-11T08:22:51.7699221Z reddit_pipeline/config.py:41: note:     def Field(alias, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
2025-09-11T08:22:51.7702973Z reddit_pipeline/config.py:44: error: No overload variant of "Field" matches argument types "int", "str"  [call-overload]
2025-09-11T08:22:51.7703535Z reddit_pipeline/config.py:44: note: Possible overload variants:
2025-09-11T08:22:51.7706723Z reddit_pipeline/config.py:44: note:     def Field(default, default: EllipsisType, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
2025-09-11T08:22:51.7712892Z reddit_pipeline/config.py:44: note:     def [_T] Field(default, default: _T, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
2025-09-11T08:22:51.7719193Z reddit_pipeline/config.py:44: note:     def [_T] Field(default_factory, *, default_factory: Callable[[], _T] | Callable[[dict[str, Any]], _T], alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
2025-09-11T08:22:51.7725502Z reddit_pipeline/config.py:44: note:     def Field(alias, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
2025-09-11T08:22:51.7728920Z reddit_pipeline/config.py:45: error: No overload variant of "Field" matches argument types "int", "str"  [call-overload]
2025-09-11T08:22:51.7729487Z reddit_pipeline/config.py:45: note: Possible overload variants:
2025-09-11T08:22:51.7732741Z reddit_pipeline/config.py:45: note:     def Field(default, default: EllipsisType, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
2025-09-11T08:22:51.7738915Z reddit_pipeline/config.py:45: note:     def [_T] Field(default, default: _T, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
2025-09-11T08:22:51.7745276Z reddit_pipeline/config.py:45: note:     def [_T] Field(default_factory, *, default_factory: Callable[[], _T] | Callable[[dict[str, Any]], _T], alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
2025-09-11T08:22:51.7751431Z reddit_pipeline/config.py:45: note:     def Field(alias, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
2025-09-11T08:22:51.7755067Z reddit_pipeline/config.py:48: error: No overload variant of "Field" matches argument types "EllipsisType", "str"  [call-overload]
2025-09-11T08:22:51.7755658Z reddit_pipeline/config.py:48: note: Possible overload variants:
2025-09-11T08:22:51.7758857Z reddit_pipeline/config.py:48: note:     def Field(default, default: EllipsisType, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
2025-09-11T08:22:51.7765142Z reddit_pipeline/config.py:48: note:     def [_T] Field(default, default: _T, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
2025-09-11T08:22:51.7771345Z reddit_pipeline/config.py:48: note:     def [_T] Field(default_factory, *, default_factory: Callable[[], _T] | Callable[[dict[str, Any]], _T], alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
2025-09-11T08:22:51.7777678Z reddit_pipeline/config.py:48: note:     def Field(alias, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
2025-09-11T08:22:51.7781248Z reddit_pipeline/config.py:49: error: No overload variant of "Field" matches argument types "EllipsisType", "str"  [call-overload]
2025-09-11T08:22:51.7781836Z reddit_pipeline/config.py:49: note: Possible overload variants:
2025-09-11T08:22:51.7785127Z reddit_pipeline/config.py:49: note:     def Field(default, default: EllipsisType, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
2025-09-11T08:22:51.7791185Z reddit_pipeline/config.py:49: note:     def [_T] Field(default, default: _T, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
2025-09-11T08:22:51.7797571Z reddit_pipeline/config.py:49: note:     def [_T] Field(default_factory, *, default_factory: Callable[[], _T] | Callable[[dict[str, Any]], _T], alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> _T
2025-09-11T08:22:51.7803910Z reddit_pipeline/config.py:49: note:     def Field(alias, *, alias: str | None = ..., alias_priority: int | None = ..., validation_alias: str | AliasPath | AliasChoices | None = ..., serialization_alias: str | None = ..., title: str | None = ..., field_title_generator: Callable[[str, FieldInfo], str] | None = ..., description: str | None = ..., examples: list[Any] | None = ..., exclude: bool | None = ..., discriminator: str | Discriminator | None = ..., deprecated: deprecated | str | bool | None = ..., json_schema_extra: JsonDict | Callable[[JsonDict], None] | None = ..., frozen: bool | None = ..., validate_default: bool | None = ..., repr: bool = ..., init: bool | None = ..., init_var: bool | None = ..., kw_only: bool | None = ..., pattern: str | Pattern[str] | None = ..., strict: bool | None = ..., coerce_numbers_to_str: bool | None = ..., gt: SupportsGt | None = ..., ge: SupportsGe | None = ..., lt: SupportsLt | None = ..., le: SupportsLe | None = ..., multiple_of: float | None = ..., allow_inf_nan: bool | None = ..., max_digits: int | None = ..., decimal_places: int | None = ..., min_length: int | None = ..., max_length: int | None = ..., union_mode: Literal['smart', 'left_to_right'] = ..., fail_fast: bool | None = ...) -> Any
2025-09-11T08:22:51.7807275Z reddit_pipeline/config.py:54: error: Missing named argument "reddit_client_id" for "Settings"  [call-arg]
2025-09-11T08:22:51.7807938Z reddit_pipeline/config.py:54: error: Missing named argument "reddit_client_secret" for "Settings"  [call-arg]
2025-09-11T08:22:51.7808595Z reddit_pipeline/config.py:54: error: Missing named argument "reddit_user_agent" for "Settings"  [call-arg]
2025-09-11T08:22:51.7809247Z reddit_pipeline/config.py:54: error: Missing named argument "hackernews_enabled" for "Settings"  [call-arg]
2025-09-11T08:22:51.7809929Z reddit_pipeline/config.py:54: error: Missing named argument "producthunt_enabled" for "Settings"  [call-arg]
2025-09-11T08:22:51.7810572Z reddit_pipeline/config.py:54: error: Missing named argument "openai_api_key" for "Settings"  [call-arg]
2025-09-11T08:22:51.7811215Z reddit_pipeline/config.py:54: error: Missing named argument "llm_model_summariser" for "Settings"  [call-arg]
2025-09-11T08:22:51.7811863Z reddit_pipeline/config.py:54: error: Missing named argument "llm_model_munger" for "Settings"  [call-arg]
2025-09-11T08:22:51.7812725Z reddit_pipeline/config.py:54: error: Missing named argument "embeddings_model" for "Settings"  [call-arg]
2025-09-11T08:22:51.7813351Z reddit_pipeline/config.py:54: error: Missing named argument "embeddings_dim" for "Settings"  [call-arg]
2025-09-11T08:22:51.7813967Z reddit_pipeline/config.py:54: error: Missing named argument "top_n_posts" for "Settings"  [call-arg]
2025-09-11T08:22:51.7814576Z reddit_pipeline/config.py:54: error: Missing named argument "top_k_comments" for "Settings"  [call-arg]
2025-09-11T08:22:51.7815241Z reddit_pipeline/config.py:54: error: Missing named argument "summariser_max_input_tokens" for "Settings"  [call-arg]
2025-09-11T08:22:51.7815927Z reddit_pipeline/config.py:54: error: Missing named argument "http_timeout_seconds" for "Settings"  [call-arg]
2025-09-11T08:22:51.7816583Z reddit_pipeline/config.py:54: error: Missing named argument "reddit_lookback_days" for "Settings"  [call-arg]
2025-09-11T08:22:51.7817234Z reddit_pipeline/config.py:54: error: Missing named argument "reddit_min_comments" for "Settings"  [call-arg]
2025-09-11T08:22:51.7817871Z reddit_pipeline/config.py:54: error: Missing named argument "supabase_url" for "Settings"  [call-arg]
2025-09-11T08:22:51.7818501Z reddit_pipeline/config.py:54: error: Missing named argument "supabase_anon_key" for "Settings"  [call-arg]
2025-09-11T08:22:52.3520415Z tests/test_utils.py:15: error: Function is missing a return type annotation  [no-untyped-def]
2025-09-11T08:22:52.3521571Z tests/test_utils.py:15: note: Use "-> None" if function does not return a value
2025-09-11T08:22:52.3523261Z tests/test_utils.py:21: error: Function is missing a return type annotation  [no-untyped-def]
2025-09-11T08:22:52.3524281Z tests/test_utils.py:21: note: Use "-> None" if function does not return a value
2025-09-11T08:22:52.3525213Z tests/test_utils.py:27: error: Function is missing a return type annotation  [no-untyped-def]
2025-09-11T08:22:52.3526132Z tests/test_utils.py:27: note: Use "-> None" if function does not return a value
2025-09-11T08:22:52.3527080Z tests/test_utils.py:33: error: Function is missing a return type annotation  [no-untyped-def]
2025-09-11T08:22:52.3527994Z tests/test_utils.py:33: note: Use "-> None" if function does not return a value
2025-09-11T08:22:52.3528899Z tests/test_utils.py:48: error: Function is missing a return type annotation  [no-untyped-def]
2025-09-11T08:22:52.3529818Z tests/test_utils.py:48: note: Use "-> None" if function does not return a value
2025-09-11T08:22:52.3530734Z tests/test_utils.py:68: error: Function is missing a return type annotation  [no-untyped-def]
2025-09-11T08:22:52.3531768Z tests/test_utils.py:72: error: Function is missing a return type annotation  [no-untyped-def]
2025-09-11T08:22:52.3533005Z tests/test_utils.py:78: error: Function is missing a return type annotation  [no-untyped-def]
2025-09-11T08:22:52.3534054Z tests/test_utils.py:83: error: Function is missing a return type annotation  [no-untyped-def]
2025-09-11T08:22:52.3535065Z tests/test_utils.py:94: error: Function is missing a return type annotation  [no-untyped-def]
2025-09-11T08:22:52.3536026Z tests/test_utils.py:94: note: Use "-> None" if function does not return a value
2025-09-11T08:22:52.3536957Z tests/test_utils.py:99: error: Function is missing a return type annotation  [no-untyped-def]
2025-09-11T08:22:52.3537901Z tests/test_utils.py:99: note: Use "-> None" if function does not return a value
2025-09-11T08:22:52.3538841Z tests/test_utils.py:109: error: Function is missing a return type annotation  [no-untyped-def]
2025-09-11T08:22:52.3539823Z tests/test_utils.py:109: note: Use "-> None" if function does not return a value
2025-09-11T08:22:52.3540775Z tests/test_utils.py:114: error: Function is missing a return type annotation  [no-untyped-def]
2025-09-11T08:22:52.3541761Z tests/test_utils.py:114: note: Use "-> None" if function does not return a value
2025-09-11T08:22:52.3542914Z tests/test_utils.py:124: error: Function is missing a return type annotation  [no-untyped-def]
2025-09-11T08:22:52.3544331Z tests/test_utils.py:131: error: Function is missing a return type annotation  [no-untyped-def]
2025-09-11T08:22:52.3545423Z tests/test_utils.py:142: error: Function is missing a return type annotation  [no-untyped-def]
2025-09-11T08:22:52.3546521Z tests/test_utils.py:148: error: Function is missing a return type annotation  [no-untyped-def]
2025-09-11T08:22:52.3547612Z tests/test_utils.py:169: error: Function is missing a return type annotation  [no-untyped-def]
2025-09-11T08:22:52.3548659Z tests/test_utils.py:173: error: Function is missing a type annotation  [no-untyped-def]
2025-09-11T08:22:52.3549708Z tests/test_utils.py:180: error: Function is missing a return type annotation  [no-untyped-def]
2025-09-11T08:22:52.3550739Z tests/test_utils.py:185: error: Function is missing a type annotation  [no-untyped-def]
2025-09-11T08:22:52.3551779Z tests/test_utils.py:196: error: Function is missing a return type annotation  [no-untyped-def]
2025-09-11T08:22:52.3552970Z tests/test_utils.py:201: error: Function is missing a type annotation  [no-untyped-def]
2025-09-11T08:22:52.3674300Z tests/test_property_tests.py:15: error: Function is missing a return type annotation  [no-untyped-def]
2025-09-11T08:22:52.3675392Z tests/test_property_tests.py:15: note: Use "-> None" if function does not return a value
2025-09-11T08:22:52.3676545Z tests/test_property_tests.py:27: error: Argument "url" to "Post" has incompatible type "str"; expected "HttpUrl"  [arg-type]
2025-09-11T08:22:52.3677904Z tests/test_property_tests.py:38: error: Argument "url" to "Post" has incompatible type "str"; expected "HttpUrl"  [arg-type]
2025-09-11T08:22:52.3679530Z tests/test_property_tests.py:49: error: Argument "url" to "Post" has incompatible type "str"; expected "HttpUrl"  [arg-type]
2025-09-11T08:22:52.3680837Z tests/test_property_tests.py:64: error: Function is missing a return type annotation  [no-untyped-def]
2025-09-11T08:22:52.3681943Z tests/test_property_tests.py:64: note: Use "-> None" if function does not return a value
2025-09-11T08:22:52.3683449Z tests/test_property_tests.py:76: error: Argument "url" to "Post" has incompatible type "str"; expected "HttpUrl"  [arg-type]
2025-09-11T08:22:52.3684837Z tests/test_property_tests.py:87: error: Argument "url" to "Post" has incompatible type "str"; expected "HttpUrl"  [arg-type]
2025-09-11T08:22:52.3686128Z tests/test_property_tests.py:102: error: Function is missing a return type annotation  [no-untyped-def]
2025-09-11T08:22:52.3687236Z tests/test_property_tests.py:102: note: Use "-> None" if function does not return a value
2025-09-11T08:22:52.3688492Z tests/test_property_tests.py:114: error: Argument "url" to "Post" has incompatible type "str"; expected "HttpUrl"  [arg-type]
2025-09-11T08:22:52.3689829Z tests/test_property_tests.py:125: error: Argument "url" to "Post" has incompatible type "str"; expected "HttpUrl"  [arg-type]
2025-09-11T08:22:52.3691166Z tests/test_property_tests.py:136: error: Argument "url" to "Post" has incompatible type "str"; expected "HttpUrl"  [arg-type]
2025-09-11T08:22:52.3692457Z tests/test_property_tests.py:155: error: Function is missing a return type annotation  [no-untyped-def]
2025-09-11T08:22:52.3693772Z tests/test_property_tests.py:155: note: Use "-> None" if function does not return a value
2025-09-11T08:22:52.3694899Z tests/test_property_tests.py:166: error: Argument "url" to "Post" has incompatible type "str"; expected "HttpUrl"  [arg-type]
2025-09-11T08:22:52.3696234Z tests/test_property_tests.py:178: error: Argument "url" to "Post" has incompatible type "str"; expected "HttpUrl"  [arg-type]
2025-09-11T08:22:52.3697432Z tests/test_property_tests.py:191: error: Function is missing a return type annotation  [no-untyped-def]
2025-09-11T08:22:52.3698519Z tests/test_property_tests.py:191: note: Use "-> None" if function does not return a value
2025-09-11T08:22:52.3699706Z tests/test_property_tests.py:203: error: Argument "url" to "Post" has incompatible type "str"; expected "HttpUrl"  [arg-type]
2025-09-11T08:22:52.3701054Z tests/test_property_tests.py:214: error: Argument "url" to "Post" has incompatible type "str"; expected "HttpUrl"  [arg-type]
2025-09-11T08:22:52.3702790Z tests/test_property_tests.py:236: error: Function is missing a return type annotation  [no-untyped-def]
2025-09-11T08:22:52.3703863Z tests/test_property_tests.py:236: note: Use "-> None" if function does not return a value
2025-09-11T08:22:52.3705073Z tests/test_property_tests.py:244: error: Argument 1 to "dedupe_posts" has incompatible type "None"; expected "list[Post]"  [arg-type]
2025-09-11T08:22:52.3706559Z tests/test_property_tests.py:247: error: Argument 1 to "rank_posts" has incompatible type "None"; expected "list[Post]"  [arg-type]
2025-09-11T08:22:52.3707891Z tests/test_property_tests.py:249: error: Function is missing a return type annotation  [no-untyped-def]
2025-09-11T08:22:52.3708947Z tests/test_property_tests.py:249: note: Use "-> None" if function does not return a value
2025-09-11T08:22:52.3710091Z tests/test_property_tests.py:260: error: Argument "url" to "Post" has incompatible type "str"; expected "HttpUrl"  [arg-type]
2025-09-11T08:22:52.3711357Z tests/test_property_tests.py:278: error: Function is missing a return type annotation  [no-untyped-def]
2025-09-11T08:22:52.3712398Z tests/test_property_tests.py:278: note: Use "-> None" if function does not return a value
2025-09-11T08:22:52.3713778Z tests/test_property_tests.py:290: error: Argument "url" to "Post" has incompatible type "str"; expected "HttpUrl"  [arg-type]
2025-09-11T08:22:52.3715090Z tests/test_property_tests.py:301: error: Argument "url" to "Post" has incompatible type "str"; expected "HttpUrl"  [arg-type]
2025-09-11T08:22:52.3716680Z tests/test_property_tests.py:315: error: Argument "url" to "Post" has incompatible type "str"; expected "HttpUrl"  [arg-type]
2025-09-11T08:22:52.3718012Z tests/test_property_tests.py:326: error: Argument "url" to "Post" has incompatible type "str"; expected "HttpUrl"  [arg-type]
2025-09-11T08:22:52.3719224Z tests/test_property_tests.py:341: error: Function is missing a return type annotation  [no-untyped-def]
2025-09-11T08:22:52.3720293Z tests/test_property_tests.py:341: note: Use "-> None" if function does not return a value
2025-09-11T08:22:52.3721463Z tests/test_property_tests.py:353: error: Argument "url" to "Post" has incompatible type "str"; expected "HttpUrl"  [arg-type]
2025-09-11T08:22:52.3723058Z tests/test_property_tests.py:364: error: Argument "url" to "Post" has incompatible type "str"; expected "HttpUrl"  [arg-type]
2025-09-11T08:22:52.3724434Z tests/test_property_tests.py:378: error: Argument "url" to "Post" has incompatible type "str"; expected "HttpUrl"  [arg-type]
2025-09-11T08:22:52.3725790Z tests/test_property_tests.py:389: error: Argument "url" to "Post" has incompatible type "str"; expected "HttpUrl"  [arg-type]
2025-09-11T08:22:52.4615057Z reddit_pipeline/clients/producthunt.py:35: error: Argument "url" to "Post" has incompatible type "str"; expected "HttpUrl"  [arg-type]
2025-09-11T08:22:52.4659794Z reddit_pipeline/clients/hackernews.py:35: error: Argument "url" to "Post" has incompatible type "str"; expected "HttpUrl"  [arg-type]
2025-09-11T08:22:56.1649669Z reddit_pipeline/llm/summariser.py:79: error: No overload variant of "create" of "Completions" matches argument types "str", "list[dict[str, str]]", "dict[str, Any]", "float"  [call-overload]
2025-09-11T08:22:56.1651000Z reddit_pipeline/llm/summariser.py:79: note: Possible overload variants:
2025-09-11T08:22:56.1666217Z reddit_pipeline/llm/summariser.py:79: note:     def create(self, *, messages: Iterable[ChatCompletionDeveloperMessageParam | ChatCompletionSystemMessageParam | ChatCompletionUserMessageParam | ChatCompletionAssistantMessageParam | ChatCompletionToolMessageParam | ChatCompletionFunctionMessageParam], model: str | Literal['gpt-5', 'gpt-5-mini', 'gpt-5-nano', 'gpt-5-2025-08-07', 'gpt-5-mini-2025-08-07', 'gpt-5-nano-2025-08-07', 'gpt-5-chat-latest', 'gpt-4.1', 'gpt-4.1-mini', 'gpt-4.1-nano', 'gpt-4.1-2025-04-14', 'gpt-4.1-mini-2025-04-14', 'gpt-4.1-nano-2025-04-14', 'o4-mini', 'o4-mini-2025-04-16', 'o3', 'o3-2025-04-16', 'o3-mini', 'o3-mini-2025-01-31', 'o1', 'o1-2024-12-17', 'o1-preview', 'o1-preview-2024-09-12', 'o1-mini', 'o1-mini-2024-09-12', 'gpt-4o', 'gpt-4o-2024-11-20', 'gpt-4o-2024-08-06', 'gpt-4o-2024-05-13', 'gpt-4o-audio-preview', 'gpt-4o-audio-preview-2024-10-01', 'gpt-4o-audio-preview-2024-12-17', 'gpt-4o-audio-preview-2025-06-03', 'gpt-4o-mini-audio-preview', 'gpt-4o-mini-audio-preview-2024-12-17', 'gpt-4o-search-preview', 'gpt-4o-mini-search-preview', 'gpt-4o-search-preview-2025-03-11', 'gpt-4o-mini-search-preview-2025-03-11', 'chatgpt-4o-latest', 'codex-mini-latest', 'gpt-4o-mini', 'gpt-4o-mini-2024-07-18', 'gpt-4-turbo', 'gpt-4-turbo-2024-04-09', 'gpt-4-0125-preview', 'gpt-4-turbo-preview', 'gpt-4-1106-preview', 'gpt-4-vision-preview', 'gpt-4', 'gpt-4-0314', 'gpt-4-0613', 'gpt-4-32k', 'gpt-4-32k-0314', 'gpt-4-32k-0613', 'gpt-3.5-turbo', 'gpt-3.5-turbo-16k', 'gpt-3.5-turbo-0301', 'gpt-3.5-turbo-0613', 'gpt-3.5-turbo-1106', 'gpt-3.5-turbo-0125', 'gpt-3.5-turbo-16k-0613'], audio: ChatCompletionAudioParam | NotGiven | None = ..., frequency_penalty: float | NotGiven | None = ..., function_call: Literal['none', 'auto'] | ChatCompletionFunctionCallOptionParam | NotGiven = ..., functions: Iterable[Function] | NotGiven = ..., logit_bias: dict[str, int] | NotGiven | None = ..., logprobs: bool | NotGiven | None = ..., max_completion_tokens: int | NotGiven | None = ..., max_tokens: int | NotGiven | None = ..., metadata: dict[str, str] | NotGiven | None = ..., modalities: list[Literal['text', 'audio']] | NotGiven | None = ..., n: int | NotGiven | None = ..., parallel_tool_calls: bool | NotGiven = ..., prediction: ChatCompletionPredictionContentParam | NotGiven | None = ..., presence_penalty: float | NotGiven | None = ..., prompt_cache_key: str | NotGiven = ..., reasoning_effort: Literal['minimal', 'low', 'medium', 'high'] | None | NotGiven | None = ..., response_format: ResponseFormatText | ResponseFormatJSONSchema | ResponseFormatJSONObject | NotGiven = ..., safety_identifier: str | NotGiven = ..., seed: int | NotGiven | None = ..., service_tier: Literal['auto', 'default', 'flex', 'scale', 'priority'] | NotGiven | None = ..., stop: str | SequenceNotStr[str] | NotGiven | None = ..., store: bool | NotGiven | None = ..., stream: Literal[False] | NotGiven | None = ..., stream_options: ChatCompletionStreamOptionsParam | NotGiven | None = ..., temperature: float | NotGiven | None = ..., tool_choice: Literal['none', 'auto', 'required'] | ChatCompletionAllowedToolChoiceParam | ChatCompletionNamedToolChoiceParam | ChatCompletionNamedToolChoiceCustomParam | NotGiven = ..., tools: Iterable[ChatCompletionFunctionToolParam | ChatCompletionCustomToolParam] | NotGiven = ..., top_logprobs: int | NotGiven | None = ..., top_p: float | NotGiven | None = ..., user: str | NotGiven = ..., verbosity: Literal['low', 'medium', 'high'] | NotGiven | None = ..., web_search_options: WebSearchOptions | NotGiven = ..., extra_headers: Mapping[str, str | Omit] | None = ..., extra_query: Mapping[str, object] | None = ..., extra_body: object | None = ..., timeout: float | Timeout | NotGiven | None = ...) -> ChatCompletion
2025-09-11T08:22:56.1687781Z reddit_pipeline/llm/summariser.py:79: note:     def create(self, *, messages: Iterable[ChatCompletionDeveloperMessageParam | ChatCompletionSystemMessageParam | ChatCompletionUserMessageParam | ChatCompletionAssistantMessageParam | ChatCompletionToolMessageParam | ChatCompletionFunctionMessageParam], model: str | Literal['gpt-5', 'gpt-5-mini', 'gpt-5-nano', 'gpt-5-2025-08-07', 'gpt-5-mini-2025-08-07', 'gpt-5-nano-2025-08-07', 'gpt-5-chat-latest', 'gpt-4.1', 'gpt-4.1-mini', 'gpt-4.1-nano', 'gpt-4.1-2025-04-14', 'gpt-4.1-mini-2025-04-14', 'gpt-4.1-nano-2025-04-14', 'o4-mini', 'o4-mini-2025-04-16', 'o3', 'o3-2025-04-16', 'o3-mini', 'o3-mini-2025-01-31', 'o1', 'o1-2024-12-17', 'o1-preview', 'o1-preview-2024-09-12', 'o1-mini', 'o1-mini-2024-09-12', 'gpt-4o', 'gpt-4o-2024-11-20', 'gpt-4o-2024-08-06', 'gpt-4o-2024-05-13', 'gpt-4o-audio-preview', 'gpt-4o-audio-preview-2024-10-01', 'gpt-4o-audio-preview-2024-12-17', 'gpt-4o-audio-preview-2025-06-03', 'gpt-4o-mini-audio-preview', 'gpt-4o-mini-audio-preview-2024-12-17', 'gpt-4o-search-preview', 'gpt-4o-mini-search-preview', 'gpt-4o-search-preview-2025-03-11', 'gpt-4o-mini-search-preview-2025-03-11', 'chatgpt-4o-latest', 'codex-mini-latest', 'gpt-4o-mini', 'gpt-4o-mini-2024-07-18', 'gpt-4-turbo', 'gpt-4-turbo-2024-04-09', 'gpt-4-0125-preview', 'gpt-4-turbo-preview', 'gpt-4-1106-preview', 'gpt-4-vision-preview', 'gpt-4', 'gpt-4-0314', 'gpt-4-0613', 'gpt-4-32k', 'gpt-4-32k-0314', 'gpt-4-32k-0613', 'gpt-3.5-turbo', 'gpt-3.5-turbo-16k', 'gpt-3.5-turbo-0301', 'gpt-3.5-turbo-0613', 'gpt-3.5-turbo-1106', 'gpt-3.5-turbo-0125', 'gpt-3.5-turbo-16k-0613'], stream: Literal[True], audio: ChatCompletionAudioParam | NotGiven | None = ..., frequency_penalty: float | NotGiven | None = ..., function_call: Literal['none', 'auto'] | ChatCompletionFunctionCallOptionParam | NotGiven = ..., functions: Iterable[Function] | NotGiven = ..., logit_bias: dict[str, int] | NotGiven | None = ..., logprobs: bool | NotGiven | None = ..., max_completion_tokens: int | NotGiven | None = ..., max_tokens: int | NotGiven | None = ..., metadata: dict[str, str] | NotGiven | None = ..., modalities: list[Literal['text', 'audio']] | NotGiven | None = ..., n: int | NotGiven | None = ..., parallel_tool_calls: bool | NotGiven = ..., prediction: ChatCompletionPredictionContentParam | NotGiven | None = ..., presence_penalty: float | NotGiven | None = ..., prompt_cache_key: str | NotGiven = ..., reasoning_effort: Literal['minimal', 'low', 'medium', 'high'] | None | NotGiven | None = ..., response_format: ResponseFormatText | ResponseFormatJSONSchema | ResponseFormatJSONObject | NotGiven = ..., safety_identifier: str | NotGiven = ..., seed: int | NotGiven | None = ..., service_tier: Literal['auto', 'default', 'flex', 'scale', 'priority'] | NotGiven | None = ..., stop: str | SequenceNotStr[str] | NotGiven | None = ..., store: bool | NotGiven | None = ..., stream_options: ChatCompletionStreamOptionsParam | NotGiven | None = ..., temperature: float | NotGiven | None = ..., tool_choice: Literal['none', 'auto', 'required'] | ChatCompletionAllowedToolChoiceParam | ChatCompletionNamedToolChoiceParam | ChatCompletionNamedToolChoiceCustomParam | NotGiven = ..., tools: Iterable[ChatCompletionFunctionToolParam | ChatCompletionCustomToolParam] | NotGiven = ..., top_logprobs: int | NotGiven | None = ..., top_p: float | NotGiven | None = ..., user: str | NotGiven = ..., verbosity: Literal['low', 'medium', 'high'] | NotGiven | None = ..., web_search_options: WebSearchOptions | NotGiven = ..., extra_headers: Mapping[str, str | Omit] | None = ..., extra_query: Mapping[str, object] | None = ..., extra_body: object | None = ..., timeout: float | Timeout | NotGiven | None = ...) -> Stream[ChatCompletionChunk]
2025-09-11T08:22:56.1707921Z reddit_pipeline/llm/summariser.py:79: note:     def create(self, *, messages: Iterable[ChatCompletionDeveloperMessageParam | ChatCompletionSystemMessageParam | ChatCompletionUserMessageParam | ChatCompletionAssistantMessageParam | ChatCompletionToolMessageParam | ChatCompletionFunctionMessageParam], model: str | Literal['gpt-5', 'gpt-5-mini', 'gpt-5-nano', 'gpt-5-2025-08-07', 'gpt-5-mini-2025-08-07', 'gpt-5-nano-2025-08-07', 'gpt-5-chat-latest', 'gpt-4.1', 'gpt-4.1-mini', 'gpt-4.1-nano', 'gpt-4.1-2025-04-14', 'gpt-4.1-mini-2025-04-14', 'gpt-4.1-nano-2025-04-14', 'o4-mini', 'o4-mini-2025-04-16', 'o3', 'o3-2025-04-16', 'o3-mini', 'o3-mini-2025-01-31', 'o1', 'o1-2024-12-17', 'o1-preview', 'o1-preview-2024-09-12', 'o1-mini', 'o1-mini-2024-09-12', 'gpt-4o', 'gpt-4o-2024-11-20', 'gpt-4o-2024-08-06', 'gpt-4o-2024-05-13', 'gpt-4o-audio-preview', 'gpt-4o-audio-preview-2024-10-01', 'gpt-4o-audio-preview-2024-12-17', 'gpt-4o-audio-preview-2025-06-03', 'gpt-4o-mini-audio-preview', 'gpt-4o-mini-audio-preview-2024-12-17', 'gpt-4o-search-preview', 'gpt-4o-mini-search-preview', 'gpt-4o-search-preview-2025-03-11', 'gpt-4o-mini-search-preview-2025-03-11', 'chatgpt-4o-latest', 'codex-mini-latest', 'gpt-4o-mini', 'gpt-4o-mini-2024-07-18', 'gpt-4-turbo', 'gpt-4-turbo-2024-04-09', 'gpt-4-0125-preview', 'gpt-4-turbo-preview', 'gpt-4-1106-preview', 'gpt-4-vision-preview', 'gpt-4', 'gpt-4-0314', 'gpt-4-0613', 'gpt-4-32k', 'gpt-4-32k-0314', 'gpt-4-32k-0613', 'gpt-3.5-turbo', 'gpt-3.5-turbo-16k', 'gpt-3.5-turbo-0301', 'gpt-3.5-turbo-0613', 'gpt-3.5-turbo-1106', 'gpt-3.5-turbo-0125', 'gpt-3.5-turbo-16k-0613'], stream: bool, audio: ChatCompletionAudioParam | NotGiven | None = ..., frequency_penalty: float | NotGiven | None = ..., function_call: Literal['none', 'auto'] | ChatCompletionFunctionCallOptionParam | NotGiven = ..., functions: Iterable[Function] | NotGiven = ..., logit_bias: dict[str, int] | NotGiven | None = ..., logprobs: bool | NotGiven | None = ..., max_completion_tokens: int | NotGiven | None = ..., max_tokens: int | NotGiven | None = ..., metadata: dict[str, str] | NotGiven | None = ..., modalities: list[Literal['text', 'audio']] | NotGiven | None = ..., n: int | NotGiven | None = ..., parallel_tool_calls: bool | NotGiven = ..., prediction: ChatCompletionPredictionContentParam | NotGiven | None = ..., presence_penalty: float | NotGiven | None = ..., prompt_cache_key: str | NotGiven = ..., reasoning_effort: Literal['minimal', 'low', 'medium', 'high'] | None | NotGiven | None = ..., response_format: ResponseFormatText | ResponseFormatJSONSchema | ResponseFormatJSONObject | NotGiven = ..., safety_identifier: str | NotGiven = ..., seed: int | NotGiven | None = ..., service_tier: Literal['auto', 'default', 'flex', 'scale', 'priority'] | NotGiven | None = ..., stop: str | SequenceNotStr[str] | NotGiven | None = ..., store: bool | NotGiven | None = ..., stream_options: ChatCompletionStreamOptionsParam | NotGiven | None = ..., temperature: float | NotGiven | None = ..., tool_choice: Literal['none', 'auto', 'required'] | ChatCompletionAllowedToolChoiceParam | ChatCompletionNamedToolChoiceParam | ChatCompletionNamedToolChoiceCustomParam | NotGiven = ..., tools: Iterable[ChatCompletionFunctionToolParam | ChatCompletionCustomToolParam] | NotGiven = ..., top_logprobs: int | NotGiven | None = ..., top_p: float | NotGiven | None = ..., user: str | NotGiven = ..., verbosity: Literal['low', 'medium', 'high'] | NotGiven | None = ..., web_search_options: WebSearchOptions | NotGiven = ..., extra_headers: Mapping[str, str | Omit] | None = ..., extra_query: Mapping[str, object] | None = ..., extra_body: object | None = ..., timeout: float | Timeout | NotGiven | None = ...) -> ChatCompletion | Stream[ChatCompletionChunk]
2025-09-11T08:22:56.1718936Z reddit_pipeline/llm/summariser.py:87: error: Returning Any from function declared to return "dict[str, Any]"  [no-any-return]
2025-09-11T08:22:56.1889361Z reddit_pipeline/llm/insights.py:57: error: No overload variant of "create" of "Completions" matches argument types "str", "list[dict[str, str]]", "dict[str, Any]", "float"  [call-overload]
2025-09-11T08:22:56.1890498Z reddit_pipeline/llm/insights.py:57: note: Possible overload variants:
2025-09-11T08:22:56.1902738Z reddit_pipeline/llm/insights.py:57: note:     def create(self, *, messages: Iterable[ChatCompletionDeveloperMessageParam | ChatCompletionSystemMessageParam | ChatCompletionUserMessageParam | ChatCompletionAssistantMessageParam | ChatCompletionToolMessageParam | ChatCompletionFunctionMessageParam], model: str | Literal['gpt-5', 'gpt-5-mini', 'gpt-5-nano', 'gpt-5-2025-08-07', 'gpt-5-mini-2025-08-07', 'gpt-5-nano-2025-08-07', 'gpt-5-chat-latest', 'gpt-4.1', 'gpt-4.1-mini', 'gpt-4.1-nano', 'gpt-4.1-2025-04-14', 'gpt-4.1-mini-2025-04-14', 'gpt-4.1-nano-2025-04-14', 'o4-mini', 'o4-mini-2025-04-16', 'o3', 'o3-2025-04-16', 'o3-mini', 'o3-mini-2025-01-31', 'o1', 'o1-2024-12-17', 'o1-preview', 'o1-preview-2024-09-12', 'o1-mini', 'o1-mini-2024-09-12', 'gpt-4o', 'gpt-4o-2024-11-20', 'gpt-4o-2024-08-06', 'gpt-4o-2024-05-13', 'gpt-4o-audio-preview', 'gpt-4o-audio-preview-2024-10-01', 'gpt-4o-audio-preview-2024-12-17', 'gpt-4o-audio-preview-2025-06-03', 'gpt-4o-mini-audio-preview', 'gpt-4o-mini-audio-preview-2024-12-17', 'gpt-4o-search-preview', 'gpt-4o-mini-search-preview', 'gpt-4o-search-preview-2025-03-11', 'gpt-4o-mini-search-preview-2025-03-11', 'chatgpt-4o-latest', 'codex-mini-latest', 'gpt-4o-mini', 'gpt-4o-mini-2024-07-18', 'gpt-4-turbo', 'gpt-4-turbo-2024-04-09', 'gpt-4-0125-preview', 'gpt-4-turbo-preview', 'gpt-4-1106-preview', 'gpt-4-vision-preview', 'gpt-4', 'gpt-4-0314', 'gpt-4-0613', 'gpt-4-32k', 'gpt-4-32k-0314', 'gpt-4-32k-0613', 'gpt-3.5-turbo', 'gpt-3.5-turbo-16k', 'gpt-3.5-turbo-0301', 'gpt-3.5-turbo-0613', 'gpt-3.5-turbo-1106', 'gpt-3.5-turbo-0125', 'gpt-3.5-turbo-16k-0613'], audio: ChatCompletionAudioParam | NotGiven | None = ..., frequency_penalty: float | NotGiven | None = ..., function_call: Literal['none', 'auto'] | ChatCompletionFunctionCallOptionParam | NotGiven = ..., functions: Iterable[Function] | NotGiven = ..., logit_bias: dict[str, int] | NotGiven | None = ..., logprobs: bool | NotGiven | None = ..., max_completion_tokens: int | NotGiven | None = ..., max_tokens: int | NotGiven | None = ..., metadata: dict[str, str] | NotGiven | None = ..., modalities: list[Literal['text', 'audio']] | NotGiven | None = ..., n: int | NotGiven | None = ..., parallel_tool_calls: bool | NotGiven = ..., prediction: ChatCompletionPredictionContentParam | NotGiven | None = ..., presence_penalty: float | NotGiven | None = ..., prompt_cache_key: str | NotGiven = ..., reasoning_effort: Literal['minimal', 'low', 'medium', 'high'] | None | NotGiven | None = ..., response_format: ResponseFormatText | ResponseFormatJSONSchema | ResponseFormatJSONObject | NotGiven = ..., safety_identifier: str | NotGiven = ..., seed: int | NotGiven | None = ..., service_tier: Literal['auto', 'default', 'flex', 'scale', 'priority'] | NotGiven | None = ..., stop: str | SequenceNotStr[str] | NotGiven | None = ..., store: bool | NotGiven | None = ..., stream: Literal[False] | NotGiven | None = ..., stream_options: ChatCompletionStreamOptionsParam | NotGiven | None = ..., temperature: float | NotGiven | None = ..., tool_choice: Literal['none', 'auto', 'required'] | ChatCompletionAllowedToolChoiceParam | ChatCompletionNamedToolChoiceParam | ChatCompletionNamedToolChoiceCustomParam | NotGiven = ..., tools: Iterable[ChatCompletionFunctionToolParam | ChatCompletionCustomToolParam] | NotGiven = ..., top_logprobs: int | NotGiven | None = ..., top_p: float | NotGiven | None = ..., user: str | NotGiven = ..., verbosity: Literal['low', 'medium', 'high'] | NotGiven | None = ..., web_search_options: WebSearchOptions | NotGiven = ..., extra_headers: Mapping[str, str | Omit] | None = ..., extra_query: Mapping[str, object] | None = ..., extra_body: object | None = ..., timeout: float | Timeout | NotGiven | None = ...) -> ChatCompletion
2025-09-11T08:22:56.1924552Z reddit_pipeline/llm/insights.py:57: note:     def create(self, *, messages: Iterable[ChatCompletionDeveloperMessageParam | ChatCompletionSystemMessageParam | ChatCompletionUserMessageParam | ChatCompletionAssistantMessageParam | ChatCompletionToolMessageParam | ChatCompletionFunctionMessageParam], model: str | Literal['gpt-5', 'gpt-5-mini', 'gpt-5-nano', 'gpt-5-2025-08-07', 'gpt-5-mini-2025-08-07', 'gpt-5-nano-2025-08-07', 'gpt-5-chat-latest', 'gpt-4.1', 'gpt-4.1-mini', 'gpt-4.1-nano', 'gpt-4.1-2025-04-14', 'gpt-4.1-mini-2025-04-14', 'gpt-4.1-nano-2025-04-14', 'o4-mini', 'o4-mini-2025-04-16', 'o3', 'o3-2025-04-16', 'o3-mini', 'o3-mini-2025-01-31', 'o1', 'o1-2024-12-17', 'o1-preview', 'o1-preview-2024-09-12', 'o1-mini', 'o1-mini-2024-09-12', 'gpt-4o', 'gpt-4o-2024-11-20', 'gpt-4o-2024-08-06', 'gpt-4o-2024-05-13', 'gpt-4o-audio-preview', 'gpt-4o-audio-preview-2024-10-01', 'gpt-4o-audio-preview-2024-12-17', 'gpt-4o-audio-preview-2025-06-03', 'gpt-4o-mini-audio-preview', 'gpt-4o-mini-audio-preview-2024-12-17', 'gpt-4o-search-preview', 'gpt-4o-mini-search-preview', 'gpt-4o-search-preview-2025-03-11', 'gpt-4o-mini-search-preview-2025-03-11', 'chatgpt-4o-latest', 'codex-mini-latest', 'gpt-4o-mini', 'gpt-4o-mini-2024-07-18', 'gpt-4-turbo', 'gpt-4-turbo-2024-04-09', 'gpt-4-0125-preview', 'gpt-4-turbo-preview', 'gpt-4-1106-preview', 'gpt-4-vision-preview', 'gpt-4', 'gpt-4-0314', 'gpt-4-0613', 'gpt-4-32k', 'gpt-4-32k-0314', 'gpt-4-32k-0613', 'gpt-3.5-turbo', 'gpt-3.5-turbo-16k', 'gpt-3.5-turbo-0301', 'gpt-3.5-turbo-0613', 'gpt-3.5-turbo-1106', 'gpt-3.5-turbo-0125', 'gpt-3.5-turbo-16k-0613'], stream: Literal[True], audio: ChatCompletionAudioParam | NotGiven | None = ..., frequency_penalty: float | NotGiven | None = ..., function_call: Literal['none', 'auto'] | ChatCompletionFunctionCallOptionParam | NotGiven = ..., functions: Iterable[Function] | NotGiven = ..., logit_bias: dict[str, int] | NotGiven | None = ..., logprobs: bool | NotGiven | None = ..., max_completion_tokens: int | NotGiven | None = ..., max_tokens: int | NotGiven | None = ..., metadata: dict[str, str] | NotGiven | None = ..., modalities: list[Literal['text', 'audio']] | NotGiven | None = ..., n: int | NotGiven | None = ..., parallel_tool_calls: bool | NotGiven = ..., prediction: ChatCompletionPredictionContentParam | NotGiven | None = ..., presence_penalty: float | NotGiven | None = ..., prompt_cache_key: str | NotGiven = ..., reasoning_effort: Literal['minimal', 'low', 'medium', 'high'] | None | NotGiven | None = ..., response_format: ResponseFormatText | ResponseFormatJSONSchema | ResponseFormatJSONObject | NotGiven = ..., safety_identifier: str | NotGiven = ..., seed: int | NotGiven | None = ..., service_tier: Literal['auto', 'default', 'flex', 'scale', 'priority'] | NotGiven | None = ..., stop: str | SequenceNotStr[str] | NotGiven | None = ..., store: bool | NotGiven | None = ..., stream_options: ChatCompletionStreamOptionsParam | NotGiven | None = ..., temperature: float | NotGiven | None = ..., tool_choice: Literal['none', 'auto', 'required'] | ChatCompletionAllowedToolChoiceParam | ChatCompletionNamedToolChoiceParam | ChatCompletionNamedToolChoiceCustomParam | NotGiven = ..., tools: Iterable[ChatCompletionFunctionToolParam | ChatCompletionCustomToolParam] | NotGiven = ..., top_logprobs: int | NotGiven | None = ..., top_p: float | NotGiven | None = ..., user: str | NotGiven = ..., verbosity: Literal['low', 'medium', 'high'] | NotGiven | None = ..., web_search_options: WebSearchOptions | NotGiven = ..., extra_headers: Mapping[str, str | Omit] | None = ..., extra_query: Mapping[str, object] | None = ..., extra_body: object | None = ..., timeout: float | Timeout | NotGiven | None = ...) -> Stream[ChatCompletionChunk]
2025-09-11T08:22:56.1944811Z reddit_pipeline/llm/insights.py:57: note:     def create(self, *, messages: Iterable[ChatCompletionDeveloperMessageParam | ChatCompletionSystemMessageParam | ChatCompletionUserMessageParam | ChatCompletionAssistantMessageParam | ChatCompletionToolMessageParam | ChatCompletionFunctionMessageParam], model: str | Literal['gpt-5', 'gpt-5-mini', 'gpt-5-nano', 'gpt-5-2025-08-07', 'gpt-5-mini-2025-08-07', 'gpt-5-nano-2025-08-07', 'gpt-5-chat-latest', 'gpt-4.1', 'gpt-4.1-mini', 'gpt-4.1-nano', 'gpt-4.1-2025-04-14', 'gpt-4.1-mini-2025-04-14', 'gpt-4.1-nano-2025-04-14', 'o4-mini', 'o4-mini-2025-04-16', 'o3', 'o3-2025-04-16', 'o3-mini', 'o3-mini-2025-01-31', 'o1', 'o1-2024-12-17', 'o1-preview', 'o1-preview-2024-09-12', 'o1-mini', 'o1-mini-2024-09-12', 'gpt-4o', 'gpt-4o-2024-11-20', 'gpt-4o-2024-08-06', 'gpt-4o-2024-05-13', 'gpt-4o-audio-preview', 'gpt-4o-audio-preview-2024-10-01', 'gpt-4o-audio-preview-2024-12-17', 'gpt-4o-audio-preview-2025-06-03', 'gpt-4o-mini-audio-preview', 'gpt-4o-mini-audio-preview-2024-12-17', 'gpt-4o-search-preview', 'gpt-4o-mini-search-preview', 'gpt-4o-search-preview-2025-03-11', 'gpt-4o-mini-search-preview-2025-03-11', 'chatgpt-4o-latest', 'codex-mini-latest', 'gpt-4o-mini', 'gpt-4o-mini-2024-07-18', 'gpt-4-turbo', 'gpt-4-turbo-2024-04-09', 'gpt-4-0125-preview', 'gpt-4-turbo-preview', 'gpt-4-1106-preview', 'gpt-4-vision-preview', 'gpt-4', 'gpt-4-0314', 'gpt-4-0613', 'gpt-4-32k', 'gpt-4-32k-0314', 'gpt-4-32k-0613', 'gpt-3.5-turbo', 'gpt-3.5-turbo-16k', 'gpt-3.5-turbo-0301', 'gpt-3.5-turbo-0613', 'gpt-3.5-turbo-1106', 'gpt-3.5-turbo-0125', 'gpt-3.5-turbo-16k-0613'], stream: bool, audio: ChatCompletionAudioParam | NotGiven | None = ..., frequency_penalty: float | NotGiven | None = ..., function_call: Literal['none', 'auto'] | ChatCompletionFunctionCallOptionParam | NotGiven = ..., functions: Iterable[Function] | NotGiven = ..., logit_bias: dict[str, int] | NotGiven | None = ..., logprobs: bool | NotGiven | None = ..., max_completion_tokens: int | NotGiven | None = ..., max_tokens: int | NotGiven | None = ..., metadata: dict[str, str] | NotGiven | None = ..., modalities: list[Literal['text', 'audio']] | NotGiven | None = ..., n: int | NotGiven | None = ..., parallel_tool_calls: bool | NotGiven = ..., prediction: ChatCompletionPredictionContentParam | NotGiven | None = ..., presence_penalty: float | NotGiven | None = ..., prompt_cache_key: str | NotGiven = ..., reasoning_effort: Literal['minimal', 'low', 'medium', 'high'] | None | NotGiven | None = ..., response_format: ResponseFormatText | ResponseFormatJSONSchema | ResponseFormatJSONObject | NotGiven = ..., safety_identifier: str | NotGiven = ..., seed: int | NotGiven | None = ..., service_tier: Literal['auto', 'default', 'flex', 'scale', 'priority'] | NotGiven | None = ..., stop: str | SequenceNotStr[str] | NotGiven | None = ..., store: bool | NotGiven | None = ..., stream_options: ChatCompletionStreamOptionsParam | NotGiven | None = ..., temperature: float | NotGiven | None = ..., tool_choice: Literal['none', 'auto', 'required'] | ChatCompletionAllowedToolChoiceParam | ChatCompletionNamedToolChoiceParam | ChatCompletionNamedToolChoiceCustomParam | NotGiven = ..., tools: Iterable[ChatCompletionFunctionToolParam | ChatCompletionCustomToolParam] | NotGiven = ..., top_logprobs: int | NotGiven | None = ..., top_p: float | NotGiven | None = ..., user: str | NotGiven = ..., verbosity: Literal['low', 'medium', 'high'] | NotGiven | None = ..., web_search_options: WebSearchOptions | NotGiven = ..., extra_headers: Mapping[str, str | Omit] | None = ..., extra_query: Mapping[str, object] | None = ..., extra_body: object | None = ..., timeout: float | Timeout | NotGiven | None = ...) -> ChatCompletion | Stream[ChatCompletionChunk]
2025-09-11T08:22:56.1955453Z reddit_pipeline/llm/insights.py:65: error: Returning Any from function declared to return "dict[str, Any]"  [no-any-return]
2025-09-11T08:22:56.2079004Z tests/test_llm_contracts.py:11: error: Function is missing a return type annotation  [no-untyped-def]
2025-09-11T08:22:56.2080160Z tests/test_llm_contracts.py:11: note: Use "-> None" if function does not return a value
2025-09-11T08:22:56.2080899Z tests/test_llm_contracts.py:41: error: Function is missing a return type annotation  [no-untyped-def]
2025-09-11T08:22:56.2081606Z tests/test_llm_contracts.py:41: note: Use "-> None" if function does not return a value
2025-09-11T08:22:56.2082285Z tests/test_llm_contracts.py:64: error: Function is missing a return type annotation  [no-untyped-def]
2025-09-11T08:22:56.2083149Z tests/test_llm_contracts.py:64: note: Use "-> None" if function does not return a value
2025-09-11T08:22:56.2083804Z tests/test_llm_contracts.py:75: error: Function is missing a return type annotation  [no-untyped-def]
2025-09-11T08:22:56.2084469Z tests/test_llm_contracts.py:75: note: Use "-> None" if function does not return a value
2025-09-11T08:22:56.2085111Z tests/test_llm_contracts.py:94: error: Function is missing a return type annotation  [no-untyped-def]
2025-09-11T08:22:56.2085752Z tests/test_llm_contracts.py:94: note: Use "-> None" if function does not return a value
2025-09-11T08:22:56.2086404Z tests/test_llm_contracts.py:111: error: Function is missing a return type annotation  [no-untyped-def]
2025-09-11T08:22:56.2087073Z tests/test_llm_contracts.py:111: note: Use "-> None" if function does not return a value
2025-09-11T08:22:56.2087738Z tests/test_llm_contracts.py:133: error: Function is missing a return type annotation  [no-untyped-def]
2025-09-11T08:22:56.2088402Z tests/test_llm_contracts.py:133: note: Use "-> None" if function does not return a value
2025-09-11T08:22:56.2089062Z tests/test_llm_contracts.py:151: error: Function is missing a return type annotation  [no-untyped-def]
2025-09-11T08:22:56.2090015Z tests/test_llm_contracts.py:151: note: Use "-> None" if function does not return a value
2025-09-11T08:22:56.2090674Z tests/test_llm_contracts.py:169: error: Function is missing a return type annotation  [no-untyped-def]
2025-09-11T08:22:56.2091334Z tests/test_llm_contracts.py:169: note: Use "-> None" if function does not return a value
2025-09-11T08:22:56.2091928Z tests/test_llm_contracts.py:193: error: Function is missing a return type annotation  [no-untyped-def]
2025-09-11T08:22:56.2092448Z tests/test_llm_contracts.py:193: note: Use "-> None" if function does not return a value
2025-09-11T08:22:56.2309874Z tests/test_integration.py:19: error: Function is missing a type annotation  [no-untyped-def]
2025-09-11T08:22:56.2311180Z tests/test_integration.py:88: error: Function is missing a type annotation  [no-untyped-def]
2025-09-11T08:22:56.2312477Z tests/test_integration.py:142: error: Function is missing a type annotation  [no-untyped-def]
2025-09-11T08:22:56.2313977Z tests/test_integration.py:162: error: Function is missing a type annotation  [no-untyped-def]
2025-09-11T08:22:56.2314923Z tests/test_integration.py:207: error: Function is missing a type annotation  [no-untyped-def]
2025-09-11T08:22:56.2315757Z tests/test_integration.py:223: error: Function is missing a type annotation  [no-untyped-def]
2025-09-11T08:22:56.2316589Z tests/test_integration.py:268: error: Function is missing a type annotation  [no-untyped-def]
2025-09-11T08:22:56.2317431Z tests/test_integration.py:284: error: Function is missing a type annotation  [no-untyped-def]
2025-09-11T08:22:56.2318612Z tests/test_integration.py:309: error: Argument "url" to "Post" has incompatible type "str"; expected "HttpUrl"  [arg-type]
2025-09-11T08:22:56.2319575Z tests/test_integration.py:340: error: Function is missing a type annotation  [no-untyped-def]
2025-09-11T08:22:56.2320525Z tests/test_integration.py:356: error: Argument "url" to "Post" has incompatible type "str"; expected "HttpUrl"  [arg-type]
2025-09-11T08:22:56.2321525Z tests/test_integration.py:361: error: Need type annotation for "comments_by_post"  [var-annotated]
2025-09-11T08:22:56.2322387Z tests/test_integration.py:374: error: Function is missing a type annotation  [no-untyped-def]
2025-09-11T08:22:56.2323228Z tests/test_integration.py:389: error: Argument "url" to "Post" has incompatible type "str"; expected "HttpUrl"  [arg-type]
2025-09-11T08:22:56.2476740Z reddit_pipeline/tests/test_llm_prompts.py:7: error: Function is missing a return type annotation  [no-untyped-def]
2025-09-11T08:22:56.2477783Z reddit_pipeline/tests/test_llm_prompts.py:7: note: Use "-> None" if function does not return a value
2025-09-11T08:22:56.2478697Z reddit_pipeline/tests/test_llm_prompts.py:9: error: Unused "type: ignore" comment  [unused-ignore]
2025-09-11T08:22:56.2479694Z reddit_pipeline/tests/test_llm_prompts.py:22: error: Function is missing a return type annotation  [no-untyped-def]
2025-09-11T08:22:56.2480686Z reddit_pipeline/tests/test_llm_prompts.py:22: note: Use "-> None" if function does not return a value
2025-09-11T08:22:56.2481602Z reddit_pipeline/tests/test_llm_prompts.py:24: error: Unused "type: ignore" comment  [unused-ignore]
2025-09-11T08:22:56.2549287Z Found 213 errors in 17 files (checked 25 source files)
2025-09-11T08:22:56.2820781Z ##[error]Process completed with exit code 1.
