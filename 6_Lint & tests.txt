2025-09-10T19:18:29.0111821Z ##[group]Run ruff check .
2025-09-10T19:18:29.0112145Z [36;1mruff check .[0m
2025-09-10T19:18:29.0112372Z [36;1mblack --check .[0m
2025-09-10T19:18:29.0112593Z [36;1mmypy .[0m
2025-09-10T19:18:29.0112789Z [36;1mpytest -q[0m
2025-09-10T19:18:29.0143310Z shell: /usr/bin/bash -e {0}
2025-09-10T19:18:29.0143556Z env:
2025-09-10T19:18:29.0143820Z   pythonLocation: /opt/hostedtoolcache/Python/3.11.13/x64
2025-09-10T19:18:29.0144248Z   PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib/pkgconfig
2025-09-10T19:18:29.0144669Z   Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-09-10T19:18:29.0145035Z   Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-09-10T19:18:29.0145410Z   Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.13/x64
2025-09-10T19:18:29.0145783Z   LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.13/x64/lib
2025-09-10T19:18:29.0146090Z ##[endgroup]
2025-09-10T19:18:29.0228674Z warning: The top-level linter settings are deprecated in favour of their counterparts in the `lint` section. Please update the following options in `pyproject.toml`:
2025-09-10T19:18:29.0230032Z   - 'ignore' -> 'lint.ignore'
2025-09-10T19:18:29.0230472Z   - 'select' -> 'lint.select'
2025-09-10T19:18:29.0317377Z E402 Module level import not at top of file
2025-09-10T19:18:29.0317964Z  --> reddit_pipeline/clients/hackernews.py:5:1
2025-09-10T19:18:29.0318436Z   |
2025-09-10T19:18:29.0318888Z 3 | """Hacker News client placeholder using official Firebase API."""
2025-09-10T19:18:29.0319614Z 4 |
2025-09-10T19:18:29.0320164Z 5 | from typing import List
2025-09-10T19:18:29.0320540Z   | ^^^^^^^^^^^^^^^^^^^^^^^
2025-09-10T19:18:29.0320882Z 6 |
2025-09-10T19:18:29.0321188Z 7 | from ..models import Post
2025-09-10T19:18:29.0321538Z   |
2025-09-10T19:18:29.0321697Z 
2025-09-10T19:18:29.0321920Z UP035 `typing.List` is deprecated, use `list` instead
2025-09-10T19:18:29.0322480Z  --> reddit_pipeline/clients/hackernews.py:5:1
2025-09-10T19:18:29.0322912Z   |
2025-09-10T19:18:29.0323338Z 3 | """Hacker News client placeholder using official Firebase API."""
2025-09-10T19:18:29.0323878Z 4 |
2025-09-10T19:18:29.0324164Z 5 | from typing import List
2025-09-10T19:18:29.0324523Z   | ^^^^^^^^^^^^^^^^^^^^^^^
2025-09-10T19:18:29.0324847Z 6 |
2025-09-10T19:18:29.0325142Z 7 | from ..models import Post
2025-09-10T19:18:29.0325492Z   |
2025-09-10T19:18:29.0325789Z 
2025-09-10T19:18:29.0325981Z I001 [*] Import block is un-sorted or un-formatted
2025-09-10T19:18:29.0326501Z  --> reddit_pipeline/clients/hackernews.py:5:1
2025-09-10T19:18:29.0326949Z   |
2025-09-10T19:18:29.0327364Z 3 |   """Hacker News client placeholder using official Firebase API."""
2025-09-10T19:18:29.0327893Z 4 |
2025-09-10T19:18:29.0328182Z 5 | / from typing import List
2025-09-10T19:18:29.0328541Z 6 | |
2025-09-10T19:18:29.0328836Z 7 | | from ..models import Post
2025-09-10T19:18:29.0329308Z 8 | | from ..utils import get_json_logger, retry_with_backoff
2025-09-10T19:18:29.0330019Z   | |_______________________________________________________^
2025-09-10T19:18:29.0330455Z   |
2025-09-10T19:18:29.0330734Z help: Organize imports
2025-09-10T19:18:29.0330950Z 
2025-09-10T19:18:29.0331127Z E402 Module level import not at top of file
2025-09-10T19:18:29.0331615Z  --> reddit_pipeline/clients/hackernews.py:7:1
2025-09-10T19:18:29.0332051Z   |
2025-09-10T19:18:29.0332353Z 5 | from typing import List
2025-09-10T19:18:29.0332698Z 6 |
2025-09-10T19:18:29.0332982Z 7 | from ..models import Post
2025-09-10T19:18:29.0333348Z   | ^^^^^^^^^^^^^^^^^^^^^^^^^
2025-09-10T19:18:29.0333793Z 8 | from ..utils import get_json_logger, retry_with_backoff
2025-09-10T19:18:29.0334266Z   |
2025-09-10T19:18:29.0334430Z 
2025-09-10T19:18:29.0334596Z E402 Module level import not at top of file
2025-09-10T19:18:29.0335077Z  --> reddit_pipeline/clients/hackernews.py:8:1
2025-09-10T19:18:29.0335509Z   |
2025-09-10T19:18:29.0335792Z 7 | from ..models import Post
2025-09-10T19:18:29.0336246Z 8 | from ..utils import get_json_logger, retry_with_backoff
2025-09-10T19:18:29.0336753Z   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025-09-10T19:18:29.0337384Z   |
2025-09-10T19:18:29.0337544Z 
2025-09-10T19:18:29.0337770Z UP006 [*] Use `list` instead of `List` for type annotation
2025-09-10T19:18:29.0338414Z   --> reddit_pipeline/clients/hackernews.py:16:45
2025-09-10T19:18:29.0338855Z    |
2025-09-10T19:18:29.0339152Z 14 | class HackerNewsClient:
2025-09-10T19:18:29.0339725Z 15 |     @retry_with_backoff()
2025-09-10T19:18:29.0340194Z 16 |     def fetch_top(self, limit: int = 50) -> List[Post]:
2025-09-10T19:18:29.0340706Z    |                                             ^^^^
2025-09-10T19:18:29.0341127Z 17 |         log.info("Fetching HN top stories", extra={"limit": limit})
2025-09-10T19:18:29.0341663Z 18 |         return []
2025-09-10T19:18:29.0341976Z    |
2025-09-10T19:18:29.0342265Z help: Replace with `list`
2025-09-10T19:18:29.0342500Z 
2025-09-10T19:18:29.0342668Z E402 Module level import not at top of file
2025-09-10T19:18:29.0343161Z  --> reddit_pipeline/clients/producthunt.py:5:1
2025-09-10T19:18:29.0343608Z   |
2025-09-10T19:18:29.0344036Z 3 | """Product Hunt client placeholder using official GraphQL API."""
2025-09-10T19:18:29.0344384Z 4 |
2025-09-10T19:18:29.0344684Z 5 | from typing import List
2025-09-10T19:18:29.0345057Z   | ^^^^^^^^^^^^^^^^^^^^^^^
2025-09-10T19:18:29.0345393Z 6 |
2025-09-10T19:18:29.0345679Z 7 | from ..models import Post
2025-09-10T19:18:29.0346035Z   |
2025-09-10T19:18:29.0346188Z 
2025-09-10T19:18:29.0346399Z UP035 `typing.List` is deprecated, use `list` instead
2025-09-10T19:18:29.0347128Z  --> reddit_pipeline/clients/producthunt.py:5:1
2025-09-10T19:18:29.0347564Z   |
2025-09-10T19:18:29.0347994Z 3 | """Product Hunt client placeholder using official GraphQL API."""
2025-09-10T19:18:29.0348519Z 4 |
2025-09-10T19:18:29.0348802Z 5 | from typing import List
2025-09-10T19:18:29.0349161Z   | ^^^^^^^^^^^^^^^^^^^^^^^
2025-09-10T19:18:29.0349627Z 6 |
2025-09-10T19:18:29.0349916Z 7 | from ..models import Post
2025-09-10T19:18:29.0350270Z   |
2025-09-10T19:18:29.0350414Z 
2025-09-10T19:18:29.0350619Z I001 [*] Import block is un-sorted or un-formatted
2025-09-10T19:18:29.0351131Z  --> reddit_pipeline/clients/producthunt.py:5:1
2025-09-10T19:18:29.0351572Z   |
2025-09-10T19:18:29.0351992Z 3 |   """Product Hunt client placeholder using official GraphQL API."""
2025-09-10T19:18:29.0352522Z 4 |
2025-09-10T19:18:29.0352802Z 5 | / from typing import List
2025-09-10T19:18:29.0353154Z 6 | |
2025-09-10T19:18:29.0353446Z 7 | | from ..models import Post
2025-09-10T19:18:29.0353955Z 8 | | from ..utils import get_json_logger, retry_with_backoff
2025-09-10T19:18:29.0354501Z   | |_______________________________________________________^
2025-09-10T19:18:29.0354922Z   |
2025-09-10T19:18:29.0355198Z help: Organize imports
2025-09-10T19:18:29.0355411Z 
2025-09-10T19:18:29.0355588Z E402 Module level import not at top of file
2025-09-10T19:18:29.0356077Z  --> reddit_pipeline/clients/producthunt.py:7:1
2025-09-10T19:18:29.0356516Z   |
2025-09-10T19:18:29.0356798Z 5 | from typing import List
2025-09-10T19:18:29.0357153Z 6 |
2025-09-10T19:18:29.0357441Z 7 | from ..models import Post
2025-09-10T19:18:29.0357816Z   | ^^^^^^^^^^^^^^^^^^^^^^^^^
2025-09-10T19:18:29.0358265Z 8 | from ..utils import get_json_logger, retry_with_backoff
2025-09-10T19:18:29.0358750Z   |
2025-09-10T19:18:29.0358905Z 
2025-09-10T19:18:29.0359073Z E402 Module level import not at top of file
2025-09-10T19:18:29.0359720Z  --> reddit_pipeline/clients/producthunt.py:8:1
2025-09-10T19:18:29.0360171Z   |
2025-09-10T19:18:29.0360460Z 7 | from ..models import Post
2025-09-10T19:18:29.0360935Z 8 | from ..utils import get_json_logger, retry_with_backoff
2025-09-10T19:18:29.0361451Z   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025-09-10T19:18:29.0361859Z   |
2025-09-10T19:18:29.0362014Z 
2025-09-10T19:18:29.0362234Z UP006 [*] Use `list` instead of `List` for type annotation
2025-09-10T19:18:29.0362794Z   --> reddit_pipeline/clients/producthunt.py:16:47
2025-09-10T19:18:29.0363255Z    |
2025-09-10T19:18:29.0363537Z 14 | class ProductHuntClient:
2025-09-10T19:18:29.0364105Z 15 |     @retry_with_backoff()
2025-09-10T19:18:29.0364560Z 16 |     def fetch_today(self, limit: int = 50) -> List[Post]:
2025-09-10T19:18:29.0365075Z    |                                               ^^^^
2025-09-10T19:18:29.0365635Z 17 |         log.info("Fetching Product Hunt posts", extra={"limit": limit})
2025-09-10T19:18:29.0366171Z 18 |         return []
2025-09-10T19:18:29.0366500Z    |
2025-09-10T19:18:29.0366798Z help: Replace with `list`
2025-09-10T19:18:29.0367053Z 
2025-09-10T19:18:29.0367230Z E402 Module level import not at top of file
2025-09-10T19:18:29.0367714Z   --> reddit_pipeline/clients/reddit.py:10:1
2025-09-10T19:18:29.0368259Z    |
2025-09-10T19:18:29.0368515Z  8 | """
2025-09-10T19:18:29.0368788Z  9 |
2025-09-10T19:18:29.0369080Z 10 | from datetime import datetime
2025-09-10T19:18:29.0369588Z    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025-09-10T19:18:29.0369968Z 11 | from typing import List
2025-09-10T19:18:29.0370329Z    |
2025-09-10T19:18:29.0370495Z 
2025-09-10T19:18:29.0370689Z I001 [*] Import block is un-sorted or un-formatted
2025-09-10T19:18:29.0371189Z   --> reddit_pipeline/clients/reddit.py:10:1
2025-09-10T19:18:29.0371599Z    |
2025-09-10T19:18:29.0371859Z  8 |   """
2025-09-10T19:18:29.0372025Z  9 |
2025-09-10T19:18:29.0372200Z 10 | / from datetime import datetime
2025-09-10T19:18:29.0372447Z 11 | | from typing import List
2025-09-10T19:18:29.0372659Z 12 | |
2025-09-10T19:18:29.0372840Z 13 | | from ..models import Post
2025-09-10T19:18:29.0373279Z 14 | | from ..utils import get_json_logger, retry_with_backoff
2025-09-10T19:18:29.0373601Z    | |_______________________________________________________^
2025-09-10T19:18:29.0373855Z    |
2025-09-10T19:18:29.0374031Z help: Organize imports
2025-09-10T19:18:29.0374200Z 
2025-09-10T19:18:29.0374379Z E402 Module level import not at top of file
2025-09-10T19:18:29.0375047Z   --> reddit_pipeline/clients/reddit.py:11:1
2025-09-10T19:18:29.0375470Z    |
2025-09-10T19:18:29.0375770Z 10 | from datetime import datetime
2025-09-10T19:18:29.0376194Z 11 | from typing import List
2025-09-10T19:18:29.0376427Z    | ^^^^^^^^^^^^^^^^^^^^^^^
2025-09-10T19:18:29.0376625Z 12 |
2025-09-10T19:18:29.0376803Z 13 | from ..models import Post
2025-09-10T19:18:29.0377017Z    |
2025-09-10T19:18:29.0377113Z 
2025-09-10T19:18:29.0377249Z UP035 `typing.List` is deprecated, use `list` instead
2025-09-10T19:18:29.0377569Z   --> reddit_pipeline/clients/reddit.py:11:1
2025-09-10T19:18:29.0377827Z    |
2025-09-10T19:18:29.0378016Z 10 | from datetime import datetime
2025-09-10T19:18:29.0378268Z 11 | from typing import List
2025-09-10T19:18:29.0378488Z    | ^^^^^^^^^^^^^^^^^^^^^^^
2025-09-10T19:18:29.0378686Z 12 |
2025-09-10T19:18:29.0378860Z 13 | from ..models import Post
2025-09-10T19:18:29.0379068Z    |
2025-09-10T19:18:29.0379161Z 
2025-09-10T19:18:29.0379263Z E402 Module level import not at top of file
2025-09-10T19:18:29.0379755Z   --> reddit_pipeline/clients/reddit.py:13:1
2025-09-10T19:18:29.0380014Z    |
2025-09-10T19:18:29.0380189Z 11 | from typing import List
2025-09-10T19:18:29.0380394Z 12 |
2025-09-10T19:18:29.0380564Z 13 | from ..models import Post
2025-09-10T19:18:29.0380777Z    | ^^^^^^^^^^^^^^^^^^^^^^^^^
2025-09-10T19:18:29.0381037Z 14 | from ..utils import get_json_logger, retry_with_backoff
2025-09-10T19:18:29.0381318Z    |
2025-09-10T19:18:29.0381412Z 
2025-09-10T19:18:29.0381512Z E402 Module level import not at top of file
2025-09-10T19:18:29.0381785Z   --> reddit_pipeline/clients/reddit.py:14:1
2025-09-10T19:18:29.0382026Z    |
2025-09-10T19:18:29.0382203Z 13 | from ..models import Post
2025-09-10T19:18:29.0382476Z 14 | from ..utils import get_json_logger, retry_with_backoff
2025-09-10T19:18:29.0382787Z    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025-09-10T19:18:29.0383022Z    |
2025-09-10T19:18:29.0383114Z 
2025-09-10T19:18:29.0383250Z UP006 [*] Use `list` instead of `List` for type annotation
2025-09-10T19:18:29.0383567Z   --> reddit_pipeline/clients/reddit.py:27:43
2025-09-10T19:18:29.0383828Z    |
2025-09-10T19:18:29.0384151Z 26 |     @retry_with_backoff()
2025-09-10T19:18:29.0384553Z 27 |     def fetch_top_submissions(self, subs: List[str], since: datetime, limit_per_sub: int) -> List[Post]:
2025-09-10T19:18:29.0384977Z    |                                           ^^^^
2025-09-10T19:18:29.0385293Z 28 |         """Fetch top submissions for subreddits since a given time.
2025-09-10T19:18:29.0385596Z    |
2025-09-10T19:18:29.0385772Z help: Replace with `list`
2025-09-10T19:18:29.0385917Z 
2025-09-10T19:18:29.0386052Z UP006 [*] Use `list` instead of `List` for type annotation
2025-09-10T19:18:29.0386367Z   --> reddit_pipeline/clients/reddit.py:27:94
2025-09-10T19:18:29.0386716Z    |
2025-09-10T19:18:29.0386891Z 26 |     @retry_with_backoff()
2025-09-10T19:18:29.0387291Z 27 |     def fetch_top_submissions(self, subs: List[str], since: datetime, limit_per_sub: int) -> List[Post]:
2025-09-10T19:18:29.0387725Z    |                                                                                              ^^^^
2025-09-10T19:18:29.0388065Z 28 |         """Fetch top submissions for subreddits since a given time.
2025-09-10T19:18:29.0388354Z    |
2025-09-10T19:18:29.0388535Z help: Replace with `list`
2025-09-10T19:18:29.0407404Z 
2025-09-10T19:18:29.0407580Z E501 Line too long (104 > 100)
2025-09-10T19:18:29.0408026Z   --> reddit_pipeline/clients/reddit.py:27:101
2025-09-10T19:18:29.0408368Z    |
2025-09-10T19:18:29.0408557Z 26 |     @retry_with_backoff()
2025-09-10T19:18:29.0408982Z 27 |     def fetch_top_submissions(self, subs: List[str], since: datetime, limit_per_sub: int) -> List[Post]:
2025-09-10T19:18:29.0409853Z    |                                                                                                     ^^^^
2025-09-10T19:18:29.0410204Z 28 |         """Fetch top submissions for subreddits since a given time.
2025-09-10T19:18:29.0410502Z    |
2025-09-10T19:18:29.0410596Z 
2025-09-10T19:18:29.0410738Z UP006 [*] Use `list` instead of `List` for type annotation
2025-09-10T19:18:29.0411067Z   --> reddit_pipeline/clients/reddit.py:42:59
2025-09-10T19:18:29.0411331Z    |
2025-09-10T19:18:29.0411509Z 41 |     @retry_with_backoff()
2025-09-10T19:18:29.0411824Z 42 |     def fetch_comments(self, post_id: str, limit: int) -> List[dict]:
2025-09-10T19:18:29.0412170Z    |                                                           ^^^^
2025-09-10T19:18:29.0412506Z 43 |         """Fetch comments for a given post ID (minimal placeholder).
2025-09-10T19:18:29.0412818Z    |
2025-09-10T19:18:29.0412995Z help: Replace with `list`
2025-09-10T19:18:29.0413147Z 
2025-09-10T19:18:29.0413252Z E402 Module level import not at top of file
2025-09-10T19:18:29.0413536Z  --> reddit_pipeline/clients/slack.py:8:1
2025-09-10T19:18:29.0413778Z   |
2025-09-10T19:18:29.0413939Z 6 | """
2025-09-10T19:18:29.0414102Z 7 |
2025-09-10T19:18:29.0414325Z 8 | from ..utils import get_json_logger, retry_with_backoff
2025-09-10T19:18:29.0414630Z   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025-09-10T19:18:29.0414867Z   |
2025-09-10T19:18:29.0414967Z 
2025-09-10T19:18:29.0415087Z I001 [*] Import block is un-sorted or un-formatted
2025-09-10T19:18:29.0415391Z  --> reddit_pipeline/clients/slack.py:8:1
2025-09-10T19:18:29.0415635Z   |
2025-09-10T19:18:29.0415790Z 6 | """
2025-09-10T19:18:29.0415948Z 7 |
2025-09-10T19:18:29.0416163Z 8 | from ..utils import get_json_logger, retry_with_backoff
2025-09-10T19:18:29.0416454Z   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025-09-10T19:18:29.0416682Z   |
2025-09-10T19:18:29.0416849Z help: Organize imports
2025-09-10T19:18:29.0416988Z 
2025-09-10T19:18:29.0417096Z E402 Module level import not at top of file
2025-09-10T19:18:29.0417365Z   --> reddit_pipeline/config.py:10:1
2025-09-10T19:18:29.0417603Z    |
2025-09-10T19:18:29.0417760Z  8 | """
2025-09-10T19:18:29.0417922Z  9 |
2025-09-10T19:18:29.0418111Z 10 | from pydantic import Field, AnyUrl
2025-09-10T19:18:29.0418360Z    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025-09-10T19:18:29.0418620Z 11 | from pydantic_settings import BaseSettings
2025-09-10T19:18:29.0419001Z    |
2025-09-10T19:18:29.0419090Z 
2025-09-10T19:18:29.0419207Z I001 [*] Import block is un-sorted or un-formatted
2025-09-10T19:18:29.0419660Z   --> reddit_pipeline/config.py:10:1
2025-09-10T19:18:29.0419982Z    |
2025-09-10T19:18:29.0420140Z  8 |   """
2025-09-10T19:18:29.0420307Z  9 |
2025-09-10T19:18:29.0420499Z 10 | / from pydantic import Field, AnyUrl
2025-09-10T19:18:29.0420779Z 11 | | from pydantic_settings import BaseSettings
2025-09-10T19:18:29.0421052Z    | |__________________________________________^
2025-09-10T19:18:29.0421288Z    |
2025-09-10T19:18:29.0421458Z help: Organize imports
2025-09-10T19:18:29.0421586Z 
2025-09-10T19:18:29.0421691Z E402 Module level import not at top of file
2025-09-10T19:18:29.0421958Z   --> reddit_pipeline/config.py:11:1
2025-09-10T19:18:29.0422185Z    |
2025-09-10T19:18:29.0422365Z 10 | from pydantic import Field, AnyUrl
2025-09-10T19:18:29.0422640Z 11 | from pydantic_settings import BaseSettings
2025-09-10T19:18:29.0422910Z    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025-09-10T19:18:29.0423145Z    |
2025-09-10T19:18:29.0423237Z 
2025-09-10T19:18:29.0423337Z E402 Module level import not at top of file
2025-09-10T19:18:29.0423606Z  --> reddit_pipeline/dedupe.py:5:1
2025-09-10T19:18:29.0423834Z   |
2025-09-10T19:18:29.0424044Z 3 | """Dedupe utilities for posts (placeholder)."""
2025-09-10T19:18:29.0424306Z 4 |
2025-09-10T19:18:29.0424487Z 5 | from typing import Dict, List
2025-09-10T19:18:29.0424719Z   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025-09-10T19:18:29.0425055Z 6 |
2025-09-10T19:18:29.0425232Z 7 | from .models import Post
2025-09-10T19:18:29.0425441Z   |
2025-09-10T19:18:29.0425533Z 
2025-09-10T19:18:29.0425660Z UP035 `typing.Dict` is deprecated, use `dict` instead
2025-09-10T19:18:29.0425955Z  --> reddit_pipeline/dedupe.py:5:1
2025-09-10T19:18:29.0426178Z   |
2025-09-10T19:18:29.0426375Z 3 | """Dedupe utilities for posts (placeholder)."""
2025-09-10T19:18:29.0426629Z 4 |
2025-09-10T19:18:29.0426802Z 5 | from typing import Dict, List
2025-09-10T19:18:29.0427036Z   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025-09-10T19:18:29.0427239Z 6 |
2025-09-10T19:18:29.0427410Z 7 | from .models import Post
2025-09-10T19:18:29.0427618Z   |
2025-09-10T19:18:29.0427712Z 
2025-09-10T19:18:29.0427836Z UP035 `typing.List` is deprecated, use `list` instead
2025-09-10T19:18:29.0428128Z  --> reddit_pipeline/dedupe.py:5:1
2025-09-10T19:18:29.0428360Z   |
2025-09-10T19:18:29.0428560Z 3 | """Dedupe utilities for posts (placeholder)."""
2025-09-10T19:18:29.0428819Z 4 |
2025-09-10T19:18:29.0429005Z 5 | from typing import Dict, List
2025-09-10T19:18:29.0429241Z   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025-09-10T19:18:29.0429623Z 6 |
2025-09-10T19:18:29.0429806Z 7 | from .models import Post
2025-09-10T19:18:29.0430016Z   |
2025-09-10T19:18:29.0430103Z 
2025-09-10T19:18:29.0430211Z E402 Module level import not at top of file
2025-09-10T19:18:29.0430483Z  --> reddit_pipeline/dedupe.py:7:1
2025-09-10T19:18:29.0430705Z   |
2025-09-10T19:18:29.0430876Z 5 | from typing import Dict, List
2025-09-10T19:18:29.0431097Z 6 |
2025-09-10T19:18:29.0431266Z 7 | from .models import Post
2025-09-10T19:18:29.0431479Z   | ^^^^^^^^^^^^^^^^^^^^^^^^
2025-09-10T19:18:29.0431671Z   |
2025-09-10T19:18:29.0431758Z 
2025-09-10T19:18:29.0431893Z UP006 [*] Use `list` instead of `List` for type annotation
2025-09-10T19:18:29.0432201Z   --> reddit_pipeline/dedupe.py:10:25
2025-09-10T19:18:29.0432432Z    |
2025-09-10T19:18:29.0432652Z 10 | def dedupe_posts(posts: List[Post]) -> List[Post]:
2025-09-10T19:18:29.0432933Z    |                         ^^^^
2025-09-10T19:18:29.0433246Z 11 |     """Remove duplicates by post `id`. Keeps the first occurrence."""
2025-09-10T19:18:29.0433563Z    |
2025-09-10T19:18:29.0433736Z help: Replace with `list`
2025-09-10T19:18:29.0433874Z 
2025-09-10T19:18:29.0434006Z UP006 [*] Use `list` instead of `List` for type annotation
2025-09-10T19:18:29.0434304Z   --> reddit_pipeline/dedupe.py:10:40
2025-09-10T19:18:29.0434537Z    |
2025-09-10T19:18:29.0434752Z 10 | def dedupe_posts(posts: List[Post]) -> List[Post]:
2025-09-10T19:18:29.0435164Z    |                                        ^^^^
2025-09-10T19:18:29.0435487Z 11 |     """Remove duplicates by post `id`. Keeps the first occurrence."""
2025-09-10T19:18:29.0435796Z    |
2025-09-10T19:18:29.0435970Z help: Replace with `list`
2025-09-10T19:18:29.0436110Z 
2025-09-10T19:18:29.0436233Z UP006 [*] Use `dict` instead of `Dict` for type annotation
2025-09-10T19:18:29.0436527Z   --> reddit_pipeline/dedupe.py:13:11
2025-09-10T19:18:29.0436752Z    |
2025-09-10T19:18:29.0436997Z 11 |     """Remove duplicates by post `id`. Keeps the first occurrence."""
2025-09-10T19:18:29.0437299Z 12 |
2025-09-10T19:18:29.0437472Z 13 |     seen: Dict[str, Post] = {}
2025-09-10T19:18:29.0437703Z    |           ^^^^
2025-09-10T19:18:29.0437903Z 14 |     for post in posts:
2025-09-10T19:18:29.0438127Z 15 |         if post.id not in seen:
2025-09-10T19:18:29.0438356Z    |
2025-09-10T19:18:29.0438528Z help: Replace with `dict`
2025-09-10T19:18:29.0438668Z 
2025-09-10T19:18:29.0438777Z E402 Module level import not at top of file
2025-09-10T19:18:29.0439060Z   --> reddit_pipeline/llm/embeddings.py:8:1
2025-09-10T19:18:29.0439302Z    |
2025-09-10T19:18:29.0439636Z  6 | """
2025-09-10T19:18:29.0439812Z  7 |
2025-09-10T19:18:29.0439988Z  8 | from typing import List
2025-09-10T19:18:29.0440214Z    | ^^^^^^^^^^^^^^^^^^^^^^^
2025-09-10T19:18:29.0440414Z  9 |
2025-09-10T19:18:29.0440593Z 10 | from openai import OpenAI
2025-09-10T19:18:29.0440809Z    |
2025-09-10T19:18:29.0440903Z 
2025-09-10T19:18:29.0441221Z UP035 `typing.List` is deprecated, use `list` instead
2025-09-10T19:18:29.0441544Z   --> reddit_pipeline/llm/embeddings.py:8:1
2025-09-10T19:18:29.0441792Z    |
2025-09-10T19:18:29.0441948Z  6 | """
2025-09-10T19:18:29.0442108Z  7 |
2025-09-10T19:18:29.0442280Z  8 | from typing import List
2025-09-10T19:18:29.0442495Z    | ^^^^^^^^^^^^^^^^^^^^^^^
2025-09-10T19:18:29.0442690Z  9 |
2025-09-10T19:18:29.0442866Z 10 | from openai import OpenAI
2025-09-10T19:18:29.0443075Z    |
2025-09-10T19:18:29.0443169Z 
2025-09-10T19:18:29.0443290Z I001 [*] Import block is un-sorted or un-formatted
2025-09-10T19:18:29.0443603Z   --> reddit_pipeline/llm/embeddings.py:8:1
2025-09-10T19:18:29.0443849Z    |
2025-09-10T19:18:29.0444004Z  6 |   """
2025-09-10T19:18:29.0444169Z  7 |
2025-09-10T19:18:29.0444347Z  8 | / from typing import List
2025-09-10T19:18:29.0444555Z  9 | |
2025-09-10T19:18:29.0444731Z 10 | | from openai import OpenAI
2025-09-10T19:18:29.0444944Z 11 | |
2025-09-10T19:18:29.0445118Z 12 | | from ..config import settings
2025-09-10T19:18:29.0445411Z 13 | | from ..utils import get_json_logger, retry_with_backoff
2025-09-10T19:18:29.0445728Z    | |_______________________________________________________^
2025-09-10T19:18:29.0445971Z    |
2025-09-10T19:18:29.0446136Z help: Organize imports
2025-09-10T19:18:29.0446268Z 
2025-09-10T19:18:29.0446368Z E402 Module level import not at top of file
2025-09-10T19:18:29.0446652Z   --> reddit_pipeline/llm/embeddings.py:10:1
2025-09-10T19:18:29.0446897Z    |
2025-09-10T19:18:29.0447074Z  8 | from typing import List
2025-09-10T19:18:29.0447277Z  9 |
2025-09-10T19:18:29.0447446Z 10 | from openai import OpenAI
2025-09-10T19:18:29.0447659Z    | ^^^^^^^^^^^^^^^^^^^^^^^^^
2025-09-10T19:18:29.0447852Z 11 |
2025-09-10T19:18:29.0448023Z 12 | from ..config import settings
2025-09-10T19:18:29.0448248Z    |
2025-09-10T19:18:29.0448342Z 
2025-09-10T19:18:29.0448441Z E402 Module level import not at top of file
2025-09-10T19:18:29.0448718Z   --> reddit_pipeline/llm/embeddings.py:12:1
2025-09-10T19:18:29.0448999Z    |
2025-09-10T19:18:29.0449170Z 10 | from openai import OpenAI
2025-09-10T19:18:29.0449385Z 11 |
2025-09-10T19:18:29.0449772Z 12 | from ..config import settings
2025-09-10T19:18:29.0450028Z    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025-09-10T19:18:29.0450292Z 13 | from ..utils import get_json_logger, retry_with_backoff
2025-09-10T19:18:29.0450570Z    |
2025-09-10T19:18:29.0450662Z 
2025-09-10T19:18:29.0450761Z E402 Module level import not at top of file
2025-09-10T19:18:29.0451174Z   --> reddit_pipeline/llm/embeddings.py:13:1
2025-09-10T19:18:29.0451415Z    |
2025-09-10T19:18:29.0451586Z 12 | from ..config import settings
2025-09-10T19:18:29.0451863Z 13 | from ..utils import get_json_logger, retry_with_backoff
2025-09-10T19:18:29.0452160Z    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025-09-10T19:18:29.0452399Z    |
2025-09-10T19:18:29.0452486Z 
2025-09-10T19:18:29.0452618Z UP006 [*] Use `list` instead of `List` for type annotation
2025-09-10T19:18:29.0452923Z   --> reddit_pipeline/llm/embeddings.py:19:24
2025-09-10T19:18:29.0453172Z    |
2025-09-10T19:18:29.0453339Z 18 | @retry_with_backoff()
2025-09-10T19:18:29.0453632Z 19 | def embed_texts(texts: List[str]) -> List[List[float]]:
2025-09-10T19:18:29.0453916Z    |                        ^^^^
2025-09-10T19:18:29.0454164Z 20 |     """Create embeddings for a batch of texts.
2025-09-10T19:18:29.0454417Z    |
2025-09-10T19:18:29.0454590Z help: Replace with `list`
2025-09-10T19:18:29.0454727Z 
2025-09-10T19:18:29.0454857Z UP006 [*] Use `list` instead of `List` for type annotation
2025-09-10T19:18:29.0455160Z   --> reddit_pipeline/llm/embeddings.py:19:38
2025-09-10T19:18:29.0455397Z    |
2025-09-10T19:18:29.0455561Z 18 | @retry_with_backoff()
2025-09-10T19:18:29.0455817Z 19 | def embed_texts(texts: List[str]) -> List[List[float]]:
2025-09-10T19:18:29.0456107Z    |                                      ^^^^
2025-09-10T19:18:29.0456370Z 20 |     """Create embeddings for a batch of texts.
2025-09-10T19:18:29.0456617Z    |
2025-09-10T19:18:29.0456902Z help: Replace with `list`
2025-09-10T19:18:29.0457039Z 
2025-09-10T19:18:29.0457160Z UP006 [*] Use `list` instead of `List` for type annotation
2025-09-10T19:18:29.0457463Z   --> reddit_pipeline/llm/embeddings.py:19:43
2025-09-10T19:18:29.0457703Z    |
2025-09-10T19:18:29.0457868Z 18 | @retry_with_backoff()
2025-09-10T19:18:29.0458123Z 19 | def embed_texts(texts: List[str]) -> List[List[float]]:
2025-09-10T19:18:29.0458412Z    |                                           ^^^^
2025-09-10T19:18:29.0458677Z 20 |     """Create embeddings for a batch of texts.
2025-09-10T19:18:29.0458919Z    |
2025-09-10T19:18:29.0459085Z help: Replace with `list`
2025-09-10T19:18:29.0459222Z 
2025-09-10T19:18:29.0459342Z UP006 [*] Use `list` instead of `List` for type annotation
2025-09-10T19:18:29.0459852Z   --> reddit_pipeline/llm/embeddings.py:38:13
2025-09-10T19:18:29.0460099Z    |
2025-09-10T19:18:29.0460278Z 36 |     dim = settings.embeddings_dim
2025-09-10T19:18:29.0460627Z 37 |     # Map back to original order, pad/truncate to configured dim for safety
2025-09-10T19:18:29.0461008Z 38 |     result: List[List[float]] = [[ ] for _ in texts]
2025-09-10T19:18:29.0461276Z    |             ^^^^
2025-09-10T19:18:29.0461508Z 39 |     for (orig_idx, _), vec in zip(indexed, vectors):
2025-09-10T19:18:29.0461779Z 40 |         if len(vec) > dim:
2025-09-10T19:18:29.0461990Z    |
2025-09-10T19:18:29.0462167Z help: Replace with `list`
2025-09-10T19:18:29.0462308Z 
2025-09-10T19:18:29.0462438Z UP006 [*] Use `list` instead of `List` for type annotation
2025-09-10T19:18:29.0462753Z   --> reddit_pipeline/llm/embeddings.py:38:18
2025-09-10T19:18:29.0463000Z    |
2025-09-10T19:18:29.0463181Z 36 |     dim = settings.embeddings_dim
2025-09-10T19:18:29.0463516Z 37 |     # Map back to original order, pad/truncate to configured dim for safety
2025-09-10T19:18:29.0463878Z 38 |     result: List[List[float]] = [[ ] for _ in texts]
2025-09-10T19:18:29.0464144Z    |                  ^^^^
2025-09-10T19:18:29.0464377Z 39 |     for (orig_idx, _), vec in zip(indexed, vectors):
2025-09-10T19:18:29.0464652Z 40 |         if len(vec) > dim:
2025-09-10T19:18:29.0464860Z    |
2025-09-10T19:18:29.0465032Z help: Replace with `list`
2025-09-10T19:18:29.0465163Z 
2025-09-10T19:18:29.0465268Z E402 Module level import not at top of file
2025-09-10T19:18:29.0465543Z   --> reddit_pipeline/llm/insights.py:8:1
2025-09-10T19:18:29.0465785Z    |
2025-09-10T19:18:29.0465939Z  6 | """
2025-09-10T19:18:29.0466101Z  7 |
2025-09-10T19:18:29.0466283Z  8 | from typing import List, Dict, Any
2025-09-10T19:18:29.0466677Z    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025-09-10T19:18:29.0466890Z  9 |
2025-09-10T19:18:29.0467051Z 10 | import orjson
2025-09-10T19:18:29.0467232Z    |
2025-09-10T19:18:29.0467325Z 
2025-09-10T19:18:29.0467454Z UP035 `typing.List` is deprecated, use `list` instead
2025-09-10T19:18:29.0467759Z   --> reddit_pipeline/llm/insights.py:8:1
2025-09-10T19:18:29.0467999Z    |
2025-09-10T19:18:29.0468152Z  6 | """
2025-09-10T19:18:29.0468307Z  7 |
2025-09-10T19:18:29.0468487Z  8 | from typing import List, Dict, Any
2025-09-10T19:18:29.0468723Z    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025-09-10T19:18:29.0468931Z  9 |
2025-09-10T19:18:29.0469091Z 10 | import orjson
2025-09-10T19:18:29.0469268Z    |
2025-09-10T19:18:29.0469357Z 
2025-09-10T19:18:29.0469631Z UP035 `typing.Dict` is deprecated, use `dict` instead
2025-09-10T19:18:29.0469951Z   --> reddit_pipeline/llm/insights.py:8:1
2025-09-10T19:18:29.0470185Z    |
2025-09-10T19:18:29.0470335Z  6 | """
2025-09-10T19:18:29.0470496Z  7 |
2025-09-10T19:18:29.0470668Z  8 | from typing import List, Dict, Any
2025-09-10T19:18:29.0470906Z    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025-09-10T19:18:29.0471119Z  9 |
2025-09-10T19:18:29.0471275Z 10 | import orjson
2025-09-10T19:18:29.0471454Z    |
2025-09-10T19:18:29.0471546Z 
2025-09-10T19:18:29.0471658Z I001 [*] Import block is un-sorted or un-formatted
2025-09-10T19:18:29.0471949Z   --> reddit_pipeline/llm/insights.py:8:1
2025-09-10T19:18:29.0472188Z    |
2025-09-10T19:18:29.0472460Z  6 |   """
2025-09-10T19:18:29.0472622Z  7 |
2025-09-10T19:18:29.0472800Z  8 | / from typing import List, Dict, Any
2025-09-10T19:18:29.0473034Z  9 | |
2025-09-10T19:18:29.0473203Z 10 | | import orjson
2025-09-10T19:18:29.0473412Z 11 | | from openai import OpenAI
2025-09-10T19:18:29.0473631Z 12 | |
2025-09-10T19:18:29.0473811Z 13 | | from ..config import settings
2025-09-10T19:18:29.0474070Z 14 | | from ..models import Insight, Post
2025-09-10T19:18:29.0474372Z 15 | | from ..utils import get_json_logger, retry_with_backoff
2025-09-10T19:18:29.0474697Z    | |_______________________________________________________^
2025-09-10T19:18:29.0474946Z    |
2025-09-10T19:18:29.0475112Z help: Organize imports
2025-09-10T19:18:29.0475238Z 
2025-09-10T19:18:29.0475342Z E402 Module level import not at top of file
2025-09-10T19:18:29.0475615Z   --> reddit_pipeline/llm/insights.py:10:1
2025-09-10T19:18:29.0475855Z    |
2025-09-10T19:18:29.0476031Z  8 | from typing import List, Dict, Any
2025-09-10T19:18:29.0476258Z  9 |
2025-09-10T19:18:29.0476421Z 10 | import orjson
2025-09-10T19:18:29.0476599Z    | ^^^^^^^^^^^^^
2025-09-10T19:18:29.0476790Z 11 | from openai import OpenAI
2025-09-10T19:18:29.0476998Z    |
2025-09-10T19:18:29.0477087Z 
2025-09-10T19:18:29.0477191Z E402 Module level import not at top of file
2025-09-10T19:18:29.0477461Z   --> reddit_pipeline/llm/insights.py:11:1
2025-09-10T19:18:29.0477699Z    |
2025-09-10T19:18:29.0477855Z 10 | import orjson
2025-09-10T19:18:29.0478050Z 11 | from openai import OpenAI
2025-09-10T19:18:29.0478271Z    | ^^^^^^^^^^^^^^^^^^^^^^^^^
2025-09-10T19:18:29.0478464Z 12 |
2025-09-10T19:18:29.0478638Z 13 | from ..config import settings
2025-09-10T19:18:29.0478857Z    |
2025-09-10T19:18:29.0478942Z 
2025-09-10T19:18:29.0479046Z E402 Module level import not at top of file
2025-09-10T19:18:29.0479320Z   --> reddit_pipeline/llm/insights.py:13:1
2025-09-10T19:18:29.0479745Z    |
2025-09-10T19:18:29.0479921Z 11 | from openai import OpenAI
2025-09-10T19:18:29.0480129Z 12 |
2025-09-10T19:18:29.0480305Z 13 | from ..config import settings
2025-09-10T19:18:29.0480529Z    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025-09-10T19:18:29.0480764Z 14 | from ..models import Insight, Post
2025-09-10T19:18:29.0481060Z 15 | from ..utils import get_json_logger, retry_with_backoff
2025-09-10T19:18:29.0481337Z    |
2025-09-10T19:18:29.0481431Z 
2025-09-10T19:18:29.0481529Z E402 Module level import not at top of file
2025-09-10T19:18:29.0481799Z   --> reddit_pipeline/llm/insights.py:14:1
2025-09-10T19:18:29.0482035Z    |
2025-09-10T19:18:29.0482329Z 13 | from ..config import settings
2025-09-10T19:18:29.0482572Z 14 | from ..models import Insight, Post
2025-09-10T19:18:29.0482813Z    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025-09-10T19:18:29.0483086Z 15 | from ..utils import get_json_logger, retry_with_backoff
2025-09-10T19:18:29.0483358Z    |
2025-09-10T19:18:29.0483450Z 
2025-09-10T19:18:29.0483561Z F401 [*] `..models.Insight` imported but unused
2025-09-10T19:18:29.0483845Z   --> reddit_pipeline/llm/insights.py:14:22
2025-09-10T19:18:29.0484089Z    |
2025-09-10T19:18:29.0484273Z 13 | from ..config import settings
2025-09-10T19:18:29.0484527Z 14 | from ..models import Insight, Post
2025-09-10T19:18:29.0484783Z    |                      ^^^^^^^
2025-09-10T19:18:29.0485062Z 15 | from ..utils import get_json_logger, retry_with_backoff
2025-09-10T19:18:29.0485345Z    |
2025-09-10T19:18:29.0485524Z help: Remove unused import
2025-09-10T19:18:29.0485671Z 
2025-09-10T19:18:29.0485779Z F401 [*] `..models.Post` imported but unused
2025-09-10T19:18:29.0486067Z   --> reddit_pipeline/llm/insights.py:14:31
2025-09-10T19:18:29.0486313Z    |
2025-09-10T19:18:29.0486492Z 13 | from ..config import settings
2025-09-10T19:18:29.0486740Z 14 | from ..models import Insight, Post
2025-09-10T19:18:29.0486985Z    |                               ^^^^
2025-09-10T19:18:29.0487269Z 15 | from ..utils import get_json_logger, retry_with_backoff
2025-09-10T19:18:29.0487548Z    |
2025-09-10T19:18:29.0487720Z help: Remove unused import
2025-09-10T19:18:29.0487858Z 
2025-09-10T19:18:29.0488079Z E402 Module level import not at top of file
2025-09-10T19:18:29.0488357Z   --> reddit_pipeline/llm/insights.py:15:1
2025-09-10T19:18:29.0488599Z    |
2025-09-10T19:18:29.0488774Z 13 | from ..config import settings
2025-09-10T19:18:29.0489017Z 14 | from ..models import Insight, Post
2025-09-10T19:18:29.0489311Z 15 | from ..utils import get_json_logger, retry_with_backoff
2025-09-10T19:18:29.0489792Z    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025-09-10T19:18:29.0490037Z    |
2025-09-10T19:18:29.0490123Z 
2025-09-10T19:18:29.0490255Z UP006 [*] Use `dict` instead of `Dict` for type annotation
2025-09-10T19:18:29.0490565Z   --> reddit_pipeline/llm/insights.py:24:27
2025-09-10T19:18:29.0490805Z    |
2025-09-10T19:18:29.0490999Z 24 | def _response_format() -> Dict[str, Any]:
2025-09-10T19:18:29.0491263Z    |                           ^^^^
2025-09-10T19:18:29.0491483Z 25 |     return {
2025-09-10T19:18:29.0491679Z 26 |         "type": "json_schema",
2025-09-10T19:18:29.0491900Z    |
2025-09-10T19:18:29.0492074Z help: Replace with `dict`
2025-09-10T19:18:29.0492219Z 
2025-09-10T19:18:29.0492344Z UP006 [*] Use `list` instead of `List` for type annotation
2025-09-10T19:18:29.0492659Z   --> reddit_pipeline/llm/insights.py:57:28
2025-09-10T19:18:29.0492903Z    |
2025-09-10T19:18:29.0493072Z 56 | @retry_with_backoff()
2025-09-10T19:18:29.0493371Z 57 | def _call_openai(messages: List[Dict[str, str]]) -> Dict[str, Any]:
2025-09-10T19:18:29.0493701Z    |                            ^^^^
2025-09-10T19:18:29.0493982Z 58 |     client = OpenAI(api_key=settings.openai_api_key)
2025-09-10T19:18:29.0494299Z 59 |     resp = client.chat.completions.create(
2025-09-10T19:18:29.0494552Z    |
2025-09-10T19:18:29.0494726Z help: Replace with `list`
2025-09-10T19:18:29.0494863Z 
2025-09-10T19:18:29.0494988Z UP006 [*] Use `dict` instead of `Dict` for type annotation
2025-09-10T19:18:29.0495301Z   --> reddit_pipeline/llm/insights.py:57:33
2025-09-10T19:18:29.0495554Z    |
2025-09-10T19:18:29.0495722Z 56 | @retry_with_backoff()
2025-09-10T19:18:29.0496023Z 57 | def _call_openai(messages: List[Dict[str, str]]) -> Dict[str, Any]:
2025-09-10T19:18:29.0496351Z    |                                 ^^^^
2025-09-10T19:18:29.0496631Z 58 |     client = OpenAI(api_key=settings.openai_api_key)
2025-09-10T19:18:29.0496945Z 59 |     resp = client.chat.completions.create(
2025-09-10T19:18:29.0497198Z    |
2025-09-10T19:18:29.0497373Z help: Replace with `dict`
2025-09-10T19:18:29.0497502Z 
2025-09-10T19:18:29.0497754Z UP006 [*] Use `dict` instead of `Dict` for type annotation
2025-09-10T19:18:29.0498058Z   --> reddit_pipeline/llm/insights.py:57:53
2025-09-10T19:18:29.0498296Z    |
2025-09-10T19:18:29.0498462Z 56 | @retry_with_backoff()
2025-09-10T19:18:29.0498750Z 57 | def _call_openai(messages: List[Dict[str, str]]) -> Dict[str, Any]:
2025-09-10T19:18:29.0499083Z    |                                                     ^^^^
2025-09-10T19:18:29.0499729Z 58 |     client = OpenAI(api_key=settings.openai_api_key)
2025-09-10T19:18:29.0500305Z 59 |     resp = client.chat.completions.create(
2025-09-10T19:18:29.0500767Z    |
2025-09-10T19:18:29.0501003Z help: Replace with `dict`
2025-09-10T19:18:29.0501147Z 
2025-09-10T19:18:29.0501274Z UP006 [*] Use `dict` instead of `Dict` for type annotation
2025-09-10T19:18:29.0501589Z   --> reddit_pipeline/llm/insights.py:81:16
2025-09-10T19:18:29.0501834Z    |
2025-09-10T19:18:29.0502028Z 80 | def generate_insights_from_summaries(
2025-09-10T19:18:29.0502303Z 81 |     summaries: Dict[str, Dict[str, Any]]
2025-09-10T19:18:29.0502561Z    |                ^^^^
2025-09-10T19:18:29.0502776Z 82 | ) -> Dict[str, Dict[str, Any]]:
2025-09-10T19:18:29.0503130Z 83 |     """Generate insights for each post_id given a summariser JSON mapping."""
2025-09-10T19:18:29.0503473Z    |
2025-09-10T19:18:29.0503646Z help: Replace with `dict`
2025-09-10T19:18:29.0503786Z 
2025-09-10T19:18:29.0503916Z UP006 [*] Use `dict` instead of `Dict` for type annotation
2025-09-10T19:18:29.0504227Z   --> reddit_pipeline/llm/insights.py:81:26
2025-09-10T19:18:29.0504612Z    |
2025-09-10T19:18:29.0504803Z 80 | def generate_insights_from_summaries(
2025-09-10T19:18:29.0505073Z 81 |     summaries: Dict[str, Dict[str, Any]]
2025-09-10T19:18:29.0505327Z    |                          ^^^^
2025-09-10T19:18:29.0505562Z 82 | ) -> Dict[str, Dict[str, Any]]:
2025-09-10T19:18:29.0505902Z 83 |     """Generate insights for each post_id given a summariser JSON mapping."""
2025-09-10T19:18:29.0506241Z    |
2025-09-10T19:18:29.0506414Z help: Replace with `dict`
2025-09-10T19:18:29.0506553Z 
2025-09-10T19:18:29.0506685Z UP006 [*] Use `dict` instead of `Dict` for type annotation
2025-09-10T19:18:29.0506996Z   --> reddit_pipeline/llm/insights.py:82:6
2025-09-10T19:18:29.0507244Z    |
2025-09-10T19:18:29.0507430Z 80 | def generate_insights_from_summaries(
2025-09-10T19:18:29.0507707Z 81 |     summaries: Dict[str, Dict[str, Any]]
2025-09-10T19:18:29.0507966Z 82 | ) -> Dict[str, Dict[str, Any]]:
2025-09-10T19:18:29.0508191Z    |      ^^^^
2025-09-10T19:18:29.0508497Z 83 |     """Generate insights for each post_id given a summariser JSON mapping."""
2025-09-10T19:18:29.0508831Z    |
2025-09-10T19:18:29.0509008Z help: Replace with `dict`
2025-09-10T19:18:29.0509148Z 
2025-09-10T19:18:29.0509274Z UP006 [*] Use `dict` instead of `Dict` for type annotation
2025-09-10T19:18:29.0509783Z   --> reddit_pipeline/llm/insights.py:82:16
2025-09-10T19:18:29.0510028Z    |
2025-09-10T19:18:29.0510211Z 80 | def generate_insights_from_summaries(
2025-09-10T19:18:29.0510482Z 81 |     summaries: Dict[str, Dict[str, Any]]
2025-09-10T19:18:29.0510739Z 82 | ) -> Dict[str, Dict[str, Any]]:
2025-09-10T19:18:29.0510970Z    |                ^^^^
2025-09-10T19:18:29.0511280Z 83 |     """Generate insights for each post_id given a summariser JSON mapping."""
2025-09-10T19:18:29.0511612Z    |
2025-09-10T19:18:29.0511784Z help: Replace with `dict`
2025-09-10T19:18:29.0511923Z 
2025-09-10T19:18:29.0512049Z UP006 [*] Use `dict` instead of `Dict` for type annotation
2025-09-10T19:18:29.0512362Z   --> reddit_pipeline/llm/insights.py:86:14
2025-09-10T19:18:29.0512612Z    |
2025-09-10T19:18:29.0512860Z 85 |     log.info("Generating insights", extra={"count": len(summaries)})
2025-09-10T19:18:29.0513210Z 86 |     outputs: Dict[str, Dict[str, Any]] = {}
2025-09-10T19:18:29.0513462Z    |              ^^^^
2025-09-10T19:18:29.0513699Z 87 |     for post_id, payload in summaries.items():
2025-09-10T19:18:29.0513970Z 88 |         messages = [
2025-09-10T19:18:29.0514172Z    |
2025-09-10T19:18:29.0514477Z help: Replace with `dict`
2025-09-10T19:18:29.0514620Z 
2025-09-10T19:18:29.0514754Z UP006 [*] Use `dict` instead of `Dict` for type annotation
2025-09-10T19:18:29.0515074Z   --> reddit_pipeline/llm/insights.py:86:24
2025-09-10T19:18:29.0515325Z    |
2025-09-10T19:18:29.0515572Z 85 |     log.info("Generating insights", extra={"count": len(summaries)})
2025-09-10T19:18:29.0515922Z 86 |     outputs: Dict[str, Dict[str, Any]] = {}
2025-09-10T19:18:29.0516179Z    |                        ^^^^
2025-09-10T19:18:29.0516436Z 87 |     for post_id, payload in summaries.items():
2025-09-10T19:18:29.0516705Z 88 |         messages = [
2025-09-10T19:18:29.0516900Z    |
2025-09-10T19:18:29.0517074Z help: Replace with `dict`
2025-09-10T19:18:29.0517206Z 
2025-09-10T19:18:29.0517294Z E501 Line too long (112 > 100)
2025-09-10T19:18:29.0517539Z   --> reddit_pipeline/llm/insights.py:94:101
2025-09-10T19:18:29.0517782Z    |
2025-09-10T19:18:29.0517945Z 92 |                 "content": (
2025-09-10T19:18:29.0518273Z 93 |                     "Given the following summariser JSON, return strict JSON with keys: "
2025-09-10T19:18:29.0518786Z 94 |                     "freelancer_actions[], client_playbook[], measurement[], risk_watchouts[], draft_titles[], "
2025-09-10T19:18:29.0519222Z    |                                                                                                     ^^^^^^^^^^^^
2025-09-10T19:18:29.0519944Z 95 |                     "plus a confidence 0.0–1.0 and short_rationale.\n\n"
2025-09-10T19:18:29.0520288Z 96 |                     + orjson.dumps(payload).decode("utf-8")
2025-09-10T19:18:29.0520685Z    |
2025-09-10T19:18:29.0520784Z 
2025-09-10T19:18:29.0520888Z E402 Module level import not at top of file
2025-09-10T19:18:29.0521175Z   --> reddit_pipeline/llm/summariser.py:8:1
2025-09-10T19:18:29.0521424Z    |
2025-09-10T19:18:29.0521576Z  6 | """
2025-09-10T19:18:29.0521732Z  7 |
2025-09-10T19:18:29.0521913Z  8 | from typing import List, Dict, Any
2025-09-10T19:18:29.0522159Z    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025-09-10T19:18:29.0522384Z  9 |
2025-09-10T19:18:29.0522546Z 10 | import orjson
2025-09-10T19:18:29.0522931Z    |
2025-09-10T19:18:29.0523023Z 
2025-09-10T19:18:29.0523155Z UP035 `typing.List` is deprecated, use `list` instead
2025-09-10T19:18:29.0523466Z   --> reddit_pipeline/llm/summariser.py:8:1
2025-09-10T19:18:29.0523707Z    |
2025-09-10T19:18:29.0523859Z  6 | """
2025-09-10T19:18:29.0524015Z  7 |
2025-09-10T19:18:29.0524193Z  8 | from typing import List, Dict, Any
2025-09-10T19:18:29.0524430Z    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025-09-10T19:18:29.0524661Z  9 |
2025-09-10T19:18:29.0524823Z 10 | import orjson
2025-09-10T19:18:29.0525001Z    |
2025-09-10T19:18:29.0525086Z 
2025-09-10T19:18:29.0525216Z UP035 `typing.Dict` is deprecated, use `dict` instead
2025-09-10T19:18:29.0525523Z   --> reddit_pipeline/llm/summariser.py:8:1
2025-09-10T19:18:29.0525765Z    |
2025-09-10T19:18:29.0525918Z  6 | """
2025-09-10T19:18:29.0526076Z  7 |
2025-09-10T19:18:29.0526252Z  8 | from typing import List, Dict, Any
2025-09-10T19:18:29.0526492Z    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025-09-10T19:18:29.0526701Z  9 |
2025-09-10T19:18:29.0526861Z 10 | import orjson
2025-09-10T19:18:29.0527036Z    |
2025-09-10T19:18:29.0527126Z 
2025-09-10T19:18:29.0527241Z I001 [*] Import block is un-sorted or un-formatted
2025-09-10T19:18:29.0527538Z   --> reddit_pipeline/llm/summariser.py:8:1
2025-09-10T19:18:29.0527783Z    |
2025-09-10T19:18:29.0527937Z  6 |   """
2025-09-10T19:18:29.0528107Z  7 |
2025-09-10T19:18:29.0528301Z  8 | / from typing import List, Dict, Any
2025-09-10T19:18:29.0528545Z  9 | |
2025-09-10T19:18:29.0528720Z 10 | | import orjson
2025-09-10T19:18:29.0528928Z 11 | | from openai import OpenAI
2025-09-10T19:18:29.0529144Z 12 | |
2025-09-10T19:18:29.0529322Z 13 | | from ..config import settings
2025-09-10T19:18:29.0529680Z 14 | | from ..models import Post
2025-09-10T19:18:29.0529964Z 15 | | from ..utils import get_json_logger, retry_with_backoff
2025-09-10T19:18:29.0530285Z    | |_______________________________________________________^
2025-09-10T19:18:29.0530660Z    |
2025-09-10T19:18:29.0530830Z help: Organize imports
2025-09-10T19:18:29.0530958Z 
2025-09-10T19:18:29.0531064Z E402 Module level import not at top of file
2025-09-10T19:18:29.0531347Z   --> reddit_pipeline/llm/summariser.py:10:1
2025-09-10T19:18:29.0531592Z    |
2025-09-10T19:18:29.0531772Z  8 | from typing import List, Dict, Any
2025-09-10T19:18:29.0532017Z  9 |
2025-09-10T19:18:29.0532181Z 10 | import orjson
2025-09-10T19:18:29.0532365Z    | ^^^^^^^^^^^^^
2025-09-10T19:18:29.0532569Z 11 | from openai import OpenAI
2025-09-10T19:18:29.0532781Z    |
2025-09-10T19:18:29.0532873Z 
2025-09-10T19:18:29.0532975Z E402 Module level import not at top of file
2025-09-10T19:18:29.0533259Z   --> reddit_pipeline/llm/summariser.py:11:1
2025-09-10T19:18:29.0533505Z    |
2025-09-10T19:18:29.0533666Z 10 | import orjson
2025-09-10T19:18:29.0533866Z 11 | from openai import OpenAI
2025-09-10T19:18:29.0534088Z    | ^^^^^^^^^^^^^^^^^^^^^^^^^
2025-09-10T19:18:29.0534290Z 12 |
2025-09-10T19:18:29.0534474Z 13 | from ..config import settings
2025-09-10T19:18:29.0534697Z    |
2025-09-10T19:18:29.0534789Z 
2025-09-10T19:18:29.0534887Z E402 Module level import not at top of file
2025-09-10T19:18:29.0535167Z   --> reddit_pipeline/llm/summariser.py:13:1
2025-09-10T19:18:29.0535412Z    |
2025-09-10T19:18:29.0535585Z 11 | from openai import OpenAI
2025-09-10T19:18:29.0535796Z 12 |
2025-09-10T19:18:29.0535972Z 13 | from ..config import settings
2025-09-10T19:18:29.0536202Z    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025-09-10T19:18:29.0536545Z 14 | from ..models import Post
2025-09-10T19:18:29.0536820Z 15 | from ..utils import get_json_logger, retry_with_backoff
2025-09-10T19:18:29.0537102Z    |
2025-09-10T19:18:29.0537195Z 
2025-09-10T19:18:29.0537297Z E402 Module level import not at top of file
2025-09-10T19:18:29.0537571Z   --> reddit_pipeline/llm/summariser.py:14:1
2025-09-10T19:18:29.0537815Z    |
2025-09-10T19:18:29.0537987Z 13 | from ..config import settings
2025-09-10T19:18:29.0538221Z 14 | from ..models import Post
2025-09-10T19:18:29.0538443Z    | ^^^^^^^^^^^^^^^^^^^^^^^^^
2025-09-10T19:18:29.0538706Z 15 | from ..utils import get_json_logger, retry_with_backoff
2025-09-10T19:18:29.0538982Z    |
2025-09-10T19:18:29.0539070Z 
2025-09-10T19:18:29.0539174Z E402 Module level import not at top of file
2025-09-10T19:18:29.0539595Z   --> reddit_pipeline/llm/summariser.py:15:1
2025-09-10T19:18:29.0539891Z    |
2025-09-10T19:18:29.0540066Z 13 | from ..config import settings
2025-09-10T19:18:29.0540306Z 14 | from ..models import Post
2025-09-10T19:18:29.0540574Z 15 | from ..utils import get_json_logger, retry_with_backoff
2025-09-10T19:18:29.0540872Z    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025-09-10T19:18:29.0541106Z    |
2025-09-10T19:18:29.0541193Z 
2025-09-10T19:18:29.0541327Z UP006 [*] Use `list` instead of `List` for type annotation
2025-09-10T19:18:29.0541646Z   --> reddit_pipeline/llm/summariser.py:31:51
2025-09-10T19:18:29.0541892Z    |
2025-09-10T19:18:29.0542174Z 31 | def _build_user_content(post: Post, top_comments: List[Dict[str, Any]]) -> str:
2025-09-10T19:18:29.0542552Z    |                                                   ^^^^
2025-09-10T19:18:29.0542812Z 32 |     title = post.title
2025-09-10T19:18:29.0543031Z 33 |     body = post.text or ""
2025-09-10T19:18:29.0543241Z    |
2025-09-10T19:18:29.0543412Z help: Replace with `list`
2025-09-10T19:18:29.0543554Z 
2025-09-10T19:18:29.0543680Z UP006 [*] Use `dict` instead of `Dict` for type annotation
2025-09-10T19:18:29.0543997Z   --> reddit_pipeline/llm/summariser.py:31:56
2025-09-10T19:18:29.0544247Z    |
2025-09-10T19:18:29.0544523Z 31 | def _build_user_content(post: Post, top_comments: List[Dict[str, Any]]) -> str:
2025-09-10T19:18:29.0544888Z    |                                                        ^^^^
2025-09-10T19:18:29.0545147Z 32 |     title = post.title
2025-09-10T19:18:29.0545365Z 33 |     body = post.text or ""
2025-09-10T19:18:29.0545575Z    |
2025-09-10T19:18:29.0545749Z help: Replace with `dict`
2025-09-10T19:18:29.0546019Z 
2025-09-10T19:18:29.0546102Z E501 Line too long (102 > 100)
2025-09-10T19:18:29.0546353Z   --> reddit_pipeline/llm/summariser.py:38:101
2025-09-10T19:18:29.0546605Z    |
2025-09-10T19:18:29.0546762Z 36 |     )
2025-09-10T19:18:29.0546930Z 37 |     return (
2025-09-10T19:18:29.0547275Z 38 |         f"Post title:\n{title}\n\nPost selftext:\n{body}\n\nTop comments (truncated):\n{comments_str}"
2025-09-10T19:18:29.0547708Z    |                                                                                                     ^^
2025-09-10T19:18:29.0547971Z 39 |     )
2025-09-10T19:18:29.0548135Z    |
2025-09-10T19:18:29.0548226Z 
2025-09-10T19:18:29.0548363Z UP006 [*] Use `dict` instead of `Dict` for type annotation
2025-09-10T19:18:29.0548683Z   --> reddit_pipeline/llm/summariser.py:42:27
2025-09-10T19:18:29.0548933Z    |
2025-09-10T19:18:29.0549127Z 42 | def _response_format() -> Dict[str, Any]:
2025-09-10T19:18:29.0549387Z    |                           ^^^^
2025-09-10T19:18:29.0549715Z 43 |     return {
2025-09-10T19:18:29.0549909Z 44 |         "type": "json_schema",
2025-09-10T19:18:29.0550128Z    |
2025-09-10T19:18:29.0550303Z help: Replace with `dict`
2025-09-10T19:18:29.0550444Z 
2025-09-10T19:18:29.0550581Z UP006 [*] Use `list` instead of `List` for type annotation
2025-09-10T19:18:29.0550893Z   --> reddit_pipeline/llm/summariser.py:77:28
2025-09-10T19:18:29.0551144Z    |
2025-09-10T19:18:29.0551317Z 76 | @retry_with_backoff()
2025-09-10T19:18:29.0551614Z 77 | def _call_openai(messages: List[Dict[str, str]]) -> Dict[str, Any]:
2025-09-10T19:18:29.0552055Z    |                            ^^^^
2025-09-10T19:18:29.0552333Z 78 |     client = OpenAI(api_key=settings.openai_api_key)
2025-09-10T19:18:29.0552650Z 79 |     resp = client.chat.completions.create(
2025-09-10T19:18:29.0552908Z    |
2025-09-10T19:18:29.0553079Z help: Replace with `list`
2025-09-10T19:18:29.0553220Z 
2025-09-10T19:18:29.0553346Z UP006 [*] Use `dict` instead of `Dict` for type annotation
2025-09-10T19:18:29.0553699Z   --> reddit_pipeline/llm/summariser.py:77:33
2025-09-10T19:18:29.0553955Z    |
2025-09-10T19:18:29.0554121Z 76 | @retry_with_backoff()
2025-09-10T19:18:29.0554415Z 77 | def _call_openai(messages: List[Dict[str, str]]) -> Dict[str, Any]:
2025-09-10T19:18:29.0554744Z    |                                 ^^^^
2025-09-10T19:18:29.0555034Z 78 |     client = OpenAI(api_key=settings.openai_api_key)
2025-09-10T19:18:29.0555360Z 79 |     resp = client.chat.completions.create(
2025-09-10T19:18:29.0555618Z    |
2025-09-10T19:18:29.0555797Z help: Replace with `dict`
2025-09-10T19:18:29.0555935Z 
2025-09-10T19:18:29.0556062Z UP006 [*] Use `dict` instead of `Dict` for type annotation
2025-09-10T19:18:29.0556380Z   --> reddit_pipeline/llm/summariser.py:77:53
2025-09-10T19:18:29.0556630Z    |
2025-09-10T19:18:29.0556800Z 76 | @retry_with_backoff()
2025-09-10T19:18:29.0557095Z 77 | def _call_openai(messages: List[Dict[str, str]]) -> Dict[str, Any]:
2025-09-10T19:18:29.0557442Z    |                                                     ^^^^
2025-09-10T19:18:29.0557745Z 78 |     client = OpenAI(api_key=settings.openai_api_key)
2025-09-10T19:18:29.0558058Z 79 |     resp = client.chat.completions.create(
2025-09-10T19:18:29.0558311Z    |
2025-09-10T19:18:29.0558485Z help: Replace with `dict`
2025-09-10T19:18:29.0558615Z 
2025-09-10T19:18:29.0558706Z E501 Line too long (173 > 100)
2025-09-10T19:18:29.0558961Z   --> reddit_pipeline/llm/summariser.py:90:101
2025-09-10T19:18:29.0559213Z    |
2025-09-10T19:18:29.0559402Z 88 | …
2025-09-10T19:18:29.0559790Z 89 | …rage.
2025-09-10T19:18:29.0560378Z 90 | …s": [], "segments": [], "tools_mentioned": [], "contrarian_take": "", "key_metrics": [], "sources": []}
2025-09-10T19:18:29.0560803Z    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025-09-10T19:18:29.0561065Z    |
2025-09-10T19:18:29.0561154Z 
2025-09-10T19:18:29.0561289Z UP006 [*] Use `list` instead of `List` for type annotation
2025-09-10T19:18:29.0561611Z   --> reddit_pipeline/llm/summariser.py:94:12
2025-09-10T19:18:29.0562038Z    |
2025-09-10T19:18:29.0562223Z 93 | def summarise_posts_with_comments(
2025-09-10T19:18:29.0562481Z 94 |     posts: List[Post],
2025-09-10T19:18:29.0562694Z    |            ^^^^
2025-09-10T19:18:29.0562940Z 95 |     comments_by_post: Dict[str, List[Dict[str, Any]]],
2025-09-10T19:18:29.0563237Z 96 | ) -> Dict[str, Dict[str, Any]]:
2025-09-10T19:18:29.0563463Z    |
2025-09-10T19:18:29.0563636Z help: Replace with `list`
2025-09-10T19:18:29.0563774Z 
2025-09-10T19:18:29.0563906Z UP006 [*] Use `dict` instead of `Dict` for type annotation
2025-09-10T19:18:29.0564220Z   --> reddit_pipeline/llm/summariser.py:95:23
2025-09-10T19:18:29.0564471Z    |
2025-09-10T19:18:29.0564652Z 93 | def summarise_posts_with_comments(
2025-09-10T19:18:29.0564901Z 94 |     posts: List[Post],
2025-09-10T19:18:29.0565156Z 95 |     comments_by_post: Dict[str, List[Dict[str, Any]]],
2025-09-10T19:18:29.0565435Z    |                       ^^^^
2025-09-10T19:18:29.0565660Z 96 | ) -> Dict[str, Dict[str, Any]]:
2025-09-10T19:18:29.0565987Z 97 |     """Summarise each post with its top-K comments using strict JSON.
2025-09-10T19:18:29.0566303Z    |
2025-09-10T19:18:29.0566472Z help: Replace with `dict`
2025-09-10T19:18:29.0566613Z 
2025-09-10T19:18:29.0566737Z UP006 [*] Use `list` instead of `List` for type annotation
2025-09-10T19:18:29.0567053Z   --> reddit_pipeline/llm/summariser.py:95:33
2025-09-10T19:18:29.0567301Z    |
2025-09-10T19:18:29.0567484Z 93 | def summarise_posts_with_comments(
2025-09-10T19:18:29.0567866Z 94 |     posts: List[Post],
2025-09-10T19:18:29.0568120Z 95 |     comments_by_post: Dict[str, List[Dict[str, Any]]],
2025-09-10T19:18:29.0568404Z    |                                 ^^^^
2025-09-10T19:18:29.0568647Z 96 | ) -> Dict[str, Dict[str, Any]]:
2025-09-10T19:18:29.0568961Z 97 |     """Summarise each post with its top-K comments using strict JSON.
2025-09-10T19:18:29.0569268Z    |
2025-09-10T19:18:29.0569551Z help: Replace with `list`
2025-09-10T19:18:29.0569690Z 
2025-09-10T19:18:29.0569826Z UP006 [*] Use `dict` instead of `Dict` for type annotation
2025-09-10T19:18:29.0570138Z   --> reddit_pipeline/llm/summariser.py:95:38
2025-09-10T19:18:29.0570388Z    |
2025-09-10T19:18:29.0570568Z 93 | def summarise_posts_with_comments(
2025-09-10T19:18:29.0570818Z 94 |     posts: List[Post],
2025-09-10T19:18:29.0571069Z 95 |     comments_by_post: Dict[str, List[Dict[str, Any]]],
2025-09-10T19:18:29.0571355Z    |                                      ^^^^
2025-09-10T19:18:29.0571782Z 96 | ) -> Dict[str, Dict[str, Any]]:
2025-09-10T19:18:29.0572220Z 97 |     """Summarise each post with its top-K comments using strict JSON.
2025-09-10T19:18:29.0572619Z    |
2025-09-10T19:18:29.0572940Z help: Replace with `dict`
2025-09-10T19:18:29.0573143Z 
2025-09-10T19:18:29.0573370Z UP006 [*] Use `dict` instead of `Dict` for type annotation
2025-09-10T19:18:29.0573806Z   --> reddit_pipeline/llm/summariser.py:96:6
2025-09-10T19:18:29.0574165Z    |
2025-09-10T19:18:29.0574447Z 94 |     posts: List[Post],
2025-09-10T19:18:29.0574844Z 95 |     comments_by_post: Dict[str, List[Dict[str, Any]]],
2025-09-10T19:18:29.0575223Z 96 | ) -> Dict[str, Dict[str, Any]]:
2025-09-10T19:18:29.0575554Z    |      ^^^^
2025-09-10T19:18:29.0575975Z 97 |     """Summarise each post with its top-K comments using strict JSON.
2025-09-10T19:18:29.0576370Z    |
2025-09-10T19:18:29.0576659Z help: Replace with `dict`
2025-09-10T19:18:29.0576839Z 
2025-09-10T19:18:29.0577030Z UP006 [*] Use `dict` instead of `Dict` for type annotation
2025-09-10T19:18:29.0577468Z   --> reddit_pipeline/llm/summariser.py:96:16
2025-09-10T19:18:29.0577854Z    |
2025-09-10T19:18:29.0578115Z 94 |     posts: List[Post],
2025-09-10T19:18:29.0585589Z 95 |     comments_by_post: Dict[str, List[Dict[str, Any]]],
2025-09-10T19:18:29.0585978Z 96 | ) -> Dict[str, Dict[str, Any]]:
2025-09-10T19:18:29.0586233Z    |                ^^^^
2025-09-10T19:18:29.0586533Z 97 |     """Summarise each post with its top-K comments using strict JSON.
2025-09-10T19:18:29.0586864Z    |
2025-09-10T19:18:29.0587229Z help: Replace with `dict`
2025-09-10T19:18:29.0587381Z 
2025-09-10T19:18:29.0587515Z UP006 [*] Use `dict` instead of `Dict` for type annotation
2025-09-10T19:18:29.0587842Z    --> reddit_pipeline/llm/summariser.py:103:14
2025-09-10T19:18:29.0588107Z     |
2025-09-10T19:18:29.0588360Z 102 |     log.info("Summarising posts", extra={"count": len(posts)})
2025-09-10T19:18:29.0588705Z 103 |     results: Dict[str, Dict[str, Any]] = {}
2025-09-10T19:18:29.0588968Z     |              ^^^^
2025-09-10T19:18:29.0589287Z 104 |     max_chars_per_section = 2000  # coarse truncation guard before tokenisation
2025-09-10T19:18:29.0589800Z 105 |     top_k = settings.top_k_comments
2025-09-10T19:18:29.0590043Z     |
2025-09-10T19:18:29.0590222Z help: Replace with `dict`
2025-09-10T19:18:29.0590358Z 
2025-09-10T19:18:29.0590492Z UP006 [*] Use `dict` instead of `Dict` for type annotation
2025-09-10T19:18:29.0590812Z    --> reddit_pipeline/llm/summariser.py:103:24
2025-09-10T19:18:29.0591064Z     |
2025-09-10T19:18:29.0591312Z 102 |     log.info("Summarising posts", extra={"count": len(posts)})
2025-09-10T19:18:29.0591653Z 103 |     results: Dict[str, Dict[str, Any]] = {}
2025-09-10T19:18:29.0591913Z     |                        ^^^^
2025-09-10T19:18:29.0592243Z 104 |     max_chars_per_section = 2000  # coarse truncation guard before tokenisation
2025-09-10T19:18:29.0592611Z 105 |     top_k = settings.top_k_comments
2025-09-10T19:18:29.0592857Z     |
2025-09-10T19:18:29.0593032Z help: Replace with `dict`
2025-09-10T19:18:29.0593289Z 
2025-09-10T19:18:29.0593380Z E501 Line too long (107 > 100)
2025-09-10T19:18:29.0593637Z    --> reddit_pipeline/llm/summariser.py:127:101
2025-09-10T19:18:29.0593891Z     |
2025-09-10T19:18:29.0594063Z 125 |                 "content": (
2025-09-10T19:18:29.0594382Z 126 |                     "Provide post title + selftext + top comments (with scores).\n"
2025-09-10T19:18:29.0594865Z 127 |                     "Return strict JSON with keys: summary, pain_points[], recommendations[], segments[], "
2025-09-10T19:18:29.0595295Z     |                                                                                                     ^^^^^^^
2025-09-10T19:18:29.0595664Z 128 |                     "tools_mentioned[], contrarian_take, key_metrics[], sources[].\n\n"
2025-09-10T19:18:29.0596014Z 129 |                     + user_content
2025-09-10T19:18:29.0596244Z     |
2025-09-10T19:18:29.0596343Z 
2025-09-10T19:18:29.0596446Z E402 Module level import not at top of file
2025-09-10T19:18:29.0596725Z  --> reddit_pipeline/models.py:8:1
2025-09-10T19:18:29.0596953Z   |
2025-09-10T19:18:29.0597112Z 6 | """
2025-09-10T19:18:29.0597269Z 7 |
2025-09-10T19:18:29.0597446Z 8 | from datetime import datetime
2025-09-10T19:18:29.0597674Z   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025-09-10T19:18:29.0597906Z 9 | from typing import List, Optional
2025-09-10T19:18:29.0598138Z   |
2025-09-10T19:18:29.0598229Z 
2025-09-10T19:18:29.0598333Z E402 Module level import not at top of file
2025-09-10T19:18:29.0598599Z   --> reddit_pipeline/models.py:9:1
2025-09-10T19:18:29.0598833Z    |
2025-09-10T19:18:29.0599010Z  8 | from datetime import datetime
2025-09-10T19:18:29.0599256Z  9 | from typing import List, Optional
2025-09-10T19:18:29.0599704Z    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025-09-10T19:18:29.0599932Z 10 |
2025-09-10T19:18:29.0600140Z 11 | from pydantic import BaseModel, Field, HttpUrl
2025-09-10T19:18:29.0600405Z    |
2025-09-10T19:18:29.0600491Z 
2025-09-10T19:18:29.0600625Z UP035 `typing.List` is deprecated, use `list` instead
2025-09-10T19:18:29.0600921Z   --> reddit_pipeline/models.py:9:1
2025-09-10T19:18:29.0601150Z    |
2025-09-10T19:18:29.0601325Z  8 | from datetime import datetime
2025-09-10T19:18:29.0601568Z  9 | from typing import List, Optional
2025-09-10T19:18:29.0601808Z    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025-09-10T19:18:29.0602019Z 10 |
2025-09-10T19:18:29.0602219Z 11 | from pydantic import BaseModel, Field, HttpUrl
2025-09-10T19:18:29.0602480Z    |
2025-09-10T19:18:29.0602569Z 
2025-09-10T19:18:29.0602806Z E402 Module level import not at top of file
2025-09-10T19:18:29.0603080Z   --> reddit_pipeline/models.py:11:1
2025-09-10T19:18:29.0603315Z    |
2025-09-10T19:18:29.0603492Z  9 | from typing import List, Optional
2025-09-10T19:18:29.0603723Z 10 |
2025-09-10T19:18:29.0603932Z 11 | from pydantic import BaseModel, Field, HttpUrl
2025-09-10T19:18:29.0604224Z    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025-09-10T19:18:29.0604447Z    |
2025-09-10T19:18:29.0604537Z 
2025-09-10T19:18:29.0604647Z UP045 [*] Use `X | None` for type annotations
2025-09-10T19:18:29.0604925Z   --> reddit_pipeline/models.py:25:25
2025-09-10T19:18:29.0605154Z    |
2025-09-10T19:18:29.0605338Z 23 |     num_comments: int = 0
2025-09-10T19:18:29.0605573Z 24 |     created_utc: datetime
2025-09-10T19:18:29.0605818Z 25 |     subreddit_or_topic: Optional[str] = None
2025-09-10T19:18:29.0606083Z    |                         ^^^^^^^^^^^^^
2025-09-10T19:18:29.0606451Z 26 |     text: Optional[str] = Field(None, description="Raw text; avoid PII beyond usernames")
2025-09-10T19:18:29.0606820Z    |
2025-09-10T19:18:29.0607019Z help: Convert to `X | None`
2025-09-10T19:18:29.0607166Z 
2025-09-10T19:18:29.0607268Z UP045 [*] Use `X | None` for type annotations
2025-09-10T19:18:29.0607539Z   --> reddit_pipeline/models.py:26:11
2025-09-10T19:18:29.0607766Z    |
2025-09-10T19:18:29.0607934Z 24 |     created_utc: datetime
2025-09-10T19:18:29.0608174Z 25 |     subreddit_or_topic: Optional[str] = None
2025-09-10T19:18:29.0608562Z 26 |     text: Optional[str] = Field(None, description="Raw text; avoid PII beyond usernames")
2025-09-10T19:18:29.0609054Z    |           ^^^^^^^^^^^^^
2025-09-10T19:18:29.0609251Z    |
2025-09-10T19:18:29.0609419Z help: Convert to `X | None`
2025-09-10T19:18:29.0609657Z 
2025-09-10T19:18:29.0609789Z UP006 [*] Use `list` instead of `List` for type annotation
2025-09-10T19:18:29.0610090Z   --> reddit_pipeline/models.py:33:15
2025-09-10T19:18:29.0610317Z    |
2025-09-10T19:18:29.0610472Z 32 |     id: str
2025-09-10T19:18:29.0610703Z 33 |     post_ids: List[str] = Field(default_factory=list)
2025-09-10T19:18:29.0610971Z    |               ^^^^
2025-09-10T19:18:29.0611164Z 34 |     summary: str
2025-09-10T19:18:29.0611402Z 35 |     topics: List[str] = Field(default_factory=list)
2025-09-10T19:18:29.0611659Z    |
2025-09-10T19:18:29.0611831Z help: Replace with `list`
2025-09-10T19:18:29.0611964Z 
2025-09-10T19:18:29.0612089Z UP006 [*] Use `list` instead of `List` for type annotation
2025-09-10T19:18:29.0612383Z   --> reddit_pipeline/models.py:35:13
2025-09-10T19:18:29.0612618Z    |
2025-09-10T19:18:29.0612820Z 33 |     post_ids: List[str] = Field(default_factory=list)
2025-09-10T19:18:29.0613086Z 34 |     summary: str
2025-09-10T19:18:29.0613321Z 35 |     topics: List[str] = Field(default_factory=list)
2025-09-10T19:18:29.0613584Z    |             ^^^^
2025-09-10T19:18:29.0613859Z 36 |     created_utc: datetime = Field(default_factory=datetime.utcnow)
2025-09-10T19:18:29.0614169Z    |
2025-09-10T19:18:29.0614344Z help: Replace with `list`
2025-09-10T19:18:29.0614498Z 
2025-09-10T19:18:29.0614599Z E402 Module level import not at top of file
2025-09-10T19:18:29.0614877Z   --> reddit_pipeline/ranking.py:12:1
2025-09-10T19:18:29.0615112Z    |
2025-09-10T19:18:29.0615268Z 10 | """
2025-09-10T19:18:29.0615429Z 11 |
2025-09-10T19:18:29.0615618Z 12 | from datetime import datetime, timezone
2025-09-10T19:18:29.0615882Z    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025-09-10T19:18:29.0616132Z 13 | from typing import List, Optional
2025-09-10T19:18:29.0616368Z    |
2025-09-10T19:18:29.0616460Z 
2025-09-10T19:18:29.0616558Z E402 Module level import not at top of file
2025-09-10T19:18:29.0616823Z   --> reddit_pipeline/ranking.py:13:1
2025-09-10T19:18:29.0617050Z    |
2025-09-10T19:18:29.0617241Z 12 | from datetime import datetime, timezone
2025-09-10T19:18:29.0617507Z 13 | from typing import List, Optional
2025-09-10T19:18:29.0617746Z    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025-09-10T19:18:29.0617960Z 14 |
2025-09-10T19:18:29.0618132Z 15 | from .models import Post
2025-09-10T19:18:29.0618463Z    |
2025-09-10T19:18:29.0618555Z 
2025-09-10T19:18:29.0618680Z UP035 `typing.List` is deprecated, use `list` instead
2025-09-10T19:18:29.0618983Z   --> reddit_pipeline/ranking.py:13:1
2025-09-10T19:18:29.0619213Z    |
2025-09-10T19:18:29.0619399Z 12 | from datetime import datetime, timezone
2025-09-10T19:18:29.0619921Z 13 | from typing import List, Optional
2025-09-10T19:18:29.0620171Z    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025-09-10T19:18:29.0620383Z 14 |
2025-09-10T19:18:29.0620561Z 15 | from .models import Post
2025-09-10T19:18:29.0620771Z    |
2025-09-10T19:18:29.0620860Z 
2025-09-10T19:18:29.0620963Z E402 Module level import not at top of file
2025-09-10T19:18:29.0621231Z   --> reddit_pipeline/ranking.py:15:1
2025-09-10T19:18:29.0621464Z    |
2025-09-10T19:18:29.0621646Z 13 | from typing import List, Optional
2025-09-10T19:18:29.0621871Z 14 |
2025-09-10T19:18:29.0622042Z 15 | from .models import Post
2025-09-10T19:18:29.0622255Z    | ^^^^^^^^^^^^^^^^^^^^^^^^
2025-09-10T19:18:29.0622330Z    |
2025-09-10T19:18:29.0622335Z 
2025-09-10T19:18:29.0622444Z UP045 [*] Use `X | None` for type annotations
2025-09-10T19:18:29.0622539Z   --> reddit_pipeline/ranking.py:21:19
2025-09-10T19:18:29.0622611Z    |
2025-09-10T19:18:29.0622685Z 19 |     score: int,
2025-09-10T19:18:29.0622767Z 20 |     comments: int,
2025-09-10T19:18:29.0622861Z 21 |     upvote_ratio: Optional[float],
2025-09-10T19:18:29.0622944Z    |                   ^^^^^^^^^^^^^^^
2025-09-10T19:18:29.0623028Z 22 |     created_utc: datetime,
2025-09-10T19:18:29.0623265Z 23 | ) -> float:
2025-09-10T19:18:29.0623336Z    |
2025-09-10T19:18:29.0623420Z help: Convert to `X | None`
2025-09-10T19:18:29.0623429Z 
2025-09-10T19:18:29.0623515Z UP017 [*] Use `datetime.UTC` alias
2025-09-10T19:18:29.0623608Z   --> reddit_pipeline/ranking.py:41:24
2025-09-10T19:18:29.0623672Z    |
2025-09-10T19:18:29.0623890Z 39 |     ratio_bonus = ratio_weight * float(upvote_ratio) if upvote_ratio is not None else 0.0
2025-09-10T19:18:29.0623959Z 40 |
2025-09-10T19:18:29.0624055Z 41 |     now = datetime.now(timezone.utc)
2025-09-10T19:18:29.0624134Z    |                        ^^^^^^^^^^^^
2025-09-10T19:18:29.0624288Z 42 |     age_hours = max(0.0, (now - created_utc).total_seconds() / 3600.0)
2025-09-10T19:18:29.0624393Z 43 |     decay = 0.5 ** (age_hours / half_life_hours)
2025-09-10T19:18:29.0624461Z    |
2025-09-10T19:18:29.0624555Z help: Convert to `datetime.UTC` alias
2025-09-10T19:18:29.0624560Z 
2025-09-10T19:18:29.0624690Z UP006 [*] Use `list` instead of `List` for type annotation
2025-09-10T19:18:29.0624788Z   --> reddit_pipeline/ranking.py:48:23
2025-09-10T19:18:29.0624856Z    |
2025-09-10T19:18:29.0624974Z 48 | def rank_posts(posts: List[Post]) -> List[Post]:
2025-09-10T19:18:29.0625053Z    |                       ^^^^
2025-09-10T19:18:29.0625191Z 49 |     """Return posts sorted descending by composite rank."""
2025-09-10T19:18:29.0625256Z    |
2025-09-10T19:18:29.0625343Z help: Replace with `list`
2025-09-10T19:18:29.0625349Z 
2025-09-10T19:18:29.0625476Z UP006 [*] Use `list` instead of `List` for type annotation
2025-09-10T19:18:29.0625571Z   --> reddit_pipeline/ranking.py:48:38
2025-09-10T19:18:29.0625635Z    |
2025-09-10T19:18:29.0625751Z 48 | def rank_posts(posts: List[Post]) -> List[Post]:
2025-09-10T19:18:29.0625837Z    |                                      ^^^^
2025-09-10T19:18:29.0625973Z 49 |     """Return posts sorted descending by composite rank."""
2025-09-10T19:18:29.0626038Z    |
2025-09-10T19:18:29.0626123Z help: Replace with `list`
2025-09-10T19:18:29.0626133Z 
2025-09-10T19:18:29.0626234Z E402 Module level import not at top of file
2025-09-10T19:18:29.0626328Z   --> reddit_pipeline/run.py:9:1
2025-09-10T19:18:29.0626392Z    |
2025-09-10T19:18:29.0626461Z  7 | """
2025-09-10T19:18:29.0626531Z  8 |
2025-09-10T19:18:29.0626624Z  9 | from typing import List, Dict, Any
2025-09-10T19:18:29.0626703Z    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025-09-10T19:18:29.0626766Z 10 |
2025-09-10T19:18:29.0626855Z 11 | from .config import settings
2025-09-10T19:18:29.0627033Z    |
2025-09-10T19:18:29.0627038Z 
2025-09-10T19:18:29.0627164Z UP035 `typing.List` is deprecated, use `list` instead
2025-09-10T19:18:29.0627252Z   --> reddit_pipeline/run.py:9:1
2025-09-10T19:18:29.0627319Z    |
2025-09-10T19:18:29.0627384Z  7 | """
2025-09-10T19:18:29.0627453Z  8 |
2025-09-10T19:18:29.0627540Z  9 | from typing import List, Dict, Any
2025-09-10T19:18:29.0627614Z    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025-09-10T19:18:29.0627678Z 10 |
2025-09-10T19:18:29.0627771Z 11 | from .config import settings
2025-09-10T19:18:29.0627835Z    |
2025-09-10T19:18:29.0627839Z 
2025-09-10T19:18:29.0627962Z UP035 `typing.Dict` is deprecated, use `dict` instead
2025-09-10T19:18:29.0628048Z   --> reddit_pipeline/run.py:9:1
2025-09-10T19:18:29.0628116Z    |
2025-09-10T19:18:29.0628181Z  7 | """
2025-09-10T19:18:29.0628247Z  8 |
2025-09-10T19:18:29.0628338Z  9 | from typing import List, Dict, Any
2025-09-10T19:18:29.0628411Z    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025-09-10T19:18:29.0628484Z 10 |
2025-09-10T19:18:29.0628568Z 11 | from .config import settings
2025-09-10T19:18:29.0628637Z    |
2025-09-10T19:18:29.0628642Z 
2025-09-10T19:18:29.0628754Z I001 [*] Import block is un-sorted or un-formatted
2025-09-10T19:18:29.0628843Z   --> reddit_pipeline/run.py:9:1
2025-09-10T19:18:29.0628907Z    |
2025-09-10T19:18:29.0628978Z  7 |   """
2025-09-10T19:18:29.0629042Z  8 |
2025-09-10T19:18:29.0629138Z  9 | / from typing import List, Dict, Any
2025-09-10T19:18:29.0629205Z 10 | |
2025-09-10T19:18:29.0629392Z 11 | | from .config import settings
2025-09-10T19:18:29.0629575Z 12 | | from .models import Post
2025-09-10T19:18:29.0629674Z 13 | | from .utils import get_json_logger
2025-09-10T19:18:29.0629765Z 14 | | from .ranking import rank_posts
2025-09-10T19:18:29.0629911Z 15 | | from .llm.summariser import summarise_posts_with_comments
2025-09-10T19:18:29.0630053Z 16 | | from .llm.insights import generate_insights_from_summaries
2025-09-10T19:18:29.0630158Z 17 | | from .llm.embeddings import embed_texts
2025-09-10T19:18:29.0630327Z 18 | | from .storage.supabase import upsert_insight, upsert_embedding
2025-09-10T19:18:29.0630437Z    | |______________________________________________________________^
2025-09-10T19:18:29.0630505Z    |
2025-09-10T19:18:29.0630585Z help: Organize imports
2025-09-10T19:18:29.0630592Z 
2025-09-10T19:18:29.0630698Z E402 Module level import not at top of file
2025-09-10T19:18:29.0630790Z   --> reddit_pipeline/run.py:11:1
2025-09-10T19:18:29.0630858Z    |
2025-09-10T19:18:29.0630954Z  9 | from typing import List, Dict, Any
2025-09-10T19:18:29.0631022Z 10 |
2025-09-10T19:18:29.0631106Z 11 | from .config import settings
2025-09-10T19:18:29.0631182Z    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025-09-10T19:18:29.0631267Z 12 | from .models import Post
2025-09-10T19:18:29.0631360Z 13 | from .utils import get_json_logger
2025-09-10T19:18:29.0631423Z    |
2025-09-10T19:18:29.0631429Z 
2025-09-10T19:18:29.0631529Z E402 Module level import not at top of file
2025-09-10T19:18:29.0631617Z   --> reddit_pipeline/run.py:12:1
2025-09-10T19:18:29.0631684Z    |
2025-09-10T19:18:29.0631767Z 11 | from .config import settings
2025-09-10T19:18:29.0631848Z 12 | from .models import Post
2025-09-10T19:18:29.0631923Z    | ^^^^^^^^^^^^^^^^^^^^^^^^
2025-09-10T19:18:29.0632012Z 13 | from .utils import get_json_logger
2025-09-10T19:18:29.0632104Z 14 | from .ranking import rank_posts
2025-09-10T19:18:29.0632169Z    |
2025-09-10T19:18:29.0632175Z 
2025-09-10T19:18:29.0632272Z E402 Module level import not at top of file
2025-09-10T19:18:29.0632361Z   --> reddit_pipeline/run.py:13:1
2025-09-10T19:18:29.0632427Z    |
2025-09-10T19:18:29.0632508Z 11 | from .config import settings
2025-09-10T19:18:29.0632590Z 12 | from .models import Post
2025-09-10T19:18:29.0632678Z 13 | from .utils import get_json_logger
2025-09-10T19:18:29.0632754Z    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025-09-10T19:18:29.0632842Z 14 | from .ranking import rank_posts
2025-09-10T19:18:29.0632993Z 15 | from .llm.summariser import summarise_posts_with_comments
2025-09-10T19:18:29.0633176Z    |
2025-09-10T19:18:29.0633184Z 
2025-09-10T19:18:29.0633280Z E402 Module level import not at top of file
2025-09-10T19:18:29.0633367Z   --> reddit_pipeline/run.py:14:1
2025-09-10T19:18:29.0633432Z    |
2025-09-10T19:18:29.0633514Z 12 | from .models import Post
2025-09-10T19:18:29.0633602Z 13 | from .utils import get_json_logger
2025-09-10T19:18:29.0633691Z 14 | from .ranking import rank_posts
2025-09-10T19:18:29.0633762Z    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025-09-10T19:18:29.0633910Z 15 | from .llm.summariser import summarise_posts_with_comments
2025-09-10T19:18:29.0634055Z 16 | from .llm.insights import generate_insights_from_summaries
2025-09-10T19:18:29.0634123Z    |
2025-09-10T19:18:29.0634128Z 
2025-09-10T19:18:29.0634223Z E402 Module level import not at top of file
2025-09-10T19:18:29.0634310Z   --> reddit_pipeline/run.py:15:1
2025-09-10T19:18:29.0634375Z    |
2025-09-10T19:18:29.0634469Z 13 | from .utils import get_json_logger
2025-09-10T19:18:29.0634553Z 14 | from .ranking import rank_posts
2025-09-10T19:18:29.0634702Z 15 | from .llm.summariser import summarise_posts_with_comments
2025-09-10T19:18:29.0634793Z    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025-09-10T19:18:29.0634941Z 16 | from .llm.insights import generate_insights_from_summaries
2025-09-10T19:18:29.0635049Z 17 | from .llm.embeddings import embed_texts
2025-09-10T19:18:29.0635113Z    |
2025-09-10T19:18:29.0635118Z 
2025-09-10T19:18:29.0635217Z E402 Module level import not at top of file
2025-09-10T19:18:29.0635419Z   --> reddit_pipeline/run.py:16:1
2025-09-10T19:18:29.0635486Z    |
2025-09-10T19:18:29.0635573Z 14 | from .ranking import rank_posts
2025-09-10T19:18:29.0635713Z 15 | from .llm.summariser import summarise_posts_with_comments
2025-09-10T19:18:29.0635852Z 16 | from .llm.insights import generate_insights_from_summaries
2025-09-10T19:18:29.0635938Z    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025-09-10T19:18:29.0636038Z 17 | from .llm.embeddings import embed_texts
2025-09-10T19:18:29.0636210Z 18 | from .storage.supabase import upsert_insight, upsert_embedding
2025-09-10T19:18:29.0636276Z    |
2025-09-10T19:18:29.0636284Z 
2025-09-10T19:18:29.0636379Z E402 Module level import not at top of file
2025-09-10T19:18:29.0636469Z   --> reddit_pipeline/run.py:17:1
2025-09-10T19:18:29.0636534Z    |
2025-09-10T19:18:29.0636672Z 15 | from .llm.summariser import summarise_posts_with_comments
2025-09-10T19:18:29.0636808Z 16 | from .llm.insights import generate_insights_from_summaries
2025-09-10T19:18:29.0636913Z 17 | from .llm.embeddings import embed_texts
2025-09-10T19:18:29.0636991Z    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025-09-10T19:18:29.0637149Z 18 | from .storage.supabase import upsert_insight, upsert_embedding
2025-09-10T19:18:29.0637213Z    |
2025-09-10T19:18:29.0637218Z 
2025-09-10T19:18:29.0637316Z E402 Module level import not at top of file
2025-09-10T19:18:29.0637401Z   --> reddit_pipeline/run.py:18:1
2025-09-10T19:18:29.0637468Z    |
2025-09-10T19:18:29.0637608Z 16 | from .llm.insights import generate_insights_from_summaries
2025-09-10T19:18:29.0637710Z 17 | from .llm.embeddings import embed_texts
2025-09-10T19:18:29.0637861Z 18 | from .storage.supabase import upsert_insight, upsert_embedding
2025-09-10T19:18:29.0637949Z    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025-09-10T19:18:29.0638019Z    |
2025-09-10T19:18:29.0638024Z 
2025-09-10T19:18:29.0638154Z UP006 [*] Use `list` instead of `List` for type annotation
2025-09-10T19:18:29.0638251Z   --> reddit_pipeline/run.py:24:24
2025-09-10T19:18:29.0638315Z    |
2025-09-10T19:18:29.0638411Z 24 | def fetch_sources() -> List[Post]:
2025-09-10T19:18:29.0638487Z    |                        ^^^^
2025-09-10T19:18:29.0638585Z 25 |     """Fetch items from enabled sources.
2025-09-10T19:18:29.0638650Z    |
2025-09-10T19:18:29.0638734Z help: Replace with `list`
2025-09-10T19:18:29.0638739Z 
2025-09-10T19:18:29.0638862Z UP006 [*] Use `list` instead of `List` for type annotation
2025-09-10T19:18:29.0639038Z   --> reddit_pipeline/run.py:34:20
2025-09-10T19:18:29.0639103Z    |
2025-09-10T19:18:29.0639218Z 34 | def process(posts: List[Post]) -> List[Post]:
2025-09-10T19:18:29.0639292Z    |                    ^^^^
2025-09-10T19:18:29.0639589Z 35 |     """Run dedupe/ranking/LLM pipelines with top-N selection.
2025-09-10T19:18:29.0639690Z    |
2025-09-10T19:18:29.0639778Z help: Replace with `list`
2025-09-10T19:18:29.0639784Z 
2025-09-10T19:18:29.0639907Z UP006 [*] Use `list` instead of `List` for type annotation
2025-09-10T19:18:29.0640001Z   --> reddit_pipeline/run.py:34:35
2025-09-10T19:18:29.0640070Z    |
2025-09-10T19:18:29.0640179Z 34 | def process(posts: List[Post]) -> List[Post]:
2025-09-10T19:18:29.0640262Z    |                                   ^^^^
2025-09-10T19:18:29.0640400Z 35 |     """Run dedupe/ranking/LLM pipelines with top-N selection.
2025-09-10T19:18:29.0640467Z    |
2025-09-10T19:18:29.0640547Z help: Replace with `list`
2025-09-10T19:18:29.0640553Z 
2025-09-10T19:18:29.0640678Z UP006 [*] Use `dict` instead of `Dict` for type annotation
2025-09-10T19:18:29.0640770Z   --> reddit_pipeline/run.py:50:23
2025-09-10T19:18:29.0640837Z    |
2025-09-10T19:18:29.0641025Z 49 |     # Placeholder comments map: in a real integration, supply top-K comments
2025-09-10T19:18:29.0641227Z 50 |     comments_by_post: Dict[str, List[Dict[str, Any]]] = {p.id: [] for p in selected}
2025-09-10T19:18:29.0641305Z    |                       ^^^^
2025-09-10T19:18:29.0641369Z 51 |
2025-09-10T19:18:29.0641552Z 52 |     summaries = summarise_posts_with_comments(selected, comments_by_post)
2025-09-10T19:18:29.0641739Z    |
2025-09-10T19:18:29.0641825Z help: Replace with `dict`
2025-09-10T19:18:29.0641831Z 
2025-09-10T19:18:29.0641955Z UP006 [*] Use `list` instead of `List` for type annotation
2025-09-10T19:18:29.0642046Z   --> reddit_pipeline/run.py:50:33
2025-09-10T19:18:29.0642110Z    |
2025-09-10T19:18:29.0642296Z 49 |     # Placeholder comments map: in a real integration, supply top-K comments
2025-09-10T19:18:29.0642481Z 50 |     comments_by_post: Dict[str, List[Dict[str, Any]]] = {p.id: [] for p in selected}
2025-09-10T19:18:29.0642568Z    |                                 ^^^^
2025-09-10T19:18:29.0642631Z 51 |
2025-09-10T19:18:29.0642806Z 52 |     summaries = summarise_posts_with_comments(selected, comments_by_post)
2025-09-10T19:18:29.0642872Z    |
2025-09-10T19:18:29.0642952Z help: Replace with `list`
2025-09-10T19:18:29.0642957Z 
2025-09-10T19:18:29.0643080Z UP006 [*] Use `dict` instead of `Dict` for type annotation
2025-09-10T19:18:29.0643171Z   --> reddit_pipeline/run.py:50:38
2025-09-10T19:18:29.0643238Z    |
2025-09-10T19:18:29.0643417Z 49 |     # Placeholder comments map: in a real integration, supply top-K comments
2025-09-10T19:18:29.0643604Z 50 |     comments_by_post: Dict[str, List[Dict[str, Any]]] = {p.id: [] for p in selected}
2025-09-10T19:18:29.0643688Z    |                                      ^^^^
2025-09-10T19:18:29.0643754Z 51 |
2025-09-10T19:18:29.0643926Z 52 |     summaries = summarise_posts_with_comments(selected, comments_by_post)
2025-09-10T19:18:29.0643999Z    |
2025-09-10T19:18:29.0644080Z help: Replace with `dict`
2025-09-10T19:18:29.0644086Z 
2025-09-10T19:18:29.0644208Z UP006 [*] Use `list` instead of `List` for type annotation
2025-09-10T19:18:29.0644296Z   --> reddit_pipeline/run.py:56:12
2025-09-10T19:18:29.0644365Z    |
2025-09-10T19:18:29.0644539Z 55 |     # Embeddings: post.title, summariser.summary, and each insight record
2025-09-10T19:18:29.0644621Z 56 |     texts: List[str] = []
2025-09-10T19:18:29.0644698Z    |            ^^^^
2025-09-10T19:18:29.0644879Z 57 |     embedding_targets: List[tuple[str, str]] = []  # (entity_type, entity_id)
2025-09-10T19:18:29.0644961Z 58 |     for p in selected:
2025-09-10T19:18:29.0645024Z    |
2025-09-10T19:18:29.0645105Z help: Replace with `list`
2025-09-10T19:18:29.0645110Z 
2025-09-10T19:18:29.0645232Z UP006 [*] Use `list` instead of `List` for type annotation
2025-09-10T19:18:29.0645322Z   --> reddit_pipeline/run.py:57:24
2025-09-10T19:18:29.0645387Z    |
2025-09-10T19:18:29.0645672Z 55 |     # Embeddings: post.title, summariser.summary, and each insight record
2025-09-10T19:18:29.0645753Z 56 |     texts: List[str] = []
2025-09-10T19:18:29.0645931Z 57 |     embedding_targets: List[tuple[str, str]] = []  # (entity_type, entity_id)
2025-09-10T19:18:29.0646006Z    |                        ^^^^
2025-09-10T19:18:29.0646087Z 58 |     for p in selected:
2025-09-10T19:18:29.0646174Z 59 |         texts.append(p.title)
2025-09-10T19:18:29.0646239Z    |
2025-09-10T19:18:29.0646325Z help: Replace with `list`
2025-09-10T19:18:29.0646330Z 
2025-09-10T19:18:29.0646449Z UP006 [*] Use `list` instead of `List` for type annotation
2025-09-10T19:18:29.0646542Z    --> reddit_pipeline/run.py:100:20
2025-09-10T19:18:29.0646608Z     |
2025-09-10T19:18:29.0646722Z 100 | def persist(posts: List[Post]) -> None:
2025-09-10T19:18:29.0646795Z     |                    ^^^^
2025-09-10T19:18:29.0647000Z 101 |     """Persist outputs to Supabase using UPSERT semantics. Placeholder for now."""
2025-09-10T19:18:29.0647071Z     |
2025-09-10T19:18:29.0647154Z help: Replace with `list`
2025-09-10T19:18:29.0647159Z 
2025-09-10T19:18:29.0647271Z I001 [*] Import block is un-sorted or un-formatted
2025-09-10T19:18:29.0647366Z  --> reddit_pipeline/security.py:3:1
2025-09-10T19:18:29.0647430Z   |
2025-09-10T19:18:29.0647595Z 1 |   """Security utilities for PII stripping and data sanitization."""
2025-09-10T19:18:29.0647661Z 2 |
2025-09-10T19:18:29.0647732Z 3 | / import re
2025-09-10T19:18:29.0647828Z 4 | | from typing import Dict, Any, List
2025-09-10T19:18:29.0647989Z   | |__________________________________^
2025-09-10T19:18:29.0648057Z   |
2025-09-10T19:18:29.0648135Z help: Organize imports
2025-09-10T19:18:29.0648141Z 
2025-09-10T19:18:29.0648267Z UP035 `typing.Dict` is deprecated, use `dict` instead
2025-09-10T19:18:29.0648357Z  --> reddit_pipeline/security.py:4:1
2025-09-10T19:18:29.0648423Z   |
2025-09-10T19:18:29.0648492Z 3 | import re
2025-09-10T19:18:29.0648586Z 4 | from typing import Dict, Any, List
2025-09-10T19:18:29.0648666Z   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025-09-10T19:18:29.0648733Z   |
2025-09-10T19:18:29.0648738Z 
2025-09-10T19:18:29.0648856Z UP035 `typing.List` is deprecated, use `list` instead
2025-09-10T19:18:29.0648946Z  --> reddit_pipeline/security.py:4:1
2025-09-10T19:18:29.0649011Z   |
2025-09-10T19:18:29.0649081Z 3 | import re
2025-09-10T19:18:29.0649169Z 4 | from typing import Dict, Any, List
2025-09-10T19:18:29.0649244Z   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025-09-10T19:18:29.0649315Z   |
2025-09-10T19:18:29.0649319Z 
2025-09-10T19:18:29.0649545Z UP006 [*] Use `dict` instead of `Dict` for type annotation
2025-09-10T19:18:29.0649647Z   --> reddit_pipeline/security.py:37:37
2025-09-10T19:18:29.0649711Z    |
2025-09-10T19:18:29.0649886Z 37 | def strip_pii_from_comment(comment: Dict[str, Any]) -> Dict[str, Any]:
2025-09-10T19:18:29.0649970Z    |                                     ^^^^
2025-09-10T19:18:29.0650075Z 38 |     """Strip PII from a comment dictionary.
2025-09-10T19:18:29.0650143Z    |
2025-09-10T19:18:29.0650228Z help: Replace with `dict`
2025-09-10T19:18:29.0650234Z 
2025-09-10T19:18:29.0650357Z UP006 [*] Use `dict` instead of `Dict` for type annotation
2025-09-10T19:18:29.0650453Z   --> reddit_pipeline/security.py:37:56
2025-09-10T19:18:29.0650520Z    |
2025-09-10T19:18:29.0650698Z 37 | def strip_pii_from_comment(comment: Dict[str, Any]) -> Dict[str, Any]:
2025-09-10T19:18:29.0650790Z    |                                                        ^^^^
2025-09-10T19:18:29.0650898Z 38 |     """Strip PII from a comment dictionary.
2025-09-10T19:18:29.0650965Z    |
2025-09-10T19:18:29.0651045Z help: Replace with `dict`
2025-09-10T19:18:29.0651050Z 
2025-09-10T19:18:29.0651173Z UP006 [*] Use `list` instead of `List` for type annotation
2025-09-10T19:18:29.0651263Z   --> reddit_pipeline/security.py:61:39
2025-09-10T19:18:29.0651329Z    |
2025-09-10T19:18:29.0651540Z 61 | def strip_pii_from_comments(comments: List[Dict[str, Any]]) -> List[Dict[str, Any]]:
2025-09-10T19:18:29.0651749Z    |                                       ^^^^
2025-09-10T19:18:29.0651848Z 62 |     """Strip PII from a list of comments.
2025-09-10T19:18:29.0651914Z    |
2025-09-10T19:18:29.0651994Z help: Replace with `list`
2025-09-10T19:18:29.0652000Z 
2025-09-10T19:18:29.0652123Z UP006 [*] Use `dict` instead of `Dict` for type annotation
2025-09-10T19:18:29.0652213Z   --> reddit_pipeline/security.py:61:44
2025-09-10T19:18:29.0652279Z    |
2025-09-10T19:18:29.0652498Z 61 | def strip_pii_from_comments(comments: List[Dict[str, Any]]) -> List[Dict[str, Any]]:
2025-09-10T19:18:29.0652592Z    |                                            ^^^^
2025-09-10T19:18:29.0652694Z 62 |     """Strip PII from a list of comments.
2025-09-10T19:18:29.0652759Z    |
2025-09-10T19:18:29.0652849Z help: Replace with `dict`
2025-09-10T19:18:29.0652854Z 
2025-09-10T19:18:29.0652979Z UP006 [*] Use `list` instead of `List` for type annotation
2025-09-10T19:18:29.0653077Z   --> reddit_pipeline/security.py:61:64
2025-09-10T19:18:29.0653142Z    |
2025-09-10T19:18:29.0653352Z 61 | def strip_pii_from_comments(comments: List[Dict[str, Any]]) -> List[Dict[str, Any]]:
2025-09-10T19:18:29.0653445Z    |                                                                ^^^^
2025-09-10T19:18:29.0653544Z 62 |     """Strip PII from a list of comments.
2025-09-10T19:18:29.0653607Z    |
2025-09-10T19:18:29.0653723Z help: Replace with `list`
2025-09-10T19:18:29.0653728Z 
2025-09-10T19:18:29.0653848Z UP006 [*] Use `dict` instead of `Dict` for type annotation
2025-09-10T19:18:29.0654056Z   --> reddit_pipeline/security.py:61:69
2025-09-10T19:18:29.0654122Z    |
2025-09-10T19:18:29.0654323Z 61 | def strip_pii_from_comments(comments: List[Dict[str, Any]]) -> List[Dict[str, Any]]:
2025-09-10T19:18:29.0654418Z    |                                                                     ^^^^
2025-09-10T19:18:29.0654512Z 62 |     """Strip PII from a list of comments.
2025-09-10T19:18:29.0654579Z    |
2025-09-10T19:18:29.0654657Z help: Replace with `dict`
2025-09-10T19:18:29.0654667Z 
2025-09-10T19:18:29.0654792Z UP006 [*] Use `dict` instead of `Dict` for type annotation
2025-09-10T19:18:29.0654882Z   --> reddit_pipeline/security.py:76:31
2025-09-10T19:18:29.0654948Z    |
2025-09-10T19:18:29.0655102Z 76 | def strip_pii_from_post(post: Dict[str, Any]) -> Dict[str, Any]:
2025-09-10T19:18:29.0655179Z    |                               ^^^^
2025-09-10T19:18:29.0655276Z 77 |     """Strip PII from a post dictionary.
2025-09-10T19:18:29.0655343Z    |
2025-09-10T19:18:29.0655424Z help: Replace with `dict`
2025-09-10T19:18:29.0655436Z 
2025-09-10T19:18:29.0655557Z UP006 [*] Use `dict` instead of `Dict` for type annotation
2025-09-10T19:18:29.0655650Z   --> reddit_pipeline/security.py:76:50
2025-09-10T19:18:29.0655714Z    |
2025-09-10T19:18:29.0655868Z 76 | def strip_pii_from_post(post: Dict[str, Any]) -> Dict[str, Any]:
2025-09-10T19:18:29.0655952Z    |                                                  ^^^^
2025-09-10T19:18:29.0656050Z 77 |     """Strip PII from a post dictionary.
2025-09-10T19:18:29.0656119Z    |
2025-09-10T19:18:29.0656202Z help: Replace with `dict`
2025-09-10T19:18:29.0656207Z 
2025-09-10T19:18:29.0656308Z E402 Module level import not at top of file
2025-09-10T19:18:29.0656417Z   --> reddit_pipeline/storage/supabase.py:8:1
2025-09-10T19:18:29.0656481Z    |
2025-09-10T19:18:29.0656548Z  6 | """
2025-09-10T19:18:29.0656611Z  7 |
2025-09-10T19:18:29.0656724Z  8 | from typing import Iterable, List, Dict, Any
2025-09-10T19:18:29.0656803Z    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025-09-10T19:18:29.0656876Z  9 |
2025-09-10T19:18:29.0656977Z 10 | from ..models import Post, UpsertResult
2025-09-10T19:18:29.0657050Z    |
2025-09-10T19:18:29.0657055Z 
2025-09-10T19:18:29.0657198Z UP035 [*] Import from `collections.abc` instead: `Iterable`
2025-09-10T19:18:29.0657300Z   --> reddit_pipeline/storage/supabase.py:8:1
2025-09-10T19:18:29.0657368Z    |
2025-09-10T19:18:29.0657435Z  6 | """
2025-09-10T19:18:29.0657503Z  7 |
2025-09-10T19:18:29.0657607Z  8 | from typing import Iterable, List, Dict, Any
2025-09-10T19:18:29.0657778Z    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025-09-10T19:18:29.0657843Z  9 |
2025-09-10T19:18:29.0657946Z 10 | from ..models import Post, UpsertResult
2025-09-10T19:18:29.0658011Z    |
2025-09-10T19:18:29.0658111Z help: Import from `collections.abc`
2025-09-10T19:18:29.0658117Z 
2025-09-10T19:18:29.0658240Z UP035 `typing.List` is deprecated, use `list` instead
2025-09-10T19:18:29.0658346Z   --> reddit_pipeline/storage/supabase.py:8:1
2025-09-10T19:18:29.0658415Z    |
2025-09-10T19:18:29.0658485Z  6 | """
2025-09-10T19:18:29.0658549Z  7 |
2025-09-10T19:18:29.0658655Z  8 | from typing import Iterable, List, Dict, Any
2025-09-10T19:18:29.0658736Z    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025-09-10T19:18:29.0658802Z  9 |
2025-09-10T19:18:29.0658901Z 10 | from ..models import Post, UpsertResult
2025-09-10T19:18:29.0658966Z    |
2025-09-10T19:18:29.0658971Z 
2025-09-10T19:18:29.0659094Z UP035 `typing.Dict` is deprecated, use `dict` instead
2025-09-10T19:18:29.0659201Z   --> reddit_pipeline/storage/supabase.py:8:1
2025-09-10T19:18:29.0659271Z    |
2025-09-10T19:18:29.0659337Z  6 | """
2025-09-10T19:18:29.0659407Z  7 |
2025-09-10T19:18:29.0659667Z  8 | from typing import Iterable, List, Dict, Any
2025-09-10T19:18:29.0659754Z    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025-09-10T19:18:29.0659820Z  9 |
2025-09-10T19:18:29.0659928Z 10 | from ..models import Post, UpsertResult
2025-09-10T19:18:29.0659993Z    |
2025-09-10T19:18:29.0659998Z 
2025-09-10T19:18:29.0660235Z I001 [*] Import block is un-sorted or un-formatted
2025-09-10T19:18:29.0660345Z   --> reddit_pipeline/storage/supabase.py:8:1
2025-09-10T19:18:29.0660415Z    |
2025-09-10T19:18:29.0660485Z  6 |   """
2025-09-10T19:18:29.0660550Z  7 |
2025-09-10T19:18:29.0660664Z  8 | / from typing import Iterable, List, Dict, Any
2025-09-10T19:18:29.0660729Z  9 | |
2025-09-10T19:18:29.0660838Z 10 | | from ..models import Post, UpsertResult
2025-09-10T19:18:29.0660974Z 11 | | from ..utils import get_json_logger, retry_with_backoff
2025-09-10T19:18:29.0661083Z    | |_______________________________________________________^
2025-09-10T19:18:29.0661147Z    |
2025-09-10T19:18:29.0661233Z help: Organize imports
2025-09-10T19:18:29.0661238Z 
2025-09-10T19:18:29.0661337Z E402 Module level import not at top of file
2025-09-10T19:18:29.0661446Z   --> reddit_pipeline/storage/supabase.py:10:1
2025-09-10T19:18:29.0661510Z    |
2025-09-10T19:18:29.0661620Z  8 | from typing import Iterable, List, Dict, Any
2025-09-10T19:18:29.0661690Z  9 |
2025-09-10T19:18:29.0661795Z 10 | from ..models import Post, UpsertResult
2025-09-10T19:18:29.0661873Z    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025-09-10T19:18:29.0662004Z 11 | from ..utils import get_json_logger, retry_with_backoff
2025-09-10T19:18:29.0662069Z    |
2025-09-10T19:18:29.0662078Z 
2025-09-10T19:18:29.0662174Z E402 Module level import not at top of file
2025-09-10T19:18:29.0662281Z   --> reddit_pipeline/storage/supabase.py:11:1
2025-09-10T19:18:29.0662345Z    |
2025-09-10T19:18:29.0662451Z 10 | from ..models import Post, UpsertResult
2025-09-10T19:18:29.0662580Z 11 | from ..utils import get_json_logger, retry_with_backoff
2025-09-10T19:18:29.0662669Z    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025-09-10T19:18:29.0662736Z    |
2025-09-10T19:18:29.0662741Z 
2025-09-10T19:18:29.0662873Z UP006 [*] Use `dict` instead of `Dict` for type annotation
2025-09-10T19:18:29.0662983Z   --> reddit_pipeline/storage/supabase.py:33:28
2025-09-10T19:18:29.0663053Z    |
2025-09-10T19:18:29.0663246Z 31 | # --- Module-level minimal function signatures (required by spec) ---
2025-09-10T19:18:29.0663316Z 32 |
2025-09-10T19:18:29.0663441Z 33 | def upsert_post(post_dict: Dict[str, Any]) -> None:
2025-09-10T19:18:29.0663522Z    |                            ^^^^
2025-09-10T19:18:29.0663623Z 34 |     """UPSERT a single post into Supabase.
2025-09-10T19:18:29.0663690Z    |
2025-09-10T19:18:29.0663775Z help: Replace with `dict`
2025-09-10T19:18:29.0663780Z 
2025-09-10T19:18:29.0663904Z UP006 [*] Use `dict` instead of `Dict` for type annotation
2025-09-10T19:18:29.0664128Z   --> reddit_pipeline/storage/supabase.py:43:34
2025-09-10T19:18:29.0664192Z    |
2025-09-10T19:18:29.0664330Z 43 | def upsert_comment(comment_dict: Dict[str, Any]) -> None:
2025-09-10T19:18:29.0664410Z    |                                  ^^^^
2025-09-10T19:18:29.0664532Z 44 |     """UPSERT a single comment into Supabase (stub)."""
2025-09-10T19:18:29.0664596Z    |
2025-09-10T19:18:29.0664679Z help: Replace with `dict`
2025-09-10T19:18:29.0664689Z 
2025-09-10T19:18:29.0664812Z UP006 [*] Use `dict` instead of `Dict` for type annotation
2025-09-10T19:18:29.0664920Z   --> reddit_pipeline/storage/supabase.py:49:34
2025-09-10T19:18:29.0664985Z    |
2025-09-10T19:18:29.0665121Z 49 | def upsert_insight(insight_dict: Dict[str, Any]) -> None:
2025-09-10T19:18:29.0665202Z    |                                  ^^^^
2025-09-10T19:18:29.0665326Z 50 |     """UPSERT an insight record into Supabase (stub)."""
2025-09-10T19:18:29.0665392Z    |
2025-09-10T19:18:29.0665477Z help: Replace with `dict`
2025-09-10T19:18:29.0665482Z 
2025-09-10T19:18:29.0665610Z UP006 [*] Use `list` instead of `List` for type annotation
2025-09-10T19:18:29.0665714Z   --> reddit_pipeline/storage/supabase.py:55:64
2025-09-10T19:18:29.0665780Z    |
2025-09-10T19:18:29.0665992Z 55 | def upsert_embedding(entity_type: str, entity_id: str, vector: List[float]) -> None:
2025-09-10T19:18:29.0666086Z    |                                                                ^^^^
2025-09-10T19:18:29.0666308Z 56 |     """UPSERT an embedding vector for a post/insight (stub)."""
2025-09-10T19:18:29.0666378Z    |
2025-09-10T19:18:29.0666458Z help: Replace with `list`
2025-09-10T19:18:29.0666463Z 
2025-09-10T19:18:29.0666577Z I001 [*] Import block is un-sorted or un-formatted
2025-09-10T19:18:29.0666693Z  --> reddit_pipeline/tests/test_llm_prompts.py:1:1
2025-09-10T19:18:29.0666761Z   |
2025-09-10T19:18:29.0666858Z 1 | / from __future__ import annotations
2025-09-10T19:18:29.0666923Z 2 | |
2025-09-10T19:18:29.0667145Z 3 | | from reddit_pipeline.llm.summariser import _response_format as summariser_schema
2025-09-10T19:18:29.0667340Z 4 | | from reddit_pipeline.llm.insights import _response_format as munger_schema
2025-09-10T19:18:29.0667468Z   | |__________________________________________________________________________^
2025-09-10T19:18:29.0667532Z   |
2025-09-10T19:18:29.0667615Z help: Organize imports
2025-09-10T19:18:29.0667620Z 
2025-09-10T19:18:29.0667720Z E402 Module level import not at top of file
2025-09-10T19:18:29.0667821Z  --> reddit_pipeline/utils.py:5:1
2025-09-10T19:18:29.0667886Z   |
2025-09-10T19:18:29.0668038Z 3 | """Utility helpers for retries, backoff, and JSON logging."""
2025-09-10T19:18:29.0668102Z 4 |
2025-09-10T19:18:29.0668179Z 5 | import json
2025-09-10T19:18:29.0668246Z   | ^^^^^^^^^^^
2025-09-10T19:18:29.0668320Z 6 | import logging
2025-09-10T19:18:29.0668391Z 7 | import random
2025-09-10T19:18:29.0668458Z   |
2025-09-10T19:18:29.0668463Z 
2025-09-10T19:18:29.0668575Z I001 [*] Import block is un-sorted or un-formatted
2025-09-10T19:18:29.0668672Z   --> reddit_pipeline/utils.py:5:1
2025-09-10T19:18:29.0668739Z    |
2025-09-10T19:18:29.0668884Z  3 |   """Utility helpers for retries, backoff, and JSON logging."""
2025-09-10T19:18:29.0668955Z  4 |
2025-09-10T19:18:29.0669025Z  5 | / import json
2025-09-10T19:18:29.0669101Z  6 | | import logging
2025-09-10T19:18:29.0669174Z  7 | | import random
2025-09-10T19:18:29.0669248Z  8 | | import time
2025-09-10T19:18:29.0669338Z  9 | | from functools import wraps
2025-09-10T19:18:29.0669573Z 10 | | from typing import Any, Callable, Type, TypeVar
2025-09-10T19:18:29.0669668Z    | |_______________________________________________^
2025-09-10T19:18:29.0669738Z    |
2025-09-10T19:18:29.0669819Z help: Organize imports
2025-09-10T19:18:29.0669824Z 
2025-09-10T19:18:29.0669928Z E402 Module level import not at top of file
2025-09-10T19:18:29.0670024Z  --> reddit_pipeline/utils.py:6:1
2025-09-10T19:18:29.0670093Z   |
2025-09-10T19:18:29.0670167Z 5 | import json
2025-09-10T19:18:29.0670354Z 6 | import logging
2025-09-10T19:18:29.0670426Z   | ^^^^^^^^^^^^^^
2025-09-10T19:18:29.0670498Z 7 | import random
2025-09-10T19:18:29.0670571Z 8 | import time
2025-09-10T19:18:29.0670635Z   |
2025-09-10T19:18:29.0670640Z 
2025-09-10T19:18:29.0670740Z E402 Module level import not at top of file
2025-09-10T19:18:29.0670828Z  --> reddit_pipeline/utils.py:7:1
2025-09-10T19:18:29.0670896Z   |
2025-09-10T19:18:29.0670967Z 5 | import json
2025-09-10T19:18:29.0671041Z 6 | import logging
2025-09-10T19:18:29.0671116Z 7 | import random
2025-09-10T19:18:29.0671187Z   | ^^^^^^^^^^^^^
2025-09-10T19:18:29.0671257Z 8 | import time
2025-09-10T19:18:29.0671348Z 9 | from functools import wraps
2025-09-10T19:18:29.0671412Z   |
2025-09-10T19:18:29.0671417Z 
2025-09-10T19:18:29.0671514Z E402 Module level import not at top of file
2025-09-10T19:18:29.0671605Z   --> reddit_pipeline/utils.py:8:1
2025-09-10T19:18:29.0671674Z    |
2025-09-10T19:18:29.0671745Z  6 | import logging
2025-09-10T19:18:29.0671826Z  7 | import random
2025-09-10T19:18:29.0671898Z  8 | import time
2025-09-10T19:18:29.0671965Z    | ^^^^^^^^^^^
2025-09-10T19:18:29.0672055Z  9 | from functools import wraps
2025-09-10T19:18:29.0672173Z 10 | from typing import Any, Callable, Type, TypeVar
2025-09-10T19:18:29.0672243Z    |
2025-09-10T19:18:29.0672248Z 
2025-09-10T19:18:29.0672344Z E402 Module level import not at top of file
2025-09-10T19:18:29.0672434Z   --> reddit_pipeline/utils.py:9:1
2025-09-10T19:18:29.0672499Z    |
2025-09-10T19:18:29.0672725Z  7 | import random
2025-09-10T19:18:29.0672799Z  8 | import time
2025-09-10T19:18:29.0672888Z  9 | from functools import wraps
2025-09-10T19:18:29.0672961Z    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025-09-10T19:18:29.0673077Z 10 | from typing import Any, Callable, Type, TypeVar
2025-09-10T19:18:29.0673141Z    |
2025-09-10T19:18:29.0673147Z 
2025-09-10T19:18:29.0673246Z E402 Module level import not at top of file
2025-09-10T19:18:29.0673338Z   --> reddit_pipeline/utils.py:10:1
2025-09-10T19:18:29.0673414Z    |
2025-09-10T19:18:29.0673484Z  8 | import time
2025-09-10T19:18:29.0673572Z  9 | from functools import wraps
2025-09-10T19:18:29.0673685Z 10 | from typing import Any, Callable, Type, TypeVar
2025-09-10T19:18:29.0673766Z    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025-09-10T19:18:29.0673834Z    |
2025-09-10T19:18:29.0673838Z 
2025-09-10T19:18:29.0673979Z UP035 [*] Import from `collections.abc` instead: `Callable`
2025-09-10T19:18:29.0674076Z   --> reddit_pipeline/utils.py:10:1
2025-09-10T19:18:29.0674147Z    |
2025-09-10T19:18:29.0674220Z  8 | import time
2025-09-10T19:18:29.0674305Z  9 | from functools import wraps
2025-09-10T19:18:29.0674419Z 10 | from typing import Any, Callable, Type, TypeVar
2025-09-10T19:18:29.0674500Z    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025-09-10T19:18:29.0674568Z    |
2025-09-10T19:18:29.0674660Z help: Import from `collections.abc`
2025-09-10T19:18:29.0674666Z 
2025-09-10T19:18:29.0674797Z UP035 `typing.Type` is deprecated, use `type` instead
2025-09-10T19:18:29.0674888Z   --> reddit_pipeline/utils.py:10:1
2025-09-10T19:18:29.0674959Z    |
2025-09-10T19:18:29.0675030Z  8 | import time
2025-09-10T19:18:29.0675121Z  9 | from functools import wraps
2025-09-10T19:18:29.0675233Z 10 | from typing import Any, Callable, Type, TypeVar
2025-09-10T19:18:29.0675312Z    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025-09-10T19:18:29.0675378Z    |
2025-09-10T19:18:29.0675383Z 
2025-09-10T19:18:29.0675508Z UP006 [*] Use `type` instead of `Type` for type annotation
2025-09-10T19:18:29.0675608Z   --> reddit_pipeline/utils.py:44:23
2025-09-10T19:18:29.0675674Z    |
2025-09-10T19:18:29.0675760Z 42 | def retry_with_backoff(
2025-09-10T19:18:29.0675827Z 43 |     *,
2025-09-10T19:18:29.0675984Z 44 |     exceptions: tuple[Type[BaseException], ...] = (Exception,),
2025-09-10T19:18:29.0676059Z    |                       ^^^^
2025-09-10T19:18:29.0676145Z 45 |     max_attempts: int = 5,
2025-09-10T19:18:29.0676240Z 46 |     base_delay_seconds: float = 0.5,
2025-09-10T19:18:29.0676388Z    |
2025-09-10T19:18:29.0676472Z help: Replace with `type`
2025-09-10T19:18:29.0676477Z 
2025-09-10T19:18:29.0676611Z F841 [*] Local variable `exc` is assigned to but never used
2025-09-10T19:18:29.0676702Z   --> reddit_pipeline/utils.py:63:38
2025-09-10T19:18:29.0676768Z    |
2025-09-10T19:18:29.0676843Z 61 |                 try:
2025-09-10T19:18:29.0676938Z 62 |                     return func(*args, **kwargs)
2025-09-10T19:18:29.0677140Z 63 |                 except exceptions as exc:  # pragma: no cover - behaviour tested separately
2025-09-10T19:18:29.0677227Z    |                                      ^^^
2025-09-10T19:18:29.0677314Z 64 |                     attempt += 1
2025-09-10T19:18:29.0677412Z 65 |                     if attempt >= max_attempts:
2025-09-10T19:18:29.0677480Z    |
2025-09-10T19:18:29.0677594Z help: Remove assignment to unused variable `exc`
2025-09-10T19:18:29.0677600Z 
2025-09-10T19:18:29.0677713Z I001 [*] Import block is un-sorted or un-formatted
2025-09-10T19:18:29.0677805Z  --> tests/test_dedupe.py:3:1
2025-09-10T19:18:29.0677877Z   |
2025-09-10T19:18:29.0677984Z 1 |   """Unit tests for deduplication utilities."""
2025-09-10T19:18:29.0678051Z 2 |
2025-09-10T19:18:29.0678124Z 3 | / import pytest
2025-09-10T19:18:29.0678230Z 4 | | from datetime import datetime, timezone
2025-09-10T19:18:29.0678353Z 5 | | from reddit_pipeline.dedupe import dedupe_posts
2025-09-10T19:18:29.0678455Z 6 | | from reddit_pipeline.models import Post
2025-09-10T19:18:29.0678543Z   | |_______________________________________^
2025-09-10T19:18:29.0678690Z   |
2025-09-10T19:18:29.0678774Z help: Organize imports
2025-09-10T19:18:29.0678780Z 
2025-09-10T19:18:29.0678868Z F401 [*] `pytest` imported but unused
2025-09-10T19:18:29.0678959Z  --> tests/test_dedupe.py:3:8
2025-09-10T19:18:29.0679024Z   |
2025-09-10T19:18:29.0679134Z 1 | """Unit tests for deduplication utilities."""
2025-09-10T19:18:29.0679199Z 2 |
2025-09-10T19:18:29.0679273Z 3 | import pytest
2025-09-10T19:18:29.0679339Z   |        ^^^^^^
2025-09-10T19:18:29.0679540Z 4 | from datetime import datetime, timezone
2025-09-10T19:18:29.0679659Z 5 | from reddit_pipeline.dedupe import dedupe_posts
2025-09-10T19:18:29.0679725Z   |
2025-09-10T19:18:29.0679814Z help: Remove unused import: `pytest`
2025-09-10T19:18:29.0679819Z 
2025-09-10T19:18:29.0679910Z UP017 [*] Use `datetime.UTC` alias
2025-09-10T19:18:29.0680000Z   --> tests/test_dedupe.py:14:28
2025-09-10T19:18:29.0680065Z    |
2025-09-10T19:18:29.0680164Z 12 |     def test_dedupe_no_duplicates(self):
2025-09-10T19:18:29.0680284Z 13 |         """Test deduplication with no duplicates."""
2025-09-10T19:18:29.0680381Z 14 |         now = datetime.now(timezone.utc)
2025-09-10T19:18:29.0680461Z    |                            ^^^^^^^^^^^^
2025-09-10T19:18:29.0680537Z 15 |         posts = [
2025-09-10T19:18:29.0680610Z 16 |             Post(
2025-09-10T19:18:29.0680676Z    |
2025-09-10T19:18:29.0680769Z help: Convert to `datetime.UTC` alias
2025-09-10T19:18:29.0680774Z 
2025-09-10T19:18:29.0680860Z UP017 [*] Use `datetime.UTC` alias
2025-09-10T19:18:29.0680953Z   --> tests/test_dedupe.py:48:28
2025-09-10T19:18:29.0681019Z    |
2025-09-10T19:18:29.0681122Z 46 |     def test_dedupe_with_duplicates(self):
2025-09-10T19:18:29.0681235Z 47 |         """Test deduplication with duplicate IDs."""
2025-09-10T19:18:29.0681329Z 48 |         now = datetime.now(timezone.utc)
2025-09-10T19:18:29.0681412Z    |                            ^^^^^^^^^^^^
2025-09-10T19:18:29.0681488Z 49 |         posts = [
2025-09-10T19:18:29.0681565Z 50 |             Post(
2025-09-10T19:18:29.0681634Z    |
2025-09-10T19:18:29.0681725Z help: Convert to `datetime.UTC` alias
2025-09-10T19:18:29.0681730Z 
2025-09-10T19:18:29.0681815Z UP017 [*] Use `datetime.UTC` alias
2025-09-10T19:18:29.0681899Z   --> tests/test_dedupe.py:96:28
2025-09-10T19:18:29.0681967Z    |
2025-09-10T19:18:29.0682073Z 94 |     def test_dedupe_multiple_duplicates(self):
2025-09-10T19:18:29.0682232Z 95 |         """Test deduplication with multiple duplicates of same ID."""
2025-09-10T19:18:29.0682449Z 96 |         now = datetime.now(timezone.utc)
2025-09-10T19:18:29.0682533Z    |                            ^^^^^^^^^^^^
2025-09-10T19:18:29.0682607Z 97 |         posts = [
2025-09-10T19:18:29.0682680Z 98 |             Post(
2025-09-10T19:18:29.0682744Z    |
2025-09-10T19:18:29.0682838Z help: Convert to `datetime.UTC` alias
2025-09-10T19:18:29.0682844Z 
2025-09-10T19:18:29.0682926Z UP017 [*] Use `datetime.UTC` alias
2025-09-10T19:18:29.0683015Z    --> tests/test_dedupe.py:147:28
2025-09-10T19:18:29.0683090Z     |
2025-09-10T19:18:29.0683188Z 145 |     def test_dedupe_single_post(self):
2025-09-10T19:18:29.0683303Z 146 |         """Test deduplication of single post."""
2025-09-10T19:18:29.0683402Z 147 |         now = datetime.now(timezone.utc)
2025-09-10T19:18:29.0683483Z     |                            ^^^^^^^^^^^^
2025-09-10T19:18:29.0683560Z 148 |         post = Post(
2025-09-10T19:18:29.0683636Z 149 |             id="1",
2025-09-10T19:18:29.0683702Z     |
2025-09-10T19:18:29.0683803Z help: Convert to `datetime.UTC` alias
2025-09-10T19:18:29.0683808Z 
2025-09-10T19:18:29.0683891Z UP017 [*] Use `datetime.UTC` alias
2025-09-10T19:18:29.0683979Z    --> tests/test_dedupe.py:166:28
2025-09-10T19:18:29.0684043Z     |
2025-09-10T19:18:29.0684147Z 164 |     def test_dedupe_preserves_order(self):
2025-09-10T19:18:29.0684323Z 165 |         """Test that deduplication preserves order of first occurrences."""
2025-09-10T19:18:29.0684425Z 166 |         now = datetime.now(timezone.utc)
2025-09-10T19:18:29.0684616Z     |                            ^^^^^^^^^^^^
2025-09-10T19:18:29.0684694Z 167 |         posts = [
2025-09-10T19:18:29.0685291Z 168 |             Post(id="3", title="Third", score=300, num_comments=30, created_utc=now, subreddit="test", author="user3", url="https://e…
2025-09-10T19:18:29.0685360Z     |
2025-09-10T19:18:29.0685458Z help: Convert to `datetime.UTC` alias
2025-09-10T19:18:29.0685463Z 
2025-09-10T19:18:29.0685546Z E501 Line too long (157 > 100)
2025-09-10T19:18:29.0685641Z    --> tests/test_dedupe.py:168:101
2025-09-10T19:18:29.0685716Z     |
2025-09-10T19:18:29.0685806Z 166 | …
2025-09-10T19:18:29.0685884Z 167 | …
2025-09-10T19:18:29.0686214Z 168 | …=30, created_utc=now, subreddit="test", author="user3", url="https://example.com/3", text=""),
2025-09-10T19:18:29.0686320Z     |                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025-09-10T19:18:29.0686627Z 169 | …=10, created_utc=now, subreddit="test", author="user1", url="https://example.com/1", text=""),
2025-09-10T19:18:29.0686943Z 170 | …s=20, created_utc=now, subreddit="test", author="user2", url="https://example.com/2", text=""),
2025-09-10T19:18:29.0687016Z     |
2025-09-10T19:18:29.0687022Z 
2025-09-10T19:18:29.0687109Z E501 Line too long (157 > 100)
2025-09-10T19:18:29.0687199Z    --> tests/test_dedupe.py:169:101
2025-09-10T19:18:29.0687266Z     |
2025-09-10T19:18:29.0687344Z 167 | …
2025-09-10T19:18:29.0687650Z 168 | …=30, created_utc=now, subreddit="test", author="user3", url="https://example.com/3", text=""),
2025-09-10T19:18:29.0687954Z 169 | …=10, created_utc=now, subreddit="test", author="user1", url="https://example.com/1", text=""),
2025-09-10T19:18:29.0688052Z     |                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025-09-10T19:18:29.0688358Z 170 | …s=20, created_utc=now, subreddit="test", author="user2", url="https://example.com/2", text=""),
2025-09-10T19:18:29.0688701Z 171 | …m_comments=15, created_utc=now, subreddit="test", author="user4", url="https://example.com/4", text=""),
2025-09-10T19:18:29.0688777Z     |
2025-09-10T19:18:29.0688787Z 
2025-09-10T19:18:29.0688869Z E501 Line too long (158 > 100)
2025-09-10T19:18:29.0688960Z    --> tests/test_dedupe.py:170:101
2025-09-10T19:18:29.0689025Z     |
2025-09-10T19:18:29.0689328Z 168 | …=30, created_utc=now, subreddit="test", author="user3", url="https://example.com/3", text=""),
2025-09-10T19:18:29.0689741Z 169 | …=10, created_utc=now, subreddit="test", author="user1", url="https://example.com/1", text=""),
2025-09-10T19:18:29.0690193Z 170 | …s=20, created_utc=now, subreddit="test", author="user2", url="https://example.com/2", text=""),
2025-09-10T19:18:29.0690291Z     |                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025-09-10T19:18:29.0690630Z 171 | …m_comments=15, created_utc=now, subreddit="test", author="user4", url="https://example.com/4", text=""),
2025-09-10T19:18:29.0690965Z 172 | …um_comments=25, created_utc=now, subreddit="test", author="user5", url="https://example.com/5", text=""),
2025-09-10T19:18:29.0691045Z     |
2025-09-10T19:18:29.0691051Z 
2025-09-10T19:18:29.0691135Z E501 Line too long (167 > 100)
2025-09-10T19:18:29.0691226Z    --> tests/test_dedupe.py:171:101
2025-09-10T19:18:29.0691298Z     |
2025-09-10T19:18:29.0691603Z 169 | …created_utc=now, subreddit="test", author="user1", url="https://example.com/1", text=""),
2025-09-10T19:18:29.0691907Z 170 | … created_utc=now, subreddit="test", author="user2", url="https://example.com/2", text=""),
2025-09-10T19:18:29.0692234Z 171 | …ments=15, created_utc=now, subreddit="test", author="user4", url="https://example.com/4", text=""),
2025-09-10T19:18:29.0692340Z     |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025-09-10T19:18:29.0692659Z 172 | …mments=25, created_utc=now, subreddit="test", author="user5", url="https://example.com/5", text=""),
2025-09-10T19:18:29.0692742Z 173 | …
2025-09-10T19:18:29.0692811Z     |
2025-09-10T19:18:29.0692928Z 
2025-09-10T19:18:29.0693012Z E501 Line too long (168 > 100)
2025-09-10T19:18:29.0693100Z    --> tests/test_dedupe.py:172:101
2025-09-10T19:18:29.0693168Z     |
2025-09-10T19:18:29.0693475Z 170 | … created_utc=now, subreddit="test", author="user2", url="https://example.com/2", text=""),
2025-09-10T19:18:29.0693786Z 171 | …ments=15, created_utc=now, subreddit="test", author="user4", url="https://example.com/4", text=""),
2025-09-10T19:18:29.0694105Z 172 | …mments=25, created_utc=now, subreddit="test", author="user5", url="https://example.com/5", text=""),
2025-09-10T19:18:29.0694211Z     |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025-09-10T19:18:29.0694291Z 173 | …
2025-09-10T19:18:29.0694358Z     |
2025-09-10T19:18:29.0694363Z 
2025-09-10T19:18:29.0694452Z UP017 [*] Use `datetime.UTC` alias
2025-09-10T19:18:29.0694546Z   --> tests/test_dedupe_rank.py:19:34
2025-09-10T19:18:29.0694616Z    |
2025-09-10T19:18:29.0694693Z 17 |         score=score,
2025-09-10T19:18:29.0694784Z 18 |         num_comments=comments,
2025-09-10T19:18:29.0694896Z 19 |         created_utc=datetime.now(timezone.utc),
2025-09-10T19:18:29.0694984Z    |                                  ^^^^^^^^^^^^
2025-09-10T19:18:29.0695054Z 20 |     )
2025-09-10T19:18:29.0695119Z    |
2025-09-10T19:18:29.0695220Z help: Convert to `datetime.UTC` alias
2025-09-10T19:18:29.0695226Z 
2025-09-10T19:18:29.0695335Z I001 [*] Import block is un-sorted or un-formatted
2025-09-10T19:18:29.0695436Z   --> tests/test_integration.py:3:1
2025-09-10T19:18:29.0695502Z    |
2025-09-10T19:18:29.0695682Z  1 |   """Integration tests with mocked clients and VCR-style cassettes."""
2025-09-10T19:18:29.0695747Z  2 |
2025-09-10T19:18:29.0695826Z  3 | / import pytest
2025-09-10T19:18:29.0695950Z  4 | | from unittest.mock import patch, MagicMock, Mock
2025-09-10T19:18:29.0696058Z  5 | | from datetime import datetime, timezone
2025-09-10T19:18:29.0696200Z  6 | | from reddit_pipeline.clients.reddit import RedditClient
2025-09-10T19:18:29.0696381Z  7 | | from reddit_pipeline.clients.hackernews import HackerNewsClient
2025-09-10T19:18:29.0696555Z  8 | | from reddit_pipeline.clients.producthunt import ProductHuntClient
2025-09-10T19:18:29.0696747Z  9 | | from reddit_pipeline.llm.summariser import summarise_posts_with_comments
2025-09-10T19:18:29.0696856Z 10 | | from reddit_pipeline.models import Post
2025-09-10T19:18:29.0696938Z    | |_______________________________________^
2025-09-10T19:18:29.0697090Z    |
2025-09-10T19:18:29.0697170Z help: Organize imports
2025-09-10T19:18:29.0697175Z 
2025-09-10T19:18:29.0697291Z F401 [*] `unittest.mock.Mock` imported but unused
2025-09-10T19:18:29.0697384Z  --> tests/test_integration.py:4:45
2025-09-10T19:18:29.0697456Z   |
2025-09-10T19:18:29.0697531Z 3 | import pytest
2025-09-10T19:18:29.0697658Z 4 | from unittest.mock import patch, MagicMock, Mock
2025-09-10T19:18:29.0697741Z   |                                             ^^^^
2025-09-10T19:18:29.0697846Z 5 | from datetime import datetime, timezone
2025-09-10T19:18:29.0697988Z 6 | from reddit_pipeline.clients.reddit import RedditClient
2025-09-10T19:18:29.0698059Z   |
2025-09-10T19:18:29.0698176Z help: Remove unused import: `unittest.mock.Mock`
2025-09-10T19:18:29.0698186Z 
2025-09-10T19:18:29.0698277Z UP017 [*] Use `datetime.UTC` alias
2025-09-10T19:18:29.0698377Z    --> tests/test_integration.py:291:28
2025-09-10T19:18:29.0698445Z     |
2025-09-10T19:18:29.0698525Z 290 |         # Test data
2025-09-10T19:18:29.0698631Z 291 |         now = datetime.now(timezone.utc)
2025-09-10T19:18:29.0698715Z     |                            ^^^^^^^^^^^^
2025-09-10T19:18:29.0698790Z 292 |         posts = [
2025-09-10T19:18:29.0698864Z 293 |             Post(
2025-09-10T19:18:29.0698932Z     |
2025-09-10T19:18:29.0699029Z help: Convert to `datetime.UTC` alias
2025-09-10T19:18:29.0699035Z 
2025-09-10T19:18:29.0699121Z UP017 [*] Use `datetime.UTC` alias
2025-09-10T19:18:29.0699221Z    --> tests/test_integration.py:338:28
2025-09-10T19:18:29.0699368Z     |
2025-09-10T19:18:29.0699599Z 337 |         # Test data
2025-09-10T19:18:29.0699706Z 338 |         now = datetime.now(timezone.utc)
2025-09-10T19:18:29.0699790Z     |                            ^^^^^^^^^^^^
2025-09-10T19:18:29.0699865Z 339 |         posts = [
2025-09-10T19:18:29.0699942Z 340 |             Post(
2025-09-10T19:18:29.0700009Z     |
2025-09-10T19:18:29.0700105Z help: Convert to `datetime.UTC` alias
2025-09-10T19:18:29.0700111Z 
2025-09-10T19:18:29.0700196Z E501 Line too long (102 > 100)
2025-09-10T19:18:29.0700305Z    --> tests/test_integration.py:366:101
2025-09-10T19:18:29.0700375Z     |
2025-09-10T19:18:29.0700573Z 364 |     @patch('reddit_pipeline.clients.reddit.RedditClient.fetch_comments')
2025-09-10T19:18:29.0700716Z 365 |     @patch('reddit_pipeline.llm.summariser._call_openai')
2025-09-10T19:18:29.0700976Z 366 |     def test_full_pipeline_integration(self, mock_call_openai, mock_fetch_comments, mock_fetch_posts):
2025-09-10T19:18:29.0701084Z     |                                                                                                     ^^
2025-09-10T19:18:29.0701247Z 367 |         """Test full pipeline integration with mocked dependencies."""
2025-09-10T19:18:29.0701333Z 368 |         # Mock Reddit posts
2025-09-10T19:18:29.0701398Z     |
2025-09-10T19:18:29.0701403Z 
2025-09-10T19:18:29.0701494Z UP017 [*] Use `datetime.UTC` alias
2025-09-10T19:18:29.0701589Z    --> tests/test_integration.py:369:28
2025-09-10T19:18:29.0701655Z     |
2025-09-10T19:18:29.0701815Z 367 |         """Test full pipeline integration with mocked dependencies."""
2025-09-10T19:18:29.0701898Z 368 |         # Mock Reddit posts
2025-09-10T19:18:29.0702001Z 369 |         now = datetime.now(timezone.utc)
2025-09-10T19:18:29.0702081Z     |                            ^^^^^^^^^^^^
2025-09-10T19:18:29.0702169Z 370 |         mock_posts = [
2025-09-10T19:18:29.0702243Z 371 |             Post(
2025-09-10T19:18:29.0702313Z     |
2025-09-10T19:18:29.0702405Z help: Convert to `datetime.UTC` alias
2025-09-10T19:18:29.0702414Z 
2025-09-10T19:18:29.0702529Z I001 [*] Import block is un-sorted or un-formatted
2025-09-10T19:18:29.0702623Z    --> tests/test_integration.py:405:9
2025-09-10T19:18:29.0702693Z     |
2025-09-10T19:18:29.0702776Z 404 |           # Test full pipeline
2025-09-10T19:18:29.0702899Z 405 | /         from reddit_pipeline.run import run_pipeline
2025-09-10T19:18:29.0702966Z 406 | |         
2025-09-10T19:18:29.0703112Z 407 | |         # This would test the full pipeline if we had access to it
2025-09-10T19:18:29.0703349Z 408 | |         # For now, we test the individual components
2025-09-10T19:18:29.0703416Z 409 | |         
2025-09-10T19:18:29.0703503Z 410 | |         # Test Reddit client
2025-09-10T19:18:29.0703653Z 411 | |         from reddit_pipeline.clients.reddit import RedditClient
2025-09-10T19:18:29.0703766Z     | |_______________________________________________________________^
2025-09-10T19:18:29.0703867Z 412 |           reddit_client = RedditClient()
2025-09-10T19:18:29.0704000Z 413 |           posts = reddit_client.fetch_posts('test', limit=1)
2025-09-10T19:18:29.0704073Z     |
2025-09-10T19:18:29.0704156Z help: Organize imports
2025-09-10T19:18:29.0704162Z 
2025-09-10T19:18:29.0704308Z F401 [*] `reddit_pipeline.run.run_pipeline` imported but unused
2025-09-10T19:18:29.0704405Z    --> tests/test_integration.py:405:41
2025-09-10T19:18:29.0704472Z     |
2025-09-10T19:18:29.0704559Z 404 |         # Test full pipeline
2025-09-10T19:18:29.0704678Z 405 |         from reddit_pipeline.run import run_pipeline
2025-09-10T19:18:29.0704773Z     |                                         ^^^^^^^^^^^^
2025-09-10T19:18:29.0704843Z 406 |         
2025-09-10T19:18:29.0704987Z 407 |         # This would test the full pipeline if we had access to it
2025-09-10T19:18:29.0705055Z     |
2025-09-10T19:18:29.0705209Z help: Remove unused import: `reddit_pipeline.run.run_pipeline`
2025-09-10T19:18:29.0705215Z 
2025-09-10T19:18:29.0705328Z I001 [*] Import block is un-sorted or un-formatted
2025-09-10T19:18:29.0705530Z  --> tests/test_llm_contracts.py:3:1
2025-09-10T19:18:29.0705600Z   |
2025-09-10T19:18:29.0705719Z 1 |   """Unit tests for LLM JSON contract validation."""
2025-09-10T19:18:29.0705789Z 2 |
2025-09-10T19:18:29.0705863Z 3 | / import pytest
2025-09-10T19:18:29.0705942Z 4 | | import orjson
2025-09-10T19:18:29.0706135Z 5 | | from reddit_pipeline.llm.summariser import _response_format, _call_openai
2025-09-10T19:18:29.0706245Z 6 | | from reddit_pipeline.models import Post
2025-09-10T19:18:29.0706342Z 7 | | from datetime import datetime, timezone
2025-09-10T19:18:29.0706432Z   | |_______________________________________^
2025-09-10T19:18:29.0706502Z   |
2025-09-10T19:18:29.0706581Z help: Organize imports
2025-09-10T19:18:29.0706587Z 
2025-09-10T19:18:29.0706679Z F401 [*] `pytest` imported but unused
2025-09-10T19:18:29.0706768Z  --> tests/test_llm_contracts.py:3:8
2025-09-10T19:18:29.0706837Z   |
2025-09-10T19:18:29.0706954Z 1 | """Unit tests for LLM JSON contract validation."""
2025-09-10T19:18:29.0707023Z 2 |
2025-09-10T19:18:29.0707100Z 3 | import pytest
2025-09-10T19:18:29.0707171Z   |        ^^^^^^
2025-09-10T19:18:29.0707243Z 4 | import orjson
2025-09-10T19:18:29.0707438Z 5 | from reddit_pipeline.llm.summariser import _response_format, _call_openai
2025-09-10T19:18:29.0707504Z   |
2025-09-10T19:18:29.0707598Z help: Remove unused import: `pytest`
2025-09-10T19:18:29.0707603Z 
2025-09-10T19:18:29.0707779Z F401 [*] `reddit_pipeline.llm.summariser._call_openai` imported but unused
2025-09-10T19:18:29.0707880Z  --> tests/test_llm_contracts.py:5:62
2025-09-10T19:18:29.0707945Z   |
2025-09-10T19:18:29.0708021Z 3 | import pytest
2025-09-10T19:18:29.0708096Z 4 | import orjson
2025-09-10T19:18:29.0708282Z 5 | from reddit_pipeline.llm.summariser import _response_format, _call_openai
2025-09-10T19:18:29.0708471Z   |                                                              ^^^^^^^^^^^^
2025-09-10T19:18:29.0708576Z 6 | from reddit_pipeline.models import Post
2025-09-10T19:18:29.0708678Z 7 | from datetime import datetime, timezone
2025-09-10T19:18:29.0708747Z   |
2025-09-10T19:18:29.0708934Z help: Remove unused import: `reddit_pipeline.llm.summariser._call_openai`
2025-09-10T19:18:29.0708940Z 
2025-09-10T19:18:29.0709072Z F401 [*] `reddit_pipeline.models.Post` imported but unused
2025-09-10T19:18:29.0709167Z  --> tests/test_llm_contracts.py:6:36
2025-09-10T19:18:29.0709233Z   |
2025-09-10T19:18:29.0709308Z 4 | import orjson
2025-09-10T19:18:29.0709642Z 5 | from reddit_pipeline.llm.summariser import _response_format, _call_openai
2025-09-10T19:18:29.0709873Z 6 | from reddit_pipeline.models import Post
2025-09-10T19:18:29.0709951Z   |                                    ^^^^
2025-09-10T19:18:29.0710054Z 7 | from datetime import datetime, timezone
2025-09-10T19:18:29.0710123Z   |
2025-09-10T19:18:29.0710264Z help: Remove unused import: `reddit_pipeline.models.Post`
2025-09-10T19:18:29.0710270Z 
2025-09-10T19:18:29.0710384Z F401 [*] `datetime.datetime` imported but unused
2025-09-10T19:18:29.0710476Z  --> tests/test_llm_contracts.py:7:22
2025-09-10T19:18:29.0710548Z   |
2025-09-10T19:18:29.0710733Z 5 | from reddit_pipeline.llm.summariser import _response_format, _call_openai
2025-09-10T19:18:29.0710836Z 6 | from reddit_pipeline.models import Post
2025-09-10T19:18:29.0710930Z 7 | from datetime import datetime, timezone
2025-09-10T19:18:29.0711011Z   |                      ^^^^^^^^
2025-09-10T19:18:29.0711076Z   |
2025-09-10T19:18:29.0711163Z help: Remove unused import
2025-09-10T19:18:29.0711168Z 
2025-09-10T19:18:29.0711274Z F401 [*] `datetime.timezone` imported but unused
2025-09-10T19:18:29.0711372Z  --> tests/test_llm_contracts.py:7:32
2025-09-10T19:18:29.0711439Z   |
2025-09-10T19:18:29.0711629Z 5 | from reddit_pipeline.llm.summariser import _response_format, _call_openai
2025-09-10T19:18:29.0711730Z 6 | from reddit_pipeline.models import Post
2025-09-10T19:18:29.0711825Z 7 | from datetime import datetime, timezone
2025-09-10T19:18:29.0711904Z   |                                ^^^^^^^^
2025-09-10T19:18:29.0711970Z   |
2025-09-10T19:18:29.0712169Z help: Remove unused import
2025-09-10T19:18:29.0712175Z 
2025-09-10T19:18:29.0712288Z I001 [*] Import block is un-sorted or un-formatted
2025-09-10T19:18:29.0712388Z  --> tests/test_property_tests.py:3:1
2025-09-10T19:18:29.0712452Z   |
2025-09-10T19:18:29.0712627Z 1 |   """Property tests for idempotent operations and data consistency."""
2025-09-10T19:18:29.0712691Z 2 |
2025-09-10T19:18:29.0712768Z 3 | / import pytest
2025-09-10T19:18:29.0712868Z 4 | | from datetime import datetime, timezone
2025-09-10T19:18:29.0712999Z 5 | | from reddit_pipeline.dedupe import dedupe_posts
2025-09-10T19:18:29.0713114Z 6 | | from reddit_pipeline.ranking import rank_posts
2025-09-10T19:18:29.0713220Z 7 | | from reddit_pipeline.models import Post
2025-09-10T19:18:29.0713301Z   | |_______________________________________^
2025-09-10T19:18:29.0713372Z   |
2025-09-10T19:18:29.0713456Z help: Organize imports
2025-09-10T19:18:29.0713461Z 
2025-09-10T19:18:29.0713547Z UP017 [*] Use `datetime.UTC` alias
2025-09-10T19:18:29.0713656Z   --> tests/test_property_tests.py:15:28
2025-09-10T19:18:29.0713721Z    |
2025-09-10T19:18:29.0713821Z 13 |     def test_dedupe_idempotent(self):
2025-09-10T19:18:29.0713937Z 14 |         """Test that deduplication is idempotent."""
2025-09-10T19:18:29.0714039Z 15 |         now = datetime.now(timezone.utc)
2025-09-10T19:18:29.0714120Z    |                            ^^^^^^^^^^^^
2025-09-10T19:18:29.0714197Z 16 |         posts = [
2025-09-10T19:18:29.0714269Z 17 |             Post(
2025-09-10T19:18:29.0714344Z    |
2025-09-10T19:18:29.0714435Z help: Convert to `datetime.UTC` alias
2025-09-10T19:18:29.0714441Z 
2025-09-10T19:18:29.0714530Z UP017 [*] Use `datetime.UTC` alias
2025-09-10T19:18:29.0714625Z   --> tests/test_property_tests.py:64:28
2025-09-10T19:18:29.0714694Z    |
2025-09-10T19:18:29.0714787Z 62 |     def test_ranking_idempotent(self):
2025-09-10T19:18:29.0714895Z 63 |         """Test that ranking is idempotent."""
2025-09-10T19:18:29.0714999Z 64 |         now = datetime.now(timezone.utc)
2025-09-10T19:18:29.0715084Z    |                            ^^^^^^^^^^^^
2025-09-10T19:18:29.0715161Z 65 |         posts = [
2025-09-10T19:18:29.0715232Z 66 |             Post(
2025-09-10T19:18:29.0715301Z    |
2025-09-10T19:18:29.0715392Z help: Convert to `datetime.UTC` alias
2025-09-10T19:18:29.0715397Z 
2025-09-10T19:18:29.0715484Z UP017 [*] Use `datetime.UTC` alias
2025-09-10T19:18:29.0715585Z    --> tests/test_property_tests.py:102:28
2025-09-10T19:18:29.0715655Z     |
2025-09-10T19:18:29.0715860Z 100 |     def test_dedupe_then_rank_idempotent(self):
2025-09-10T19:18:29.0715986Z 101 |         """Test that dedupe then rank is idempotent."""
2025-09-10T19:18:29.0716086Z 102 |         now = datetime.now(timezone.utc)
2025-09-10T19:18:29.0716171Z     |                            ^^^^^^^^^^^^
2025-09-10T19:18:29.0716246Z 103 |         posts = [
2025-09-10T19:18:29.0716327Z 104 |             Post(
2025-09-10T19:18:29.0716397Z     |
2025-09-10T19:18:29.0716490Z help: Convert to `datetime.UTC` alias
2025-09-10T19:18:29.0716499Z 
2025-09-10T19:18:29.0716588Z UP017 [*] Use `datetime.UTC` alias
2025-09-10T19:18:29.0716686Z    --> tests/test_property_tests.py:155:28
2025-09-10T19:18:29.0716755Z     |
2025-09-10T19:18:29.0716879Z 153 |     def test_dedupe_preserves_post_integrity(self):
2025-09-10T19:18:29.0717034Z 154 |         """Test that deduplication preserves post data integrity."""
2025-09-10T19:18:29.0717132Z 155 |         now = datetime.now(timezone.utc)
2025-09-10T19:18:29.0717217Z     |                            ^^^^^^^^^^^^
2025-09-10T19:18:29.0717308Z 156 |         original_post = Post(
2025-09-10T19:18:29.0717388Z 157 |             id="1",
2025-09-10T19:18:29.0717455Z     |
2025-09-10T19:18:29.0717550Z help: Convert to `datetime.UTC` alias
2025-09-10T19:18:29.0717556Z 
2025-09-10T19:18:29.0717641Z UP017 [*] Use `datetime.UTC` alias
2025-09-10T19:18:29.0717741Z    --> tests/test_property_tests.py:191:28
2025-09-10T19:18:29.0717811Z     |
2025-09-10T19:18:29.0717932Z 189 |     def test_ranking_preserves_post_integrity(self):
2025-09-10T19:18:29.0718155Z 190 |         """Test that ranking preserves post data integrity."""
2025-09-10T19:18:29.0718257Z 191 |         now = datetime.now(timezone.utc)
2025-09-10T19:18:29.0718340Z     |                            ^^^^^^^^^^^^
2025-09-10T19:18:29.0718414Z 192 |         posts = [
2025-09-10T19:18:29.0718491Z 193 |             Post(
2025-09-10T19:18:29.0718557Z     |
2025-09-10T19:18:29.0718650Z help: Convert to `datetime.UTC` alias
2025-09-10T19:18:29.0718661Z 
2025-09-10T19:18:29.0718746Z UP017 [*] Use `datetime.UTC` alias
2025-09-10T19:18:29.0718847Z    --> tests/test_property_tests.py:249:28
2025-09-10T19:18:29.0718913Z     |
2025-09-10T19:18:29.0719016Z 247 |     def test_single_post_handling(self):
2025-09-10T19:18:29.0719146Z 248 |         """Test that single posts are handled consistently."""
2025-09-10T19:18:29.0719246Z 249 |         now = datetime.now(timezone.utc)
2025-09-10T19:18:29.0719325Z     |                            ^^^^^^^^^^^^
2025-09-10T19:18:29.0719414Z 250 |         post = Post(
2025-09-10T19:18:29.0719587Z 251 |             id="1",
2025-09-10T19:18:29.0719653Z     |
2025-09-10T19:18:29.0719749Z help: Convert to `datetime.UTC` alias
2025-09-10T19:18:29.0719754Z 
2025-09-10T19:18:29.0719839Z UP017 [*] Use `datetime.UTC` alias
2025-09-10T19:18:29.0719938Z    --> tests/test_property_tests.py:278:28
2025-09-10T19:18:29.0720004Z     |
2025-09-10T19:18:29.0720107Z 276 |     def test_dedupe_commutative(self):
2025-09-10T19:18:29.0720278Z 277 |         """Test that deduplication order doesn't matter for final result."""
2025-09-10T19:18:29.0720382Z 278 |         now = datetime.now(timezone.utc)
2025-09-10T19:18:29.0720458Z     |                            ^^^^^^^^^^^^
2025-09-10T19:18:29.0720537Z 279 |         posts_a = [
2025-09-10T19:18:29.0720937Z 280 |             Post(id="1", title="A1", score=100, num_comments=50, created_utc=now, subreddit="test", author="user1", url="https://exam…
2025-09-10T19:18:29.0721009Z     |
2025-09-10T19:18:29.0721110Z help: Convert to `datetime.UTC` alias
2025-09-10T19:18:29.0721119Z 
2025-09-10T19:18:29.0721202Z E501 Line too long (154 > 100)
2025-09-10T19:18:29.0721304Z    --> tests/test_property_tests.py:280:101
2025-09-10T19:18:29.0721369Z     |
2025-09-10T19:18:29.0721456Z 278 | …
2025-09-10T19:18:29.0721533Z 279 | …
2025-09-10T19:18:29.0721855Z 280 | …50, created_utc=now, subreddit="test", author="user1", url="https://example.com/1", text=""),
2025-09-10T19:18:29.0721957Z     |                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025-09-10T19:18:29.0722432Z 281 | …75, created_utc=now, subreddit="test", author="user2", url="https://example.com/2", text=""),
2025-09-10T19:18:29.0722510Z 282 | …
2025-09-10T19:18:29.0722580Z     |
2025-09-10T19:18:29.0722585Z 
2025-09-10T19:18:29.0722666Z E501 Line too long (154 > 100)
2025-09-10T19:18:29.0722768Z    --> tests/test_property_tests.py:281:101
2025-09-10T19:18:29.0722833Z     |
2025-09-10T19:18:29.0722913Z 279 | …
2025-09-10T19:18:29.0723220Z 280 | …50, created_utc=now, subreddit="test", author="user1", url="https://example.com/1", text=""),
2025-09-10T19:18:29.0723518Z 281 | …75, created_utc=now, subreddit="test", author="user2", url="https://example.com/2", text=""),
2025-09-10T19:18:29.0723616Z     |                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025-09-10T19:18:29.0723692Z 282 | …
2025-09-10T19:18:29.0723764Z     |
2025-09-10T19:18:29.0723769Z 
2025-09-10T19:18:29.0723849Z E501 Line too long (155 > 100)
2025-09-10T19:18:29.0723957Z    --> tests/test_property_tests.py:285:101
2025-09-10T19:18:29.0724021Z     |
2025-09-10T19:18:29.0724102Z 284 | …
2025-09-10T19:18:29.0724395Z 285 | …00, created_utc=now, subreddit="test", author="user3", url="https://example.com/3", text=""),
2025-09-10T19:18:29.0724493Z     |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025-09-10T19:18:29.0724793Z 286 | …25, created_utc=now, subreddit="test", author="user4", url="https://example.com/4", text=""),
2025-09-10T19:18:29.0724988Z 287 | …
2025-09-10T19:18:29.0725051Z     |
2025-09-10T19:18:29.0725062Z 
2025-09-10T19:18:29.0725142Z E501 Line too long (155 > 100)
2025-09-10T19:18:29.0725242Z    --> tests/test_property_tests.py:286:101
2025-09-10T19:18:29.0725308Z     |
2025-09-10T19:18:29.0725387Z 284 | …
2025-09-10T19:18:29.0725686Z 285 | …00, created_utc=now, subreddit="test", author="user3", url="https://example.com/3", text=""),
2025-09-10T19:18:29.0725994Z 286 | …25, created_utc=now, subreddit="test", author="user4", url="https://example.com/4", text=""),
2025-09-10T19:18:29.0726091Z     |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025-09-10T19:18:29.0726171Z 287 | …
2025-09-10T19:18:29.0726238Z     |
2025-09-10T19:18:29.0726243Z 
2025-09-10T19:18:29.0726335Z UP017 [*] Use `datetime.UTC` alias
2025-09-10T19:18:29.0726432Z    --> tests/test_property_tests.py:301:28
2025-09-10T19:18:29.0726503Z     |
2025-09-10T19:18:29.0726613Z 299 |     def test_ranking_commutative(self):
2025-09-10T19:18:29.0726773Z 300 |         """Test that ranking order doesn't matter for final result."""
2025-09-10T19:18:29.0726875Z 301 |         now = datetime.now(timezone.utc)
2025-09-10T19:18:29.0726957Z     |                            ^^^^^^^^^^^^
2025-09-10T19:18:29.0727036Z 302 |         posts_a = [
2025-09-10T19:18:29.0727387Z 303 |             Post(id="1", title="A1", score=100, num_comments=50, created_utc=now, subreddit="test", author="user1", url="https://exam…
2025-09-10T19:18:29.0727471Z     |
2025-09-10T19:18:29.0727562Z help: Convert to `datetime.UTC` alias
2025-09-10T19:18:29.0727568Z 
2025-09-10T19:18:29.0727654Z E501 Line too long (154 > 100)
2025-09-10T19:18:29.0727751Z    --> tests/test_property_tests.py:303:101
2025-09-10T19:18:29.0727821Z     |
2025-09-10T19:18:29.0727902Z 301 | …
2025-09-10T19:18:29.0727981Z 302 | …
2025-09-10T19:18:29.0728281Z 303 | …50, created_utc=now, subreddit="test", author="user1", url="https://example.com/1", text=""),
2025-09-10T19:18:29.0728390Z     |                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025-09-10T19:18:29.0728689Z 304 | …75, created_utc=now, subreddit="test", author="user2", url="https://example.com/2", text=""),
2025-09-10T19:18:29.0728772Z 305 | …
2025-09-10T19:18:29.0728841Z     |
2025-09-10T19:18:29.0728846Z 
2025-09-10T19:18:29.0728927Z E501 Line too long (154 > 100)
2025-09-10T19:18:29.0729032Z    --> tests/test_property_tests.py:304:101
2025-09-10T19:18:29.0729186Z     |
2025-09-10T19:18:29.0729267Z 302 | …
2025-09-10T19:18:29.0729668Z 303 | …50, created_utc=now, subreddit="test", author="user1", url="https://example.com/1", text=""),
2025-09-10T19:18:29.0729972Z 304 | …75, created_utc=now, subreddit="test", author="user2", url="https://example.com/2", text=""),
2025-09-10T19:18:29.0730069Z     |                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025-09-10T19:18:29.0730149Z 305 | …
2025-09-10T19:18:29.0730222Z     |
2025-09-10T19:18:29.0730228Z 
2025-09-10T19:18:29.0730311Z E501 Line too long (155 > 100)
2025-09-10T19:18:29.0730407Z    --> tests/test_property_tests.py:308:101
2025-09-10T19:18:29.0730476Z     |
2025-09-10T19:18:29.0730559Z 307 | …
2025-09-10T19:18:29.0730855Z 308 | …00, created_utc=now, subreddit="test", author="user3", url="https://example.com/3", text=""),
2025-09-10T19:18:29.0730957Z     |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025-09-10T19:18:29.0731262Z 309 | …25, created_utc=now, subreddit="test", author="user4", url="https://example.com/4", text=""),
2025-09-10T19:18:29.0731344Z 310 | …
2025-09-10T19:18:29.0731411Z     |
2025-09-10T19:18:29.0731416Z 
2025-09-10T19:18:29.0731496Z E501 Line too long (155 > 100)
2025-09-10T19:18:29.0731593Z    --> tests/test_property_tests.py:309:101
2025-09-10T19:18:29.0731660Z     |
2025-09-10T19:18:29.0731736Z 307 | …
2025-09-10T19:18:29.0732031Z 308 | …00, created_utc=now, subreddit="test", author="user3", url="https://example.com/3", text=""),
2025-09-10T19:18:29.0732455Z 309 | …25, created_utc=now, subreddit="test", author="user4", url="https://example.com/4", text=""),
2025-09-10T19:18:29.0732556Z     |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025-09-10T19:18:29.0732638Z 310 | …
2025-09-10T19:18:29.0732704Z     |
2025-09-10T19:18:29.0732708Z 
2025-09-10T19:18:29.0732825Z I001 [*] Import block is un-sorted or un-formatted
2025-09-10T19:18:29.0732919Z  --> tests/test_ranking.py:3:1
2025-09-10T19:18:29.0732987Z   |
2025-09-10T19:18:29.0733084Z 1 |   """Unit tests for ranking utilities."""
2025-09-10T19:18:29.0733151Z 2 |
2025-09-10T19:18:29.0733224Z 3 | / import pytest
2025-09-10T19:18:29.0733358Z 4 | | from datetime import datetime, timezone, timedelta
2025-09-10T19:18:29.0733521Z 5 | | from reddit_pipeline.ranking import composite_rank, rank_posts
2025-09-10T19:18:29.0733626Z 6 | | from reddit_pipeline.models import Post
2025-09-10T19:18:29.0733716Z   | |_______________________________________^
2025-09-10T19:18:29.0733785Z   |
2025-09-10T19:18:29.0733865Z help: Organize imports
2025-09-10T19:18:29.0733870Z 
2025-09-10T19:18:29.0733959Z F401 [*] `pytest` imported but unused
2025-09-10T19:18:29.0734043Z  --> tests/test_ranking.py:3:8
2025-09-10T19:18:29.0734113Z   |
2025-09-10T19:18:29.0734210Z 1 | """Unit tests for ranking utilities."""
2025-09-10T19:18:29.0734274Z 2 |
2025-09-10T19:18:29.0734349Z 3 | import pytest
2025-09-10T19:18:29.0734424Z   |        ^^^^^^
2025-09-10T19:18:29.0734554Z 4 | from datetime import datetime, timezone, timedelta
2025-09-10T19:18:29.0734713Z 5 | from reddit_pipeline.ranking import composite_rank, rank_posts
2025-09-10T19:18:29.0734840Z   |
2025-09-10T19:18:29.0735105Z help: Remove unused import: `pytest`
2025-09-10T19:18:29.0735112Z 
2025-09-10T19:18:29.0741471Z UP017 [*] Use `datetime.UTC` alias
2025-09-10T19:18:29.0741617Z   --> tests/test_ranking.py:14:28
2025-09-10T19:18:29.0741684Z    |
2025-09-10T19:18:29.0741802Z 12 |     def test_basic_ranking(self):
2025-09-10T19:18:29.0741938Z 13 |         """Test basic ranking with score and comments."""
2025-09-10T19:18:29.0742048Z 14 |         now = datetime.now(timezone.utc)
2025-09-10T19:18:29.0742135Z    |                            ^^^^^^^^^^^^
2025-09-10T19:18:29.0742373Z 15 |         score = composite_rank(score=100, comments=50, upvote_ratio=None, created_utc=now)
2025-09-10T19:18:29.0742442Z    |
2025-09-10T19:18:29.0742545Z help: Convert to `datetime.UTC` alias
2025-09-10T19:18:29.0742714Z 
2025-09-10T19:18:29.0742813Z UP017 [*] Use `datetime.UTC` alias
2025-09-10T19:18:29.0742908Z   --> tests/test_ranking.py:23:28
2025-09-10T19:18:29.0742975Z    |
2025-09-10T19:18:29.0743075Z 21 |     def test_with_upvote_ratio(self):
2025-09-10T19:18:29.0743191Z 22 |         """Test ranking with upvote ratio bonus."""
2025-09-10T19:18:29.0743292Z 23 |         now = datetime.now(timezone.utc)
2025-09-10T19:18:29.0743377Z    |                            ^^^^^^^^^^^^
2025-09-10T19:18:29.0743590Z 24 |         score = composite_rank(score=100, comments=50, upvote_ratio=0.8, created_utc=now)
2025-09-10T19:18:29.0743660Z    |
2025-09-10T19:18:29.0743753Z help: Convert to `datetime.UTC` alias
2025-09-10T19:18:29.0743759Z 
2025-09-10T19:18:29.0743849Z UP017 [*] Use `datetime.UTC` alias
2025-09-10T19:18:29.0743938Z   --> tests/test_ranking.py:31:28
2025-09-10T19:18:29.0744009Z    |
2025-09-10T19:18:29.0744100Z 29 |     def test_time_decay(self):
2025-09-10T19:18:29.0744227Z 30 |         """Test that older posts get lower scores."""
2025-09-10T19:18:29.0744336Z 31 |         now = datetime.now(timezone.utc)
2025-09-10T19:18:29.0744417Z    |                            ^^^^^^^^^^^^
2025-09-10T19:18:29.0744496Z 32 |         fresh = now
2025-09-10T19:18:29.0744631Z 33 |         old = now - timedelta(hours=48)  # 48 hours = half-life
2025-09-10T19:18:29.0744702Z    |
2025-09-10T19:18:29.0744799Z help: Convert to `datetime.UTC` alias
2025-09-10T19:18:29.0744805Z 
2025-09-10T19:18:29.0745011Z UP017 [*] Use `datetime.UTC` alias
2025-09-10T19:18:29.0745104Z   --> tests/test_ranking.py:44:33
2025-09-10T19:18:29.0745173Z    |
2025-09-10T19:18:29.0745261Z 42 |     def test_very_old_post(self):
2025-09-10T19:18:29.0745376Z 43 |         """Test very old posts get minimal scores."""
2025-09-10T19:18:29.0745525Z 44 |         very_old = datetime.now(timezone.utc) - timedelta(days=30)
2025-09-10T19:18:29.0745611Z    |                                 ^^^^^^^^^^^^
2025-09-10T19:18:29.0745732Z 45 |         score = composite_rank(1000, 100, 0.9, very_old)
2025-09-10T19:18:29.0745804Z    |
2025-09-10T19:18:29.0745897Z help: Convert to `datetime.UTC` alias
2025-09-10T19:18:29.0745903Z 
2025-09-10T19:18:29.0745989Z UP017 [*] Use `datetime.UTC` alias
2025-09-10T19:18:29.0746082Z   --> tests/test_ranking.py:52:28
2025-09-10T19:18:29.0746149Z    |
2025-09-10T19:18:29.0746239Z 50 |     def test_zero_values(self):
2025-09-10T19:18:29.0746342Z 51 |         """Test handling of zero values."""
2025-09-10T19:18:29.0746449Z 52 |         now = datetime.now(timezone.utc)
2025-09-10T19:18:29.0746531Z    |                            ^^^^^^^^^^^^
2025-09-10T19:18:29.0746732Z 53 |         score = composite_rank(score=0, comments=0, upvote_ratio=0.0, created_utc=now)
2025-09-10T19:18:29.0746817Z 54 |         assert score == 0.0
2025-09-10T19:18:29.0746889Z    |
2025-09-10T19:18:29.0746980Z help: Convert to `datetime.UTC` alias
2025-09-10T19:18:29.0746985Z 
2025-09-10T19:18:29.0747073Z UP017 [*] Use `datetime.UTC` alias
2025-09-10T19:18:29.0747168Z   --> tests/test_ranking.py:58:28
2025-09-10T19:18:29.0747233Z    |
2025-09-10T19:18:29.0747331Z 56 |     def test_negative_values(self):
2025-09-10T19:18:29.0747435Z 57 |         """Test handling of negative values."""
2025-09-10T19:18:29.0747539Z 58 |         now = datetime.now(timezone.utc)
2025-09-10T19:18:29.0747619Z    |                            ^^^^^^^^^^^^
2025-09-10T19:18:29.0747837Z 59 |         score = composite_rank(score=-10, comments=-5, upvote_ratio=-0.1, created_utc=now)
2025-09-10T19:18:29.0747909Z    |
2025-09-10T19:18:29.0748005Z help: Convert to `datetime.UTC` alias
2025-09-10T19:18:29.0748010Z 
2025-09-10T19:18:29.0748093Z UP017 [*] Use `datetime.UTC` alias
2025-09-10T19:18:29.0748186Z   --> tests/test_ranking.py:70:28
2025-09-10T19:18:29.0748250Z    |
2025-09-10T19:18:29.0748347Z 68 |     def test_rank_posts_basic(self):
2025-09-10T19:18:29.0748445Z 69 |         """Test basic post ranking."""
2025-09-10T19:18:29.0748545Z 70 |         now = datetime.now(timezone.utc)
2025-09-10T19:18:29.0748707Z    |                            ^^^^^^^^^^^^
2025-09-10T19:18:29.0748786Z 71 |         posts = [
2025-09-10T19:18:29.0748862Z 72 |             Post(
2025-09-10T19:18:29.0748930Z    |
2025-09-10T19:18:29.0749026Z help: Convert to `datetime.UTC` alias
2025-09-10T19:18:29.0749032Z 
2025-09-10T19:18:29.0749116Z UP017 [*] Use `datetime.UTC` alias
2025-09-10T19:18:29.0749211Z    --> tests/test_ranking.py:104:28
2025-09-10T19:18:29.0749276Z     |
2025-09-10T19:18:29.0749425Z 102 |     def test_rank_posts_same_score_different_comments(self):
2025-09-10T19:18:29.0749707Z 103 |         """Test ranking when scores are same but comments differ."""
2025-09-10T19:18:29.0749816Z 104 |         now = datetime.now(timezone.utc)
2025-09-10T19:18:29.0749895Z     |                            ^^^^^^^^^^^^
2025-09-10T19:18:29.0749974Z 105 |         posts = [
2025-09-10T19:18:29.0750045Z 106 |             Post(
2025-09-10T19:18:29.0750115Z     |
2025-09-10T19:18:29.0750210Z help: Convert to `datetime.UTC` alias
2025-09-10T19:18:29.0750220Z 
2025-09-10T19:18:29.0750314Z UP017 [*] Use `datetime.UTC` alias
2025-09-10T19:18:29.0750407Z    --> tests/test_ranking.py:138:28
2025-09-10T19:18:29.0750474Z     |
2025-09-10T19:18:29.0750581Z 136 |     def test_rank_posts_time_decay(self):
2025-09-10T19:18:29.0750731Z 137 |         """Test that newer posts rank higher with same engagement."""
2025-09-10T19:18:29.0750838Z 138 |         now = datetime.now(timezone.utc)
2025-09-10T19:18:29.0750915Z     |                            ^^^^^^^^^^^^
2025-09-10T19:18:29.0751112Z 139 |         fresh = now
2025-09-10T19:18:29.0751209Z 140 |         old = now - timedelta(hours=24)
2025-09-10T19:18:29.0751277Z     |
2025-09-10T19:18:29.0751369Z help: Convert to `datetime.UTC` alias
2025-09-10T19:18:29.0751374Z 
2025-09-10T19:18:29.0751462Z UP017 [*] Use `datetime.UTC` alias
2025-09-10T19:18:29.0751549Z    --> tests/test_ranking.py:180:28
2025-09-10T19:18:29.0751618Z     |
2025-09-10T19:18:29.0751721Z 178 |     def test_rank_posts_single_post(self):
2025-09-10T19:18:29.0751823Z 179 |         """Test ranking single post."""
2025-09-10T19:18:29.0751923Z 180 |         now = datetime.now(timezone.utc)
2025-09-10T19:18:29.0752004Z     |                            ^^^^^^^^^^^^
2025-09-10T19:18:29.0752084Z 181 |         post = Post(
2025-09-10T19:18:29.0752157Z 182 |             id="1",
2025-09-10T19:18:29.0752225Z     |
2025-09-10T19:18:29.0752317Z help: Convert to `datetime.UTC` alias
2025-09-10T19:18:29.0752322Z 
2025-09-10T19:18:29.0752443Z I001 [*] Import block is un-sorted or un-formatted
2025-09-10T19:18:29.0752534Z   --> tests/test_security.py:3:1
2025-09-10T19:18:29.0752602Z    |
2025-09-10T19:18:29.0752746Z  1 |   """Unit tests for security utilities and PII stripping."""
2025-09-10T19:18:29.0752816Z  2 |
2025-09-10T19:18:29.0752891Z  3 | / import pytest
2025-09-10T19:18:29.0752997Z  4 | | from reddit_pipeline.security import (
2025-09-10T19:18:29.0753081Z  5 | |     strip_pii_from_text,
2025-09-10T19:18:29.0753168Z  6 | |     strip_pii_from_comment,
2025-09-10T19:18:29.0753256Z  7 | |     strip_pii_from_comments,
2025-09-10T19:18:29.0753339Z  8 | |     strip_pii_from_post,
2025-09-10T19:18:29.0753422Z  9 | |     sanitize_for_display,
2025-09-10T19:18:29.0753513Z 10 | |     validate_no_pii_remaining,
2025-09-10T19:18:29.0753581Z 11 | | )
2025-09-10T19:18:29.0753682Z    | |_^
2025-09-10T19:18:29.0753750Z    |
2025-09-10T19:18:29.0753831Z help: Organize imports
2025-09-10T19:18:29.0753836Z 
2025-09-10T19:18:29.0753925Z F401 [*] `pytest` imported but unused
2025-09-10T19:18:29.0754016Z  --> tests/test_security.py:3:8
2025-09-10T19:18:29.0754083Z   |
2025-09-10T19:18:29.0754224Z 1 | """Unit tests for security utilities and PII stripping."""
2025-09-10T19:18:29.0754292Z 2 |
2025-09-10T19:18:29.0754365Z 3 | import pytest
2025-09-10T19:18:29.0754434Z   |        ^^^^^^
2025-09-10T19:18:29.0754539Z 4 | from reddit_pipeline.security import (
2025-09-10T19:18:29.0754624Z 5 |     strip_pii_from_text,
2025-09-10T19:18:29.0754688Z   |
2025-09-10T19:18:29.0754900Z help: Remove unused import: `pytest`
2025-09-10T19:18:29.0754905Z 
2025-09-10T19:18:29.0755017Z I001 [*] Import block is un-sorted or un-formatted
2025-09-10T19:18:29.0755103Z  --> tests/test_utils.py:3:1
2025-09-10T19:18:29.0755166Z   |
2025-09-10T19:18:29.0755264Z 1 |   """Unit tests for utility functions."""
2025-09-10T19:18:29.0755327Z 2 |
2025-09-10T19:18:29.0755402Z 3 | / import pytest
2025-09-10T19:18:29.0755476Z 4 | | import json
2025-09-10T19:18:29.0755547Z 5 | | import time
2025-09-10T19:18:29.0755665Z 6 | | from unittest.mock import patch, MagicMock
2025-09-10T19:18:29.0755850Z 7 | | from reddit_pipeline.utils import get_json_logger, retry_with_backoff
2025-09-10T19:18:29.0755967Z   | |_____________________________________________________________________^
2025-09-10T19:18:29.0756031Z   |
2025-09-10T19:18:29.0756116Z help: Organize imports
2025-09-10T19:18:29.0756122Z 
2025-09-10T19:18:29.0756249Z F401 [*] `unittest.mock.MagicMock` imported but unused
2025-09-10T19:18:29.0756342Z  --> tests/test_utils.py:6:34
2025-09-10T19:18:29.0756405Z   |
2025-09-10T19:18:29.0756480Z 4 | import json
2025-09-10T19:18:29.0756550Z 5 | import time
2025-09-10T19:18:29.0756660Z 6 | from unittest.mock import patch, MagicMock
2025-09-10T19:18:29.0756744Z   |                                  ^^^^^^^^^
2025-09-10T19:18:29.0756923Z 7 | from reddit_pipeline.utils import get_json_logger, retry_with_backoff
2025-09-10T19:18:29.0756989Z   |
2025-09-10T19:18:29.0757124Z help: Remove unused import: `unittest.mock.MagicMock`
2025-09-10T19:18:29.0757210Z 
2025-09-10T19:18:29.0757297Z E501 Line too long (107 > 100)
2025-09-10T19:18:29.0757386Z    --> tests/test_utils.py:130:101
2025-09-10T19:18:29.0757453Z     |
2025-09-10T19:18:29.0757530Z 128 |         call_count = 0
2025-09-10T19:18:29.0757599Z 129 |         
2025-09-10T19:18:29.0757873Z 130 |         @retry_with_backoff(exceptions=(ValueError, RuntimeError), max_attempts=3, base_delay_seconds=0.01)
2025-09-10T19:18:29.0757979Z     |                                                                                                     ^^^^^^^
2025-09-10T19:18:29.0758087Z 131 |         def func_with_correct_exception():
2025-09-10T19:18:29.0758173Z 132 |             nonlocal call_count
2025-09-10T19:18:29.0758239Z     |
2025-09-10T19:18:29.0758244Z 
2025-09-10T19:18:29.0758317Z Found 225 errors.
2025-09-10T19:18:29.0758412Z [*] 131 fixable with the `--fix` option.
2025-09-10T19:18:29.0768064Z ##[error]Process completed with exit code 1.
